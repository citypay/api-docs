{
	"info": {
		"_postman_id": "dfba0958-0dc6-442c-8f59-12a66cf1a1b2",
		"name": "CityPay Payment API",
		"description": "\nThis CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It\nprovides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing,\n3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and\nCompletion processing. The API is also capable of tokinsed payments using Card Holder Accounts.\n\n## Compliance and Security\nYour application will need to adhere to PCI-DSS standards to operate safely and to meet requirements set out by \nVisa and MasterCard and the PCI Security Standards Council. These include\n\n* Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at\n  lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments\n  as part of our compliance program.\n* The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or\n  primary access number (PAN)\n* The application must not display the full card number on receipts, it is recommended to mask the PAN\n  and show the last 4 digits. The API will return this for you for ease of receipt creation\n* If you are developing a website, you will be required to perform regular scans on the network where you host the\n  application to meet your compliance obligations\n* You will be required to be PCI Compliant and the application must adhere to the security standard. Further information\n  is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/)\n* The API verifies that the request is for a valid account and originates from a trusted source using the remote IP\n  address. Our application firewalls analyse data that may be an attempt to break a large number of security common\n  security vulnerabilities.\n\n\nContact Support:\n Name: CityPay Support\n Email: support@citypay.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "2718854-dfba0958-0dc6-442c-8f59-12a66cf1a1b2"
	},
	"item": [
		{
			"name": "direct",
			"item": [
				{
					"name": "cres",
					"item": [
						{
							"name": "Handles a CRes response from ACS, returning back the result of authorisation",
							"id": "518f357d-0bac-47b3-ba85-2935f1a3f0ad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "cres",
											"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo...",
											"description": "The CRES from the ACS."
										},
										{
											"key": "threeDSSessionData",
											"value": "tempor minim dolore",
											"description": "The session data from the ACS."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/cres/auth/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"cres",
										"auth",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "velit dolor",
											"description": "(Required) An identifier used to track the CReq/CRes cycle."
										}
									]
								},
								"description": "Used to post from an ACS during a ThreeDSecure direct flow process. The endpoint requires a valid `threeDSSessionData`\nvalue which defines the unique transaction through its workflow. This endpoint may be used by merchants wishing to\nperform a `Direct Post` integration who wish to handle the challenge flow themselves.\n"
							},
							"response": [
								{
									"id": "99b932c4-d2ba-4e99-a830-a9a7295f3e2b",
									"name": "A result of a successful tokenisation or authorisation process if called via an XHR method.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/auth/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"auth",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"merchantid\": 11223344,\n  \"result\": 1,\n  \"result_code\": \"nostrud sit mollit\",\n  \"result_message\": \"Accepted Transaction\",\n  \"amount\": 3600,\n  \"atrn\": \"pariatur velit anim\",\n  \"atsd\": \"Lorem cillum elit reprehenderit\",\n  \"authcode\": \"001245A\",\n  \"authen_result\": \"aliqua ullamco quis adipisicing eiusmod\",\n  \"authorised\": true,\n  \"avs_result\": \"pariatur non est quis voluptate\",\n  \"bin_commercial\": true,\n  \"bin_debit\": true,\n  \"bin_description\": \"Platinum Card\",\n  \"cavv\": \"dolore anim\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"csc_result\": \"consectetur sunt\",\n  \"currency\": \"GBP\",\n  \"datetime\": \"2020-01-02T18:32:28Z\",\n  \"eci\": \"dolore aute veniam culpa labore\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"live\": true,\n  \"maskedpan\": \"4***********0002\",\n  \"scheme\": \"Visa\",\n  \"sha256\": \"anim aliquip proident consequat commodo\",\n  \"trans_status\": \"velit\",\n  \"transno\": 78416\n}"
								},
								{
									"id": "05c444e5-0227-4a70-93a2-4fe221a5915d",
									"name": "Redirect. A result of a successful tokenisation or authorisation process, redirecting to the success URL.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/auth/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"auth",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "See Other",
									"code": 303,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/x-www-form-urlencoded"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "508aea79-bf6c-490c-af6a-0d3d66f5d4d9",
									"name": "Redirect. A result of a non-successful tokenisation or authorisation process, redirecting to the failure URL.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/auth/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"auth",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Temporary Redirect (since HTTP/1.1)",
									"code": 307,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/x-www-form-urlencoded"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "7f43c63a-be2a-41f8-afd2-ff1a3c75c63a",
									"name": "Unauthorized. No domain key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/auth/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"auth",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "816cdc51-61d9-4ef9-a38b-3ce4be01195b",
									"name": "Forbidden. The domain key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/auth/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"auth",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "8b3ebe43-735e-4170-a820-e3b2885b055c",
									"name": "Not Acceptable. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/auth/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"auth",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "6b41b467-7666-4929-b211-06634909bc18",
									"name": "Bad Request. Should the incoming data not be validly determined and an error code results.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/auth/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"auth",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/x-www-form-urlencoded"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "427836bc-cb4b-43ff-847e-9a5169b733a0",
									"name": "Server Error. Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/auth/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"auth",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Handles a CRes response from ACS, returning back a token for future authorisation",
							"id": "8eaf8635-ddc4-4778-94aa-82af43f95e14",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "cres",
											"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo...",
											"description": "The CRES from the ACS."
										},
										{
											"key": "threeDSSessionData",
											"value": "tempor minim dolore",
											"description": "The session data from the ACS."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/cres/tokenise/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"cres",
										"tokenise",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "velit dolor",
											"description": "(Required) An identifier used to track the CReq/CRes cycle."
										}
									]
								},
								"description": "Used to post from an ACS during a ThreeDSecure direct flow process. The endpoint requires a valid `threeDSSessionData`\nvalue which defines the unique transaction through its workflow. This endpoint may be used by merchants wishing to\nperform a `Direct Post` integration who wish to handle the challenge flow themselves.\n"
							},
							"response": [
								{
									"id": "bed057df-0043-44be-bad2-167ad03c294f",
									"name": "A result of a successful tokenisation or authorisation process if called via an XHR method.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/tokenise/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"tokenise",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"authen_result\": \"voluptate non proident exercitation in\",\n  \"bin_commercial\": false,\n  \"bin_debit\": true,\n  \"bin_description\": \"Platinum Card\",\n  \"eci\": \"aliqua quis ut\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"maskedpan\": \"4***********0002\",\n  \"scheme\": \"Visa\",\n  \"sig_id\": \"YWV3ZmF3ZWZhd2VmYXdmMmZhZWYzYWVn\",\n  \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\"\n}"
								},
								{
									"id": "0223a0a2-7613-45fa-a814-4ae2f6594e6f",
									"name": "Redirect. A result of a successful tokenisation or authorisation process, redirecting to the success URL.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/tokenise/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"tokenise",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "See Other",
									"code": 303,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/x-www-form-urlencoded"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "935bef44-bc5f-4525-b622-9ed9cf125024",
									"name": "Redirect. A result of a non-successful tokenisation or authorisation process, redirecting to the failure URL.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/tokenise/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"tokenise",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Temporary Redirect (since HTTP/1.1)",
									"code": 307,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/x-www-form-urlencoded"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "73e31117-89cf-4f65-96e6-c2a5ac63ef08",
									"name": "Unauthorized. No domain key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/tokenise/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"tokenise",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "3b9a80e2-6e00-4c04-8d46-9eecc0a7fa05",
									"name": "Forbidden. The domain key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/tokenise/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"tokenise",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "dbcc5c5d-1f26-4712-80e5-66bbbba8e8a9",
									"name": "Not Acceptable. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/tokenise/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"tokenise",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "f4c5a2bb-f0b6-4935-b39e-53412952fa2a",
									"name": "Bad Request. Should the incoming data not be validly determined and an error code results.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/tokenise/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"tokenise",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/x-www-form-urlencoded"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "c1523f31-4f42-4f3a-8930-6b82741067fb",
									"name": "Server Error. Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The CRES from the ACS.",
													"key": "cres",
													"value": "x90+vZ/7Ll05Vid/jPfQn8adw+4D/vRDUGT19kndW97Hfirbv66ycfSp8jNlvy7PkHbx44NEt3vo..."
												},
												{
													"description": "The session data from the ACS.",
													"key": "threeDSSessionData",
													"value": "tempor minim dolore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/direct/cres/tokenise/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"direct",
												"cres",
												"tokenise",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "velit dolor",
													"description": "(Required) An identifier used to track the CReq/CRes cycle."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "b95789b1-f3f2-4624-bca7-2b3603c7c47b"
				},
				{
					"name": "Direct Post Auth Request",
					"id": "f4210fff-34c1-45ab-b40a-1b2d6fcd5336",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "3600",
									"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n"
								},
								{
									"key": "cardnumber",
									"value": "4000 0000 0000 0002",
									"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n"
								},
								{
									"key": "expmonth",
									"value": "9",
									"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n"
								},
								{
									"key": "expyear",
									"value": "2025",
									"description": "(Required) The year of expiry of the card.\n"
								},
								{
									"key": "identifier",
									"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95",
									"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n"
								},
								{
									"key": "mac",
									"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D",
									"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n"
								},
								{
									"key": "avs_postcode_policy",
									"value": "ullamco ad",
									"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n"
								},
								{
									"key": "address1",
									"value": "79 Parliament St"
								},
								{
									"key": "address2",
									"value": "Westminster"
								},
								{
									"key": "address3",
									"value": "Lorem id ut offic"
								},
								{
									"key": "area",
									"value": "London"
								},
								{
									"key": "company",
									"value": "Acme Ltd"
								},
								{
									"key": "country",
									"value": "GB"
								},
								{
									"key": "email",
									"value": "card.holder@citypay.com"
								},
								{
									"key": "firstname",
									"value": "John"
								},
								{
									"key": "lastname",
									"value": "Smith"
								},
								{
									"key": "mobile_no",
									"value": "enim dolor"
								},
								{
									"key": "postcode",
									"value": "L1 789"
								},
								{
									"key": "telephone_no",
									"value": "fug"
								},
								{
									"key": "title",
									"value": "Mr"
								},
								{
									"key": "csc",
									"value": "eius",
									"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n"
								},
								{
									"key": "csc_policy",
									"value": "cupidatat non mollit in",
									"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n"
								},
								{
									"key": "currency",
									"value": "GBP",
									"description": "The processing currency for the transaction. Will default to the merchant account currency."
								},
								{
									"key": "duplicate_policy",
									"value": "do aute",
									"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n"
								},
								{
									"key": "match_avsa",
									"value": "velit adipisicing ea esse",
									"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n"
								},
								{
									"key": "name_on_card",
									"value": "MR NE BODY",
									"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n"
								},
								{
									"key": "nonce",
									"value": "0123456789ABCDEF",
									"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n"
								},
								{
									"key": "redirect_failure",
									"value": "https://pay.mystore.com/continue_failure",
									"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n"
								},
								{
									"key": "redirect_success",
									"value": "https://pay.mystore.com/continue_success",
									"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n"
								},
								{
									"key": "address1",
									"value": "79 Parliament St"
								},
								{
									"key": "address2",
									"value": "Westminster"
								},
								{
									"key": "address3",
									"value": "in"
								},
								{
									"key": "area",
									"value": "London"
								},
								{
									"key": "company",
									"value": "Acme Ltd"
								},
								{
									"key": "country",
									"value": "GB"
								},
								{
									"key": "email",
									"value": "card.holder@citypay.com"
								},
								{
									"key": "firstname",
									"value": "John"
								},
								{
									"key": "lastname",
									"value": "Smith"
								},
								{
									"key": "mobile_no",
									"value": "molli"
								},
								{
									"key": "postcode",
									"value": "L1 789"
								},
								{
									"key": "telephone_no",
									"value": "elit ut et"
								},
								{
									"key": "title",
									"value": "Mr"
								},
								{
									"key": "accept_headers",
									"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
								},
								{
									"key": "browserColorDepth",
									"value": "laboris non officia anim"
								},
								{
									"key": "browserIP",
									"value": "minim aliqua culpa in"
								},
								{
									"key": "browserJavaEnabled",
									"value": "ve"
								},
								{
									"key": "browserLanguage",
									"value": "mollit magna"
								},
								{
									"key": "browserScreenHeight",
									"value": "nisi aute ut reprehenderit"
								},
								{
									"key": "browserScreenWidth",
									"value": "ut elit"
								},
								{
									"key": "browserTZ",
									"value": "cillum enim"
								},
								{
									"key": "cp_bx",
									"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
								},
								{
									"key": "downgrade1",
									"value": "true"
								},
								{
									"key": "merchant_termurl",
									"value": "https://mysite.com/acs/return"
								},
								{
									"key": "tds_policy",
									"value": "eu lab"
								},
								{
									"key": "user_agent",
									"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
								},
								{
									"key": "trans_info",
									"value": "veniam ut aute nulla velit",
									"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id."
								},
								{
									"key": "trans_type",
									"value": "",
									"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/direct/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"direct",
								"auth"
							]
						},
						"description": "Used to initiate a direct post request transaction flow.\n\n<pre class=\"inline-code language-bash\">\n<code>\ncurl https://api.citypay.com/v6/direct?cp-domain-key=n834ytqp84y... \\\n -d \"amount=7500&identifier=example_trans&cardnumber=4000000000000002&expmonth=9&expyear=2028&bill_to_postcode=L1+7ZW\n</code>\n</pre>.\n"
					},
					"response": [
						{
							"id": "b246a4b4-954c-4439-9186-8fdbf5cadf3f",
							"name": "A result of a successful tokenisation or authorisation process if called via an XHR method.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"merchantid\": 11223344,\n  \"result\": 1,\n  \"result_code\": \"nostrud sit mollit\",\n  \"result_message\": \"Accepted Transaction\",\n  \"amount\": 3600,\n  \"atrn\": \"pariatur velit anim\",\n  \"atsd\": \"Lorem cillum elit reprehenderit\",\n  \"authcode\": \"001245A\",\n  \"authen_result\": \"aliqua ullamco quis adipisicing eiusmod\",\n  \"authorised\": true,\n  \"avs_result\": \"pariatur non est quis voluptate\",\n  \"bin_commercial\": true,\n  \"bin_debit\": true,\n  \"bin_description\": \"Platinum Card\",\n  \"cavv\": \"dolore anim\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"csc_result\": \"consectetur sunt\",\n  \"currency\": \"GBP\",\n  \"datetime\": \"2020-01-02T18:32:28Z\",\n  \"eci\": \"dolore aute veniam culpa labore\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"live\": true,\n  \"maskedpan\": \"4***********0002\",\n  \"scheme\": \"Visa\",\n  \"sha256\": \"anim aliquip proident consequat commodo\",\n  \"trans_status\": \"velit\",\n  \"transno\": 78416\n}"
						},
						{
							"id": "402a234c-b4e6-453d-8931-4ebe747058d3",
							"name": "Redirect. A result of a successful tokenisation or authorisation process, redirecting to the success URL.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"auth"
									]
								}
							},
							"status": "See Other",
							"code": 303,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/x-www-form-urlencoded"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "afc16c78-c472-4faf-b9a7-21ebb72d6cbf",
							"name": "Redirect. A result of a non-successful tokenisation or authorisation process, redirecting to the failure URL.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"auth"
									]
								}
							},
							"status": "Temporary Redirect (since HTTP/1.1)",
							"code": 307,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/x-www-form-urlencoded"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "94ea9314-b14f-45b0-a532-23d3948d26e3",
							"name": "Unauthorized. No domain key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"auth"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "6adeaab0-eb40-46ac-be32-513ec6e3082d",
							"name": "Forbidden. The domain key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"auth"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "f2465c60-0892-420d-bb65-a64b71ef3646",
							"name": "Not Acceptable. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"auth"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "993e6291-3dca-4e41-979b-c6b1ff944a99",
							"name": "Bad Request. Should the incoming data not be validly determined and an error code results.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"auth"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "020a5d5d-42ec-4f14-ace7-88b1fdde995a",
							"name": "Server Error. Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"auth"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Direct Post Token Request",
					"id": "cf2602cf-89b0-43bc-b227-8f75bf2f8859",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "nonce",
									"value": "0123456789ABCDEF",
									"description": "A random value string which is provided to the API to perform a digest.\nThe value will be used by its UTF-8 byte representation of any digest function.\n"
								},
								{
									"key": "redirect_failure",
									"value": "https://pay.mystore.com/continue_failure",
									"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n"
								},
								{
									"key": "redirect_success",
									"value": "https://pay.mystore.com/continue_success",
									"description": "The URL used to redirect back to your site when a transaction has been authorised. Required if a url-encoded request.\n"
								},
								{
									"key": "token",
									"value": "ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr",
									"description": "The token required to process the transaction as presented by the direct post methodology.\n"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/direct/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"direct",
								"token"
							]
						},
						"description": "Perform a request for authorisation for a previously generated token. This flow will return an authorisation\nresponse stating that the transaction was approved or declined.\n"
					},
					"response": [
						{
							"id": "e7f803c8-aded-4baa-95cc-6f2853a84023",
							"name": "A result of an authorisation process if called via an XHR method.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "A random value string which is provided to the API to perform a digest.\nThe value will be used by its UTF-8 byte representation of any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"description": "The token required to process the transaction as presented by the direct post methodology.\n",
											"key": "token",
											"value": "ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"merchantid\": 11223344,\n  \"result\": 1,\n  \"result_code\": \"nostrud sit mollit\",\n  \"result_message\": \"Accepted Transaction\",\n  \"amount\": 3600,\n  \"atrn\": \"pariatur velit anim\",\n  \"atsd\": \"Lorem cillum elit reprehenderit\",\n  \"authcode\": \"001245A\",\n  \"authen_result\": \"aliqua ullamco quis adipisicing eiusmod\",\n  \"authorised\": true,\n  \"avs_result\": \"pariatur non est quis voluptate\",\n  \"bin_commercial\": true,\n  \"bin_debit\": true,\n  \"bin_description\": \"Platinum Card\",\n  \"cavv\": \"dolore anim\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"csc_result\": \"consectetur sunt\",\n  \"currency\": \"GBP\",\n  \"datetime\": \"2020-01-02T18:32:28Z\",\n  \"eci\": \"dolore aute veniam culpa labore\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"live\": true,\n  \"maskedpan\": \"4***********0002\",\n  \"scheme\": \"Visa\",\n  \"sha256\": \"anim aliquip proident consequat commodo\",\n  \"trans_status\": \"velit\",\n  \"transno\": 78416\n}"
						},
						{
							"id": "9d7ffb82-8d40-4e6c-93e0-fcec9cef1b3c",
							"name": "Redirect. A result of a successful tokenisation or authorisation process, redirecting to the success URL.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "A random value string which is provided to the API to perform a digest.\nThe value will be used by its UTF-8 byte representation of any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"description": "The token required to process the transaction as presented by the direct post methodology.\n",
											"key": "token",
											"value": "ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"token"
									]
								}
							},
							"status": "See Other",
							"code": 303,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/x-www-form-urlencoded"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "35a0ac6f-e127-4b6b-bf25-ba8923fbfb5d",
							"name": "Redirect. A result of a non-successful tokenisation or authorisation process, redirecting to the failure URL.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "A random value string which is provided to the API to perform a digest.\nThe value will be used by its UTF-8 byte representation of any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"description": "The token required to process the transaction as presented by the direct post methodology.\n",
											"key": "token",
											"value": "ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"token"
									]
								}
							},
							"status": "Temporary Redirect (since HTTP/1.1)",
							"code": 307,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/x-www-form-urlencoded"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "d721a35f-75b5-49b7-ac88-dfd5672393e1",
							"name": "Unauthorized. No domain key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "A random value string which is provided to the API to perform a digest.\nThe value will be used by its UTF-8 byte representation of any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"description": "The token required to process the transaction as presented by the direct post methodology.\n",
											"key": "token",
											"value": "ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"token"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "e3381ef4-2544-4fdb-bb6a-aa317b06afda",
							"name": "Forbidden. The domain key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "A random value string which is provided to the API to perform a digest.\nThe value will be used by its UTF-8 byte representation of any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"description": "The token required to process the transaction as presented by the direct post methodology.\n",
											"key": "token",
											"value": "ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"token"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "216c4bdf-b44a-4f18-a47c-e4d9ed19d726",
							"name": "Not Acceptable. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "A random value string which is provided to the API to perform a digest.\nThe value will be used by its UTF-8 byte representation of any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"description": "The token required to process the transaction as presented by the direct post methodology.\n",
											"key": "token",
											"value": "ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"token"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "d4eeb8fa-e3fb-40b1-a416-c490dccfaa5e",
							"name": "Bad Request. Should the incoming data not be validly determined and an error code results.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "A random value string which is provided to the API to perform a digest.\nThe value will be used by its UTF-8 byte representation of any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"description": "The token required to process the transaction as presented by the direct post methodology.\n",
											"key": "token",
											"value": "ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"token"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						}
					]
				},
				{
					"name": "Direct Post Tokenise Request",
					"id": "cdb125bd-cd87-42c7-871d-ad773c831e73",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "3600",
									"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n"
								},
								{
									"key": "cardnumber",
									"value": "4000 0000 0000 0002",
									"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n"
								},
								{
									"key": "expmonth",
									"value": "9",
									"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n"
								},
								{
									"key": "expyear",
									"value": "2025",
									"description": "(Required) The year of expiry of the card.\n"
								},
								{
									"key": "identifier",
									"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95",
									"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n"
								},
								{
									"key": "mac",
									"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D",
									"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n"
								},
								{
									"key": "avs_postcode_policy",
									"value": "ullamco ad",
									"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n"
								},
								{
									"key": "address1",
									"value": "79 Parliament St"
								},
								{
									"key": "address2",
									"value": "Westminster"
								},
								{
									"key": "address3",
									"value": "Lorem id ut offic"
								},
								{
									"key": "area",
									"value": "London"
								},
								{
									"key": "company",
									"value": "Acme Ltd"
								},
								{
									"key": "country",
									"value": "GB"
								},
								{
									"key": "email",
									"value": "card.holder@citypay.com"
								},
								{
									"key": "firstname",
									"value": "John"
								},
								{
									"key": "lastname",
									"value": "Smith"
								},
								{
									"key": "mobile_no",
									"value": "enim dolor"
								},
								{
									"key": "postcode",
									"value": "L1 789"
								},
								{
									"key": "telephone_no",
									"value": "fug"
								},
								{
									"key": "title",
									"value": "Mr"
								},
								{
									"key": "csc",
									"value": "eius",
									"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n"
								},
								{
									"key": "csc_policy",
									"value": "cupidatat non mollit in",
									"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n"
								},
								{
									"key": "currency",
									"value": "GBP",
									"description": "The processing currency for the transaction. Will default to the merchant account currency."
								},
								{
									"key": "duplicate_policy",
									"value": "do aute",
									"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n"
								},
								{
									"key": "match_avsa",
									"value": "velit adipisicing ea esse",
									"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n"
								},
								{
									"key": "name_on_card",
									"value": "MR NE BODY",
									"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n"
								},
								{
									"key": "nonce",
									"value": "0123456789ABCDEF",
									"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n"
								},
								{
									"key": "redirect_failure",
									"value": "https://pay.mystore.com/continue_failure",
									"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n"
								},
								{
									"key": "redirect_success",
									"value": "https://pay.mystore.com/continue_success",
									"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n"
								},
								{
									"key": "address1",
									"value": "79 Parliament St"
								},
								{
									"key": "address2",
									"value": "Westminster"
								},
								{
									"key": "address3",
									"value": "in"
								},
								{
									"key": "area",
									"value": "London"
								},
								{
									"key": "company",
									"value": "Acme Ltd"
								},
								{
									"key": "country",
									"value": "GB"
								},
								{
									"key": "email",
									"value": "card.holder@citypay.com"
								},
								{
									"key": "firstname",
									"value": "John"
								},
								{
									"key": "lastname",
									"value": "Smith"
								},
								{
									"key": "mobile_no",
									"value": "molli"
								},
								{
									"key": "postcode",
									"value": "L1 789"
								},
								{
									"key": "telephone_no",
									"value": "elit ut et"
								},
								{
									"key": "title",
									"value": "Mr"
								},
								{
									"key": "accept_headers",
									"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
								},
								{
									"key": "browserColorDepth",
									"value": "laboris non officia anim"
								},
								{
									"key": "browserIP",
									"value": "minim aliqua culpa in"
								},
								{
									"key": "browserJavaEnabled",
									"value": "ve"
								},
								{
									"key": "browserLanguage",
									"value": "mollit magna"
								},
								{
									"key": "browserScreenHeight",
									"value": "nisi aute ut reprehenderit"
								},
								{
									"key": "browserScreenWidth",
									"value": "ut elit"
								},
								{
									"key": "browserTZ",
									"value": "cillum enim"
								},
								{
									"key": "cp_bx",
									"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
								},
								{
									"key": "downgrade1",
									"value": "true"
								},
								{
									"key": "merchant_termurl",
									"value": "https://mysite.com/acs/return"
								},
								{
									"key": "tds_policy",
									"value": "eu lab"
								},
								{
									"key": "user_agent",
									"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
								},
								{
									"key": "trans_info",
									"value": "veniam ut aute nulla velit",
									"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id."
								},
								{
									"key": "trans_type",
									"value": "",
									"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/direct/tokenise",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"direct",
								"tokenise"
							]
						},
						"description": "Used to initiate a direct post request transaction flow.\n\n<pre class=\"inline-code language-bash\">\n<code>\ncurl https://api.citypay.com/v6/direct?cp-domain-key=n834ytqp84y... \\\n -d \"amount=7500&identifier=example_trans&cardnumber=4000000000000002&expmonth=9&expyear=2028&bill_to_postcode=L1+7ZW\n</code>\n</pre>.\n"
					},
					"response": [
						{
							"id": "41671aae-ab19-48f7-82c9-83d753f390dd",
							"name": "A result of a successful tokenisation or authorisation process if called via an XHR method.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/tokenise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"tokenise"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"merchantid\": 11223344,\n  \"result\": 1,\n  \"result_code\": \"nostrud sit mollit\",\n  \"result_message\": \"Accepted Transaction\",\n  \"amount\": 3600,\n  \"atrn\": \"pariatur velit anim\",\n  \"atsd\": \"Lorem cillum elit reprehenderit\",\n  \"authcode\": \"001245A\",\n  \"authen_result\": \"aliqua ullamco quis adipisicing eiusmod\",\n  \"authorised\": true,\n  \"avs_result\": \"pariatur non est quis voluptate\",\n  \"bin_commercial\": true,\n  \"bin_debit\": true,\n  \"bin_description\": \"Platinum Card\",\n  \"cavv\": \"dolore anim\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"csc_result\": \"consectetur sunt\",\n  \"currency\": \"GBP\",\n  \"datetime\": \"2020-01-02T18:32:28Z\",\n  \"eci\": \"dolore aute veniam culpa labore\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"live\": true,\n  \"maskedpan\": \"4***********0002\",\n  \"scheme\": \"Visa\",\n  \"sha256\": \"anim aliquip proident consequat commodo\",\n  \"trans_status\": \"velit\",\n  \"transno\": 78416\n}"
						},
						{
							"id": "d65251c5-4430-458b-86fa-5ccdcf34f987",
							"name": "Redirect. A result of a successful tokenisation or authorisation process, redirecting to the success URL.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/tokenise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"tokenise"
									]
								}
							},
							"status": "See Other",
							"code": 303,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/x-www-form-urlencoded"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "75b7bea9-6229-4ce5-aa73-df69c7cbcbcd",
							"name": "Redirect. A result of a non-successful tokenisation or authorisation process, redirecting to the failure URL.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/tokenise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"tokenise"
									]
								}
							},
							"status": "Temporary Redirect (since HTTP/1.1)",
							"code": 307,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/x-www-form-urlencoded"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "fb15e74d-668b-45f5-8f9c-3e615da8a82e",
							"name": "Unauthorized. No domain key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/tokenise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"tokenise"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "fe173a60-1b2f-4dd4-afa7-697f144db904",
							"name": "Forbidden. The domain key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/tokenise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"tokenise"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "094a42fb-7072-4b68-84d3-16c36f37a9ed",
							"name": "Not Acceptable. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/tokenise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"tokenise"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "6d307d13-ab0b-4519-a24d-d09c16ff259f",
							"name": "Bad Request. Should the incoming data not be validly determined and an error code results.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/tokenise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"tokenise"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "fb157279-f24d-44a9-b604-dffd0a93dd15",
							"name": "Server Error. Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) The amount to authorise in the lowest unit of currency with a variable length to a maximum of 12 digits.\n\nNo decimal points are to be included and no divisional characters such as 1,024.\n\nThe amount should be the total amount required for the transaction.\n\nFor example with GBP £1,021.95 the amount value is 102195.\n",
											"key": "amount",
											"value": "3600"
										},
										{
											"description": "(Required) The card number (PAN) with a variable length to a maximum of 21 digits in numerical form.\nAny non numeric characters will be stripped out of the card number, this includes whitespace or separators internal of the\nprovided value.\n\nThe card number must be treated as sensitive data. We only provide an obfuscated value in logging and reporting.\n The plaintext value is encrypted in our database using AES 256 GMC bit encryption for settlement or refund purposes.\n\nWhen providing the card number to our gateway through the authorisation API you will be handling the card data on\nyour application. This will require further PCI controls to be in place and this value must never be stored.\n",
											"key": "cardnumber",
											"value": "4000 0000 0000 0002"
										},
										{
											"description": "(Required) The month of expiry of the card. The month value should be a numerical value between 1 and 12.\n",
											"key": "expmonth",
											"value": "9"
										},
										{
											"description": "(Required) The year of expiry of the card.\n",
											"key": "expyear",
											"value": "2025"
										},
										{
											"description": "(Required) The identifier of the transaction to process. The value should be a valid reference and may be used to perform\n post processing actions and to aid in reconciliation of transactions.\n\nThe value should be a valid printable string with ASCII character ranges from 0x32 to 0x127.\n\nThe identifier is recommended to be distinct for each transaction such as a [random unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\nthis will aid in ensuring each transaction is identifiable.\n\nWhen transactions are processed they are also checked for duplicate requests. Changing the identifier on a subsequent\nrequest will ensure that a transaction is considered as different.\n",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										},
										{
											"description": "(Required) A message authentication code ensures the data is authentic and that the intended amount has\nnot been tampered with. The mac value is generated using a hash-based mac value. The following algorithm is used.\n- A key (k) is derived from your licence key\n- A value (v) is produced by concatenating the nonce, amount value and identifier, such as a purchase\n  with nonce `0123456789ABCDEF` an amount of £275.95 and an identifier of OD-12345678 would become\n  `0123456789ABCDEF27595OD-12345678` and extracting the UTF-8 byte values\n- The result from HMAC_SHA256(k, v) is hex-encoded (upper-case)\n- For instance, a licence key of `LK123456789`, a nonce of `0123456789ABCDEF`, an amount of `27595` and an identifier of `OD-12345678`\n would generate a MAC of `163DBAB194D743866A9BCC7FC9C8A88FCD99C6BBBF08D619291212D1B91EE12E`.\n",
											"key": "mac",
											"value": "3896FBC43674AF59478DAF7F546FA4D4CB89981A936E6AAE997E43B55DF6C39D"
										},
										{
											"description": "A policy value which determines whether an AVS postcode policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS postcode numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the postcode did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send postcode details for authorisation.\n",
											"key": "avs_postcode_policy",
											"value": "ullamco ad"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "Lorem id ut offic"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "enim dolor"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "fug"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"description": "The Card Security Code (CSC) (also known as CV2/CVV2) is normally found on the back of the card\n(American Express has it on the front). The value helps to identify posession of the card as it is not\navailable within the chip or magnetic swipe.\n\nWhen forwarding the CSC, please ensure the value is a string as some values start with 0 and this will be stripped\nout by any integer parsing.\n\nThe CSC number aids fraud prevention in Mail Order and Internet payments.\n\nBusiness rules are available on your account to identify whether to accept\nor decline transactions based on mismatched results of the CSC.\n\nThe Payment Card Industry (PCI) requires that at no stage of a transaction should the CSC be stored.\n\nThis applies to all entities handling card data.\n\nIt should also not be used in any hashing process.\n\nCityPay do not store the value and have no method of retrieving the value once the transaction has been processed.\nFor this reason, duplicate checking is unable to determine the CSC in its duplication check algorithm.\n",
											"key": "csc",
											"value": "eius"
										},
										{
											"description": "A policy value which determines whether a CSC policy is enforced or bypassed.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the CSC value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the CSC did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send the CSC details for authorisation.\n",
											"key": "csc_policy",
											"value": "cupidatat non mollit in"
										},
										{
											"description": "The processing currency for the transaction. Will default to the merchant account currency.",
											"key": "currency",
											"value": "GBP"
										},
										{
											"description": "A policy value which determines whether a duplication policy is enforced or bypassed. A duplication check has a window\nof time set against your account within which it can action. If a previous transaction with matching values occurred within\nthe window, any subsequent transaction will result in a T001 result.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be checked for duplication within the duplication window.\n\n `2` to bypass. Transactions that are bypassed will not be checked for duplication within the duplication window.\n\n `3` to ignore. Transactions that are ignored will have the same affect as bypass.\n",
											"key": "duplicate_policy",
											"value": "do aute"
										},
										{
											"description": "A policy value which determines whether an AVS address policy is enforced, bypassed or ignored.\n\nValues are\n `0` for the default policy (default value if not supplied). Your default values are determined by your account manager on setup of the account.\n\n `1` for an enforced policy. Transactions that are enforced will be rejected if the AVS address numeric value does not match.\n\n `2` to bypass. Transactions that are bypassed will be allowed through even if the address did not match.\n\n `3` to ignore. Transactions that are ignored will bypass the result and not send address numeric details for authorisation.\n",
											"key": "match_avsa",
											"value": "velit adipisicing ea esse"
										},
										{
											"description": "The card holder name as appears on the card such as MR N E BODY. Required for some acquirers.\n",
											"key": "name_on_card",
											"value": "MR NE BODY"
										},
										{
											"description": "A random value Hex string (uppercase) which is provided to the API to perform a digest.\nThe value will be used in any digest function.\n",
											"key": "nonce",
											"value": "0123456789ABCDEF"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been rejected or declined. Required if a url-encoded request.\n",
											"key": "redirect_failure",
											"value": "https://pay.mystore.com/continue_failure"
										},
										{
											"description": "The URL used to redirect back to your site when a transaction has been tokenised or authorised. Required if a url-encoded request.\n",
											"key": "redirect_success",
											"value": "https://pay.mystore.com/continue_success"
										},
										{
											"key": "address1",
											"value": "79 Parliament St"
										},
										{
											"key": "address2",
											"value": "Westminster"
										},
										{
											"key": "address3",
											"value": "in"
										},
										{
											"key": "area",
											"value": "London"
										},
										{
											"key": "company",
											"value": "Acme Ltd"
										},
										{
											"key": "country",
											"value": "GB"
										},
										{
											"key": "email",
											"value": "card.holder@citypay.com"
										},
										{
											"key": "firstname",
											"value": "John"
										},
										{
											"key": "lastname",
											"value": "Smith"
										},
										{
											"key": "mobile_no",
											"value": "molli"
										},
										{
											"key": "postcode",
											"value": "L1 789"
										},
										{
											"key": "telephone_no",
											"value": "elit ut et"
										},
										{
											"key": "title",
											"value": "Mr"
										},
										{
											"key": "accept_headers",
											"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
										},
										{
											"key": "browserColorDepth",
											"value": "laboris non officia anim"
										},
										{
											"key": "browserIP",
											"value": "minim aliqua culpa in"
										},
										{
											"key": "browserJavaEnabled",
											"value": "ve"
										},
										{
											"key": "browserLanguage",
											"value": "mollit magna"
										},
										{
											"key": "browserScreenHeight",
											"value": "nisi aute ut reprehenderit"
										},
										{
											"key": "browserScreenWidth",
											"value": "ut elit"
										},
										{
											"key": "browserTZ",
											"value": "cillum enim"
										},
										{
											"key": "cp_bx",
											"value": "FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx..."
										},
										{
											"key": "downgrade1",
											"value": "true"
										},
										{
											"key": "merchant_termurl",
											"value": "https://mysite.com/acs/return"
										},
										{
											"key": "tds_policy",
											"value": "eu lab"
										},
										{
											"key": "user_agent",
											"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
										},
										{
											"description": "Further information that can be added to the transaction will display in reporting. Can be used for flexible values such as operator id.",
											"key": "trans_info",
											"value": "veniam ut aute nulla velit"
										},
										{
											"description": "The type of transaction being submitted. Normally this value is not required and your account manager may request that you set this field.",
											"key": "trans_type",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/direct/tokenise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"direct",
										"tokenise"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "2734d99c-c5fc-42f4-952a-e22be458233d"
		},
		{
			"name": "dk",
			"item": [
				{
					"name": "Domain Key Check Request",
					"id": "e67c4a0b-11c6-4c65-96af-e61dd9c3f844",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"domain_key\": \"deserunt temporirure tempor laboreesse commodo sunt sit nisiculpa laborum mollit ex\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dk/check",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dk",
								"check"
							]
						},
						"description": "Checks the contents of a `domain key`. Can be used for operational processes to ensure that the properties of a \ndomain key meet their expectations.\n"
					},
					"response": [
						{
							"id": "bef16069-4268-4e79-9480-be74ef3e7b20",
							"name": "A checked domain key.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain_key\": \"deserunt temporirure tempor laboreesse commodo sunt sit nisiculpa laborum mollit ex\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"check"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"domain\": [\n    \"tempor aliqua nulla culpa Excepteur\",\n    \"ad minim magna\"\n  ],\n  \"merchantid\": 11223344,\n  \"date_created\": \"2020-01-02T18:32:28Z\",\n  \"domain_key\": \"commodo qui eiusmodea incididunt culpa autedeserunt culpaelit aliqua occaecat Ut cillum\",\n  \"live\": true\n}"
						},
						{
							"id": "9c3870b9-92a7-40bf-9671-94b51a28d205",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain_key\": \"deserunt temporirure tempor laboreesse commodo sunt sit nisiculpa laborum mollit ex\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"check"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "7f430ac8-605d-404f-9849-b77fae9abe07",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain_key\": \"deserunt temporirure tempor laboreesse commodo sunt sit nisiculpa laborum mollit ex\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"check"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "25ff2c5d-148a-4cc5-9fec-653229ca68ad",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain_key\": \"deserunt temporirure tempor laboreesse commodo sunt sit nisiculpa laborum mollit ex\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"check"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "4d57655a-e70e-4e85-9ff8-db7b581bcbb0",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain_key\": \"deserunt temporirure tempor laboreesse commodo sunt sit nisiculpa laborum mollit ex\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"check"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "ada1c0a0-fb89-435f-ac19-7e8646809d3f",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain_key\": \"deserunt temporirure tempor laboreesse commodo sunt sit nisiculpa laborum mollit ex\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"check"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Domain Key Generation Request",
					"id": "53c7ebe0-a257-4320-aeab-6a608d587540",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"domain\": [\n    \"minim in est\",\n    \"ut\"\n  ],\n  \"merchantid\": 11223344,\n  \"live\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dk/gen",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dk",
								"gen"
							]
						},
						"description": "Generates a domain key based on the permissions of the calling `api-key`. Domain keys can be used in _Direct Post_ and\n`XHR` calls to the API services.\n"
					},
					"response": [
						{
							"id": "4f69348e-ec1a-408e-a32a-95f873f77278",
							"name": "A generated domain key.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": [\n    \"dolor dolor consectetur exercitation aliqua\",\n    \"laboris\"\n  ],\n  \"merchantid\": 11223344,\n  \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/gen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"gen"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"domain\": [\n    \"velit nulla eiusmod\",\n    \"ut officia id\"\n  ],\n  \"merchantid\": 11223344,\n  \"date_created\": \"2020-01-02T18:32:28Z\",\n  \"domain_key\": \"minim quis cillumvoluptate cupidatatvelit aliquip adipisicing ex officia\",\n  \"live\": true\n}"
						},
						{
							"id": "28d3cebb-2dac-4166-bde2-13085861dc4f",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": [\n    \"dolor dolor consectetur exercitation aliqua\",\n    \"laboris\"\n  ],\n  \"merchantid\": 11223344,\n  \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/gen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"gen"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "c483cda4-8951-43aa-8c4b-65c4c3abb098",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": [\n    \"dolor dolor consectetur exercitation aliqua\",\n    \"laboris\"\n  ],\n  \"merchantid\": 11223344,\n  \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/gen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"gen"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "b32c53ba-dd08-4a6e-89c5-7c0e9b175343",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": [\n    \"dolor dolor consectetur exercitation aliqua\",\n    \"laboris\"\n  ],\n  \"merchantid\": 11223344,\n  \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/gen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"gen"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "cecaccb8-3733-4117-8a57-70fa85101132",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": [\n    \"dolor dolor consectetur exercitation aliqua\",\n    \"laboris\"\n  ],\n  \"merchantid\": 11223344,\n  \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/gen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"gen"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "b35987d2-5eb6-4f38-ac0b-1096a2567edb",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": [\n    \"dolor dolor consectetur exercitation aliqua\",\n    \"laboris\"\n  ],\n  \"merchantid\": 11223344,\n  \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dk/gen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dk",
										"gen"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "3f35538e-3bec-4e80-a268-b02c1dbe2b76"
		},
		{
			"name": "paylink",
			"item": [
				{
					"name": "{token}",
					"item": [
						{
							"name": "Paylink Token Adjustment",
							"id": "41699a54-e47f-4399-b902-cf85b0885b89",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "cp-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"reason\": \"et dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/:token/adjustment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										":token",
										"adjustment"
									],
									"variable": [
										{
											"key": "token",
											"value": "velit dolor",
											"description": "(Required) The token returned by the create token process."
										}
									]
								},
								"description": "Adjusts a TokenRequest's amount value when for instance \n\n1. a Token is created and the shopping cart is updated\n2. an invoice is adjusted either due to part payment or due to increased incurred costs.\n"
							},
							"response": [
								{
									"id": "cef969b0-0682-4cdc-b193-8ef3c85bc82c",
									"name": "Response defining the result of the token request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"reason\": \"et dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/adjustment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"adjustment"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
								},
								{
									"id": "ce1c80ff-bfdb-477f-98a2-56b4039ee4c0",
									"name": "Bad Request. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"reason\": \"et dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/adjustment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"adjustment"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "80c0e193-4867-4119-bdeb-ae18094abf58",
									"name": "Unauthorized. No api key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"reason\": \"et dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/adjustment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"adjustment"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "6d6755af-21ed-4d23-8a10-cf4b17059df9",
									"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"reason\": \"et dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/adjustment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"adjustment"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "a6a3e134-fec6-48b8-b06c-f2fdb07c0894",
									"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"reason\": \"et dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/adjustment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"adjustment"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
								},
								{
									"id": "ac3268be-fa3b-4092-9a7b-51702053ffd2",
									"name": "Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"reason\": \"et dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/adjustment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"adjustment"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Close Paylink Token",
							"id": "ba3ced8e-6d0c-4d9c-a0e3-0f53d4040fa4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "cp-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paylink/:token/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										":token",
										"close"
									],
									"variable": [
										{
											"key": "token",
											"value": "velit dolor",
											"description": "(Required) The token returned by the create token process."
										}
									]
								},
								"description": "Marks a Paylink Token as closed. This closes the Token for any future action and the Token will not appear in any status\nrequest calls.\n"
							},
							"response": [
								{
									"id": "4154067a-3943-42b0-8618-40d30df9bfb0",
									"name": "Confirms that the token was marked for closure.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"close"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
								},
								{
									"id": "5e5c9596-572a-4888-958e-8a4bb3b58aec",
									"name": "Bad Request. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"close"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "99b04833-7abd-47dd-b234-ee1d41482347",
									"name": "Unauthorized. No api key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"close"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "3f2894b7-8950-47b0-9d43-87ac5fad7e9a",
									"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"close"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "f8136fb0-593d-4204-98f9-8f4bc0fd0c85",
									"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"close"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
								},
								{
									"id": "732ce164-3617-4df9-8153-b9f80f15e58d",
									"name": "Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"close"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reconcile Paylink Token",
							"id": "6a1064a4-9548-4f8b-a871-237f7536ad54",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "cp-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paylink/:token/reconciled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										":token",
										"reconciled"
									],
									"variable": [
										{
											"key": "token",
											"value": "velit dolor",
											"description": "(Required) The token returned by the create token process."
										}
									]
								},
								"description": "Marks a Paylink Token as reconciled when reconcilation is performed on the merchant's side."
							},
							"response": [
								{
									"id": "0e357208-7055-46ba-91df-ca2d53bbeb4a",
									"name": "Confirms that the token was marked as reconciled.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reconciled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reconciled"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
								},
								{
									"id": "b723abd7-fad7-48f2-8b40-a676ac03ed00",
									"name": "Bad Request. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reconciled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reconciled"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "6a939ddc-e3d3-437a-be09-68b7eaad5525",
									"name": "Unauthorized. No api key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reconciled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reconciled"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "984aeb62-d320-417f-b2f8-573234a29e31",
									"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reconciled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reconciled"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "ee634c3a-7b19-43c5-9d72-5ed1b1107ace",
									"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reconciled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reconciled"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
								},
								{
									"id": "e2779f7f-b8ee-4da0-aa78-2a86400b2559",
									"name": "Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reconciled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reconciled"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reopen Paylink Token",
							"id": "1b212d7f-c2ed-4b65-a33a-607fd7fe84a3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "cp-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paylink/:token/reopen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										":token",
										"reopen"
									],
									"variable": [
										{
											"key": "token",
											"value": "velit dolor",
											"description": "(Required) The token returned by the create token process."
										}
									]
								},
								"description": "Allows for a Paylink Token to be reopened if a Token has been previously closed and payment has not yet been made."
							},
							"response": [
								{
									"id": "676a90f7-5945-40d3-9f16-3f48dd8b7685",
									"name": "Confirms that the token was reopened.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reopen",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reopen"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
								},
								{
									"id": "6c83d355-29fe-4235-888b-6e29c052f3d6",
									"name": "Bad Request. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reopen",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reopen"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "182fab6d-2e44-4943-802f-d2e549a16f1e",
									"name": "Unauthorized. No api key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reopen",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reopen"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "d93d2225-ec98-49ff-a531-ff7e18cc4b4c",
									"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reopen",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reopen"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "6886ff3b-04fb-41cf-9eef-ffe83959f7f0",
									"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reopen",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reopen"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
								},
								{
									"id": "4461bd03-caad-48ac-af00-b2b2ce138638",
									"name": "Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/reopen",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"reopen"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Paylink Token Status",
							"id": "587a7885-1bd7-447d-8df0-a8904fd8b894",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "cp-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paylink/:token/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										":token",
										"status"
									],
									"variable": [
										{
											"key": "token",
											"value": "velit dolor",
											"description": "(Required) The token returned by the create token process."
										}
									]
								},
								"description": "Obtains the full status of a given Paylink Token."
							},
							"response": [
								{
									"id": "edbab5b3-dd5f-487a-9484-2a41a23882ff",
									"name": "The current status of the token.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"status"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount_paid\": -7254922,\n  \"auth_code\": \"tempor minim dolore\",\n  \"card\": \"aliqua magna ipsum do dolore\",\n  \"created\": \"1944-11-08T18:42:05.103Z\",\n  \"datetime\": \"2020-10-31T20:52:41.478Z\",\n  \"identifier\": \"enim proident sed aute\",\n  \"is_attachment\": false,\n  \"is_cancelled\": false,\n  \"is_closed\": false,\n  \"is_customer_receipt_email_sent\": true,\n  \"is_email_sent\": false,\n  \"is_expired\": false,\n  \"is_form_viewed\": false,\n  \"is_merchant_notification_email_sent\": false,\n  \"is_open_for_payment\": true,\n  \"is_paid\": true,\n  \"is_payment_attempted\": true,\n  \"is_postback_ok\": false,\n  \"is_request_challenged\": true,\n  \"is_sms_sent\": true,\n  \"is_validated\": true,\n  \"last_event_date_time\": \"1981-11-02T11:24:29.496Z\",\n  \"last_payment_result\": \"dolore ut\",\n  \"mid\": \"consectetur commodo\",\n  \"payment_attempts_count\": -70916025,\n  \"state_history\": [\n    {\n      \"datetime\": \"1966-09-01T05:19:29.736Z\",\n      \"message\": \"labore in adipisicing n\",\n      \"state\": \"1975-11-25T16:03:41.258Z\"\n    },\n    {\n      \"datetime\": \"1944-04-08T10:11:49.284Z\",\n      \"message\": \"m\",\n      \"state\": \"1949-03-30T02:07:05.290Z\"\n    }\n  ],\n  \"token\": \"ullamco commodo\",\n  \"trans_no\": -27850823\n}"
								},
								{
									"id": "4c3c33c2-6e7c-445d-9c3d-aae0ade90c6f",
									"name": "Bad Request. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"status"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "6c1ad63e-f177-4c18-8d86-0736e95caafe",
									"name": "Unauthorized. No api key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"status"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "f9ac47d9-353c-4eca-9d79-1e1786c30190",
									"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"status"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "d5e3f66a-f878-4a78-9448-efc67a7944b5",
									"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"status"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
								},
								{
									"id": "0d287e38-7c12-4faf-b7b3-bdaa33de1dc7",
									"name": "Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paylink/:token/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paylink",
												":token",
												"status"
											],
											"variable": [
												{
													"key": "token",
													"value": "velit dolor",
													"description": "(Required) The token returned by the create token process."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "14fef3ab-e90c-42c2-bfb6-fb6065359985"
				},
				{
					"name": "Create Bill Payment Paylink Token",
					"id": "8097eac0-ce46-4895-afad-40b0c5eb0737",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"request\": {\n    \"amount\": 65093896,\n    \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n    \"merchantid\": 11223344,\n    \"accountno\": \"anim ipsum ad laboris id\",\n    \"cardholder\": {\n      \"accept_headers\": \"cillum sit enim nostrud minim\",\n      \"address\": {\n        \"address1\": \"79 Parliament St\",\n        \"address2\": \"Westminster\",\n        \"address3\": \"Excep\",\n        \"area\": \"London\",\n        \"country\": \"GB\",\n        \"label\": \"Head Office\",\n        \"postcode\": \"L1 789\"\n      },\n      \"company\": \"Acme Ltd\",\n      \"email\": \"card.holder@citypay.com\",\n      \"firstname\": \"John\",\n      \"lastname\": \"Smith\",\n      \"mobile_no\": \"ullamco quis et ad m\",\n      \"remote_addr\": \"et eu amet dolor velit\",\n      \"title\": \"Mr\",\n      \"user_agent\": \"adipisicing elit tempor\"\n    },\n    \"cart\": {\n      \"contents\": [\n        {\n          \"amount\": -58336620,\n          \"brand\": \"dolore ut\",\n          \"category\": \"nulla Excepteur\",\n          \"count\": 47186091,\n          \"label\": \"dolore consectetur\",\n          \"max\": -83476023,\n          \"sku\": \"in\",\n          \"variant\": \"enim aute in magna minim\"\n        },\n        {\n          \"amount\": 12475234,\n          \"brand\": \"labore cillum proident\",\n          \"category\": \"laboris commodo \",\n          \"count\": 42033153,\n          \"label\": \"proident eiusmod\",\n          \"max\": -86529844,\n          \"sku\": \"id cupidatat cillum\",\n          \"variant\": \"sed exercitation qui cillum Duis\"\n        }\n      ],\n      \"coupon\": \"n\",\n      \"mode\": 74806193,\n      \"product_description\": \"irure reprehenderit velit incididunt et\",\n      \"product_information\": \"labore\",\n      \"shipping\": 97416731,\n      \"tax\": 86126968\n    },\n    \"client_version\": \"aliqua officia dolore commodo Duis\",\n    \"config\": {\n      \"acs_mode\": \"in aliqua occaecat\",\n      \"custom_params\": [\n        {\n          \"name\": \"et quis sed ea do\",\n          \"field_type\": \"ut fugiat voluptate\",\n          \"group\": \"officia\",\n          \"label\": \"Ut ad dolore amet\",\n          \"locked\": true,\n          \"order\": 84937899,\n          \"pattern\": \"nulla velit ex ut\",\n          \"placeholder\": \"in ipsum deserunt\",\n          \"required\": true,\n          \"value\": \"exercitation anim\"\n        },\n        {\n          \"name\": \"ea id eu dolor incididunt\",\n          \"field_type\": \"ipsum\",\n          \"group\": \"voluptate ipsum incididunt officia\",\n          \"label\": \"quis est aliqua in\",\n          \"locked\": false,\n          \"order\": 7258570,\n          \"pattern\": \"in cillum sed ullamco\",\n          \"placeholder\": \"commodo\",\n          \"required\": false,\n          \"value\": \"irure sint deserunt\"\n        }\n      ],\n      \"descriptor\": \"inc\",\n      \"expire_in\": \"do eiusmod deserunt ad\",\n      \"field_guard\": [\n        {\n          \"label\": \"magna sed\",\n          \"name\": \"sit ullamco nostr\",\n          \"type\": \"labore dolor consequat nostrud tempor\"\n        },\n        {\n          \"label\": \"tempor amet\",\n          \"name\": \"in\",\n          \"type\": \"in aute nulla do exercitation\"\n        }\n      ],\n      \"lock_params\": [\n        \"qui dolor aliquip magna\",\n        \"velit dolor in\"\n      ],\n      \"merch_logo\": \"veniam ea minim Excepteur\",\n      \"merch_terms\": \"nostrud qui enim officia\",\n      \"options\": [\n        \"irure ipsu\",\n        \"dolor laborum Duis\"\n      ],\n      \"part_payments\": {\n        \"enabled\": \"commodo laborum voluptate Excepteur\",\n        \"floor\": \"sit\",\n        \"max\": \"adipisicing\",\n        \"max_rate\": \"Excepteur minim\",\n        \"min\": \"ipsum anim Excepteur sunt ea\",\n        \"min_rate\": \"nisi occaecat\"\n      },\n      \"postback\": \"cupidatat tempor\",\n      \"postback_password\": \"tempor in\",\n      \"postback_policy\": \"fugiat adipisicing magna\",\n      \"postback_username\": \"dolore ad sed\",\n      \"redirect_delay\": -25908833,\n      \"redirect_failure\": \"commodo amet eu\",\n      \"redirect_success\": \"culpa deserunt\",\n      \"renderer\": \"cillum minim anim sunt\",\n      \"return_params\": \"consequat sed ex eiusmod\",\n      \"ui\": {\n        \"address_mandatory\": false,\n        \"form_auto_complete\": \"id consectetur officia in\",\n        \"ordering\": -6451097,\n        \"postcode_mandatory\": true\n      }\n    },\n    \"email\": \"card.holder@citypay.com\",\n    \"subscription_id\": \"non et consectetur consequat\",\n    \"tx_type\": \"veniam\"\n  },\n  \"attachments\": [\n    {\n      \"filename\": \"ut\",\n      \"mime_type\": \"anim sed reprehenderit\",\n      \"data\": \"irure\"\n    },\n    {\n      \"filename\": \"id in\",\n      \"mime_type\": \"Ut laborum Excepteur\",\n      \"data\": \"nulla velit\"\n    }\n  ],\n  \"descriptor\": \"in cillum in pariatur\",\n  \"due\": \"1967-07-18\",\n  \"email_notification_path\": {\n    \"to\": \"tempor commodo in dolor quis\",\n    \"bcc\": \"deserunt non sit tempor\",\n    \"cc\": \"ut amet in reprehenderit enim\",\n    \"reply_to\": \"dolore proident Duis\",\n    \"template\": \"deserunt ullamco aliquip ea do\"\n  },\n  \"sms_notification_path\": {\n    \"to\": \"sit in cupidatat es\",\n    \"template\": \"dolor laboris voluptate quis\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/paylink/bill-payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paylink",
								"bill-payment"
							]
						},
						"description": "CityPay Paylink supports invoice and bill payment services by allowing merchants to raise an invoice in their systems and\nassociate the invoice with a Paylink checkout token. CityPay will co-ordinate the checkout flow in relationship with\nyour customer. Our bill payment solution may be used to streamline the payment flow with cardholders to allow your\ninvoice to be paid promptly and via multiple payment channels such as Card Payment, Apple Pay or Google Pay.\n\nThe bill payment service allows\n\n1. setting up notification paths to an end customer, such as SMS or Email\n2. enabling attachments to be included with Paylink tokens\n3. produce chaser notifications for unpaid invoices\n4. provide callbacks for notification of the payment of an invoice\n5. support part payments against an invoice\n6. support of field guards to protect the payment screen\n7. support of status reporting on tokens\n8. URL short codes for SMS notifications\n\n<img src=\"../images/merchant-BPS-workflow.png\" alt=\"Paylink BPSv2 Overview\" width=\"50%\"/> \n\n\n### Notification Paths\n\nNotification paths can be provided which identify the channels for communication of the invoice availability.\nUp to 3 notification paths may be provided per request.\n\nEach notification uses a template to generate the body of the message. This allows for variable text to be sent out and\ncustomised for each call.\n\nSMS messages use URL Short Codes (USC) as a payment link to the invoice payment page. This allows for a standard payment\nURL to be shortened for optimised usage in SMS. For instance a URL of `https://secured.citypay.com/PL1234/s348yb8yna4a48n2f8nq2f3msgyng-psn348ynaw8ynaw/en`\nbecomes `citypay.com/Za48na3x`. Each USC is unique however it is a requirement that each USC generated is protected\nwith Field Guards to ensure that sensitive data (such as customer contact details and GDPR) is protected.\n\nTo send a notification path, append a `notification-path` property to the request.\n\n```json\n {\n  \"notification-path\": [\n    {\n      \"channel\": \"sms\",\n      \"to\": \"+441534884000\"\n    },\n    {\n      \"channel\": \"email\",\n      \"to\": [\"help-desk@citypay.com\"],\n      \"cc\": [\"third-party@citypay.com\"],\n      \"reply\": [\"help@my-company.com\"]\n    }\n  ]\n}\n```\n\nNotification paths trigger a number of events which are stored as part of the timeline of events of a Paylink token\n\n- `BillPaymentSmsNotificationQueued` - identifies when an SMS notification has been queued for delivery\n- `BillPaymentSmsNotificationSent` - identifies when an SMS notification has been sent to the upstream network\n- `BillPaymentSmsNotificationDelivered` - identifies when an SMS notification has been delivered as notified by the upstream network\n- `BillPaymentSmsNotificationUndelivered` - identifies when an SMS notification has undelivered notification is provided by the upstream network\n- `BillPaymentSmsNotificationFailure` - identifies when an SMS notification has failed\n- `BillPaymentEmailNotificationQueued` -  identifies when an email notification has been queued for delivery\n- `BillPaymentEmailNotificationSent` -  identifies when an email notification has been accepted by our SMS forwarder\n- `BillPaymentEmailNotificationFailure` - identifies when an email notification has failed delivery\n\n\n#### SMS Notification Paths\n\nSMS originated from a CityPay pool of numbers, we are able to register custom phone numbers if required. Retries may incur\nextra fees.\n\n| Field    | Type     | Usage    | Description                                                                                     |\n|----------|----------|----------|-------------------------------------------------------------------------------------------------|\n| channel  | string   | Required | Should be specified as `sms`                                                                    |\n| template | string   | Reserved | An optional template name to use a template other than the default.                             |\n| to       | string   | Reserved | The phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format to send the message to. |\n\n#### Email Notification Paths\n\n| Field    | Type     | Usage    | Description                                                                                 |\n|----------|----------|----------|---------------------------------------------------------------------------------------------|\n| channel  | string   | Required | Should be specified as `email`                                                              |\n| template | string   | Reserved | An optional template name to use a template other than the default.                         |\n| to       | string[] | Required | An array of email addresses to be used for delivery. A maximum of 5 addresses can be added. |\n\n\n### Field Guards\n\nTo ensure that invoices are paid by the intended recipient, Paylink supports the addition of Field Guards.\n\nA Field Guard is an intended field which is to be used as a form of guarded authentication. More than 1 field can be\nrequested.\n\n<img src=\"../images/paylink-field-guards.png\" alt=\"Paylink Field Guards\" width=\"50%\"/>\n\nTo determine the source value of the field, each field name is searched in the order of\n\n- identifier\n- cardholder data such as name\n- custom parameters\n- pass through data\n\nIf no field values are found, the token request returns a D041 validation error.\n\n#### Authentication and Validation\n\nWhen values are entered by the user, resultant comparisons are performed by\n\n1. Transliteration of both the source value and entered value. For example, names with accents (e.g. é will become e)\n2. Only Alphanumeric values are retained any whitespace or special characters are ignored\n3. Case is ignored\n\nShould all values match, the user is authenticated and can continue to the payment form rendered by the Paylink server.\n\nOn successful login, an event will be added to include that the access guard validated access.\n\n#### Access-Key\n\nTo ensure that a user does not need to re-enter these values multiple times, a cookie is pushed to the user’s\nbrowser with an access-key digest value. This value will be presented to the server on each refresh therefore\nallowing the guard to accept the call. Each value is uniquely stored per merchant account and cannot be shared cross\nmerchant. The lifetime of the cookie is set to 24 hours.\n\n#### Brute Force Prevention\n\nTo prevent multiple calls hitting the server, attempting a brute force attack, the login process\n\n1. is fronted by a contemporary web application firewall\n2. creates an event for each token when access was denied\n3. should the number of failed events breach more than 5 in 30 minutes, the token is locked for an hour\n4. should the number of events breach more than 20 the token is fully locked\n\n### Attachments\n\nAttachments can be included in the request in 2 ways\n\n1. Via a data element direct in the request\n2. Via a URL upload to a provided pre-signed URL\n\nThe decision of which option is dependent on the size of the attachments. Should the attachment size be greater than\n32kb a URL upload is required. Small attachments can be included in the JSON request. This is to prevent our web\nfirewall from blocking your request and to also ensure efficiency of larger file uploads.\n\nThere is a maximum of 3 attachments that can be added to a request.\n\n```json\n    [{\n      \"filename\": \"invoice1.pdf\",\n      \"mime-type\": \"application/pdf\"\n    },{\n      \"filename\": \"invoice2.pdf\",\n      \"data\": \"b4sE64Enc0dEd...=\",\n      \"mime-type\": \"application/pdf\"\n    }]\n```\n\n| Field     | Type   | Usage    | Description                                                                                                                                          |\n|-----------|--------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------|\n| filename  | string | Required | The name of the attachment normally taken from the filename. You should not include the filename path as appropriate                                 |\n| data      | string | Optional | base64 encoding of the file if less than 32kb in size                                                                                                |\n| mime-type | string | Required | The mime type of the attachment as defined in [RFC 9110](https://www.rfc-editor.org/rfc/rfc9110.html). Currently only `application/pdf` is supported |\n\n\n#### Attachment Result\n\nA result of an attachment specifies whether the attachment was successfully added or whether a further upload is requried\n\n| Field  | Type   | Usage    | Description                                                                                                                                       |\n|--------|--------|----------|---------------------------------------------------------------------------------------------------------------------------------------------------|\n| result | string | Required | `OK` should the file have uploaded or `UPLOAD` if the file is required to be uploaded.                                                            |\n| name   | string | Required | The filename that was specified in the upload process                                                                                             |\n| url    | string | Optional | Should an upload be required, this URL is available for an upload to be issued. The URL is only available for uploads for 24 hours from creation. |\n"
					},
					"response": [
						{
							"id": "4c445f68-6559-4b93-aab7-c5c247695294",
							"name": "Response defining the result of the token request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"amount\": -47984565,\n    \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n    \"merchantid\": 11223344,\n    \"accountno\": \"quis adipisicing\",\n    \"cardholder\": {\n      \"accept_headers\": \"laboris ea minim Lorem sit\",\n      \"address\": {\n        \"address1\": \"79 Parliament St\",\n        \"address2\": \"Westminster\",\n        \"address3\": \"ut do Excepteur q\",\n        \"area\": \"London\",\n        \"country\": \"GB\",\n        \"label\": \"Head Office\",\n        \"postcode\": \"L1 789\"\n      },\n      \"company\": \"Acme Ltd\",\n      \"email\": \"card.holder@citypay.com\",\n      \"firstname\": \"John\",\n      \"lastname\": \"Smith\",\n      \"mobile_no\": \"do e\",\n      \"remote_addr\": \"irure veniam\",\n      \"title\": \"Mr\",\n      \"user_agent\": \"tempor\"\n    },\n    \"cart\": {\n      \"contents\": [\n        {\n          \"amount\": 40159618,\n          \"brand\": \"sunt sed ea nulla\",\n          \"category\": \"proident\",\n          \"count\": -15674439,\n          \"label\": \"amet adipisicing fugiat\",\n          \"max\": 46148784,\n          \"sku\": \"c\",\n          \"variant\": \"eu in\"\n        },\n        {\n          \"amount\": -8249102,\n          \"brand\": \"ex commodo\",\n          \"category\": \"exercitation esse\",\n          \"count\": -2151543,\n          \"label\": \"elit commodo et\",\n          \"max\": -33085991,\n          \"sku\": \"veniam labore laborum sed\",\n          \"variant\": \"consectetur incididunt non dolore\"\n        }\n      ],\n      \"coupon\": \"ipsum sunt ut commodo id\",\n      \"mode\": -98280927,\n      \"product_description\": \"cupidatat amet laboris\",\n      \"product_information\": \"nulla sint qui\",\n      \"shipping\": 20611566,\n      \"tax\": -49607071\n    },\n    \"client_version\": \"dolor eu exercitation eiusmod\",\n    \"config\": {\n      \"acs_mode\": \"in\",\n      \"custom_params\": [\n        {\n          \"name\": \"mollit sunt reprehenderit dolor\",\n          \"field_type\": \"anim ut dolore esse do\",\n          \"group\": \"nisi voluptate\",\n          \"label\": \"adipisicing esse cupidatat\",\n          \"locked\": true,\n          \"order\": -25342992,\n          \"pattern\": \"consectetur esse\",\n          \"placeholder\": \"in aute\",\n          \"required\": false,\n          \"value\": \"dolore Excepteur\"\n        },\n        {\n          \"name\": \"tempor non s\",\n          \"field_type\": \"enim\",\n          \"group\": \"ut do\",\n          \"label\": \"nisi id Duis\",\n          \"locked\": false,\n          \"order\": 78716392,\n          \"pattern\": \"proident anim esse\",\n          \"placeholder\": \"reprehenderit magna\",\n          \"required\": true,\n          \"value\": \"culpa do\"\n        }\n      ],\n      \"descriptor\": \"quis voluptate amet ipsum\",\n      \"expire_in\": \"\",\n      \"field_guard\": [\n        {\n          \"label\": \"irure ut anim\",\n          \"name\": \"aute cillum velit\",\n          \"type\": \"Ut consequat\"\n        },\n        {\n          \"label\": \"ut dolor dolore deserunt\",\n          \"name\": \"nu\",\n          \"type\": \"dolor esse\"\n        }\n      ],\n      \"lock_params\": [\n        \"id laborum l\",\n        \"Lorem\"\n      ],\n      \"merch_logo\": \"id labore\",\n      \"merch_terms\": \"dolor consectetur nulla in magna\",\n      \"options\": [\n        \"Excepteur \",\n        \"consectetur velit nulla anim incididunt\"\n      ],\n      \"part_payments\": {\n        \"enabled\": \"culp\",\n        \"floor\": \"cillum esse\",\n        \"max\": \"est sit\",\n        \"max_rate\": \"officia ullamco id\",\n        \"min\": \"est pariatur anim Ut\",\n        \"min_rate\": \"elit\"\n      },\n      \"postback\": \"in\",\n      \"postback_password\": \"sed\",\n      \"postback_policy\": \"deserunt laboris ut reprehenderit\",\n      \"postback_username\": \"ullamco ipsum sit\",\n      \"redirect_delay\": 76242252,\n      \"redirect_failure\": \"labore ipsum et consectetur esse\",\n      \"redirect_success\": \"incididunt\",\n      \"renderer\": \"sed tempor\",\n      \"return_params\": \"mollit\",\n      \"ui\": {\n        \"address_mandatory\": false,\n        \"form_auto_complete\": \"consequat\",\n        \"ordering\": 75202835,\n        \"postcode_mandatory\": true\n      }\n    },\n    \"email\": \"card.holder@citypay.com\",\n    \"subscription_id\": \"aliquip dolor ad nisi sint\",\n    \"tx_type\": \"exercitation magna commodo\"\n  },\n  \"attachments\": [\n    {\n      \"filename\": \"sit id ullamco\",\n      \"mime_type\": \"incididunt dolore et\",\n      \"data\": \"dolore ex officia\"\n    },\n    {\n      \"filename\": \"ad mollit cons\",\n      \"mime_type\": \"sed in fugiat ex\",\n      \"data\": \"exerci\"\n    }\n  ],\n  \"descriptor\": \"qui Duis culpa proident\",\n  \"due\": \"1971-07-15\",\n  \"email_notification_path\": {\n    \"to\": \"n\",\n    \"bcc\": \"et\",\n    \"cc\": \"et amet deserunt\",\n    \"reply_to\": \"au\",\n    \"template\": \"ullamco cupidatat\"\n  },\n  \"sms_notification_path\": {\n    \"to\": \"officia ad veniam\",\n    \"template\": \"velit dolore in\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/bill-payment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"bill-payment"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"est qui\",\n  \"result\": 87294933,\n  \"token\": \"nisi dolor\",\n  \"attachments\": {\n    \"name\": \"dolore\",\n    \"result\": \"c\",\n    \"url\": \"aliqua irure\"\n  },\n  \"bps\": \"ea eu Ut officia proident\",\n  \"date_created\": \"1974-03-13T19:10:10.868Z\",\n  \"errors\": [\n    {\n      \"code\": \"nostrud sunt\",\n      \"msg\": \"repre\"\n    },\n    {\n      \"code\": \"elit non proident paria\",\n      \"msg\": \"elit irure commodo minim incididunt\"\n    }\n  ],\n  \"identifier\": \"non sed sint\",\n  \"mode\": \"est\",\n  \"qr_code\": \"occaecat dolore reprehenderit eiusmod\",\n  \"server_version\": \"fugiat ex ullamco\",\n  \"source\": \"41.115.183.182\",\n  \"url\": \"in in exercitation cillum aute\",\n  \"usc\": \"in nostrud\"\n}"
						},
						{
							"id": "7309da80-9f85-4bcd-b5ee-8792b2f245a6",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"amount\": -47984565,\n    \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n    \"merchantid\": 11223344,\n    \"accountno\": \"quis adipisicing\",\n    \"cardholder\": {\n      \"accept_headers\": \"laboris ea minim Lorem sit\",\n      \"address\": {\n        \"address1\": \"79 Parliament St\",\n        \"address2\": \"Westminster\",\n        \"address3\": \"ut do Excepteur q\",\n        \"area\": \"London\",\n        \"country\": \"GB\",\n        \"label\": \"Head Office\",\n        \"postcode\": \"L1 789\"\n      },\n      \"company\": \"Acme Ltd\",\n      \"email\": \"card.holder@citypay.com\",\n      \"firstname\": \"John\",\n      \"lastname\": \"Smith\",\n      \"mobile_no\": \"do e\",\n      \"remote_addr\": \"irure veniam\",\n      \"title\": \"Mr\",\n      \"user_agent\": \"tempor\"\n    },\n    \"cart\": {\n      \"contents\": [\n        {\n          \"amount\": 40159618,\n          \"brand\": \"sunt sed ea nulla\",\n          \"category\": \"proident\",\n          \"count\": -15674439,\n          \"label\": \"amet adipisicing fugiat\",\n          \"max\": 46148784,\n          \"sku\": \"c\",\n          \"variant\": \"eu in\"\n        },\n        {\n          \"amount\": -8249102,\n          \"brand\": \"ex commodo\",\n          \"category\": \"exercitation esse\",\n          \"count\": -2151543,\n          \"label\": \"elit commodo et\",\n          \"max\": -33085991,\n          \"sku\": \"veniam labore laborum sed\",\n          \"variant\": \"consectetur incididunt non dolore\"\n        }\n      ],\n      \"coupon\": \"ipsum sunt ut commodo id\",\n      \"mode\": -98280927,\n      \"product_description\": \"cupidatat amet laboris\",\n      \"product_information\": \"nulla sint qui\",\n      \"shipping\": 20611566,\n      \"tax\": -49607071\n    },\n    \"client_version\": \"dolor eu exercitation eiusmod\",\n    \"config\": {\n      \"acs_mode\": \"in\",\n      \"custom_params\": [\n        {\n          \"name\": \"mollit sunt reprehenderit dolor\",\n          \"field_type\": \"anim ut dolore esse do\",\n          \"group\": \"nisi voluptate\",\n          \"label\": \"adipisicing esse cupidatat\",\n          \"locked\": true,\n          \"order\": -25342992,\n          \"pattern\": \"consectetur esse\",\n          \"placeholder\": \"in aute\",\n          \"required\": false,\n          \"value\": \"dolore Excepteur\"\n        },\n        {\n          \"name\": \"tempor non s\",\n          \"field_type\": \"enim\",\n          \"group\": \"ut do\",\n          \"label\": \"nisi id Duis\",\n          \"locked\": false,\n          \"order\": 78716392,\n          \"pattern\": \"proident anim esse\",\n          \"placeholder\": \"reprehenderit magna\",\n          \"required\": true,\n          \"value\": \"culpa do\"\n        }\n      ],\n      \"descriptor\": \"quis voluptate amet ipsum\",\n      \"expire_in\": \"\",\n      \"field_guard\": [\n        {\n          \"label\": \"irure ut anim\",\n          \"name\": \"aute cillum velit\",\n          \"type\": \"Ut consequat\"\n        },\n        {\n          \"label\": \"ut dolor dolore deserunt\",\n          \"name\": \"nu\",\n          \"type\": \"dolor esse\"\n        }\n      ],\n      \"lock_params\": [\n        \"id laborum l\",\n        \"Lorem\"\n      ],\n      \"merch_logo\": \"id labore\",\n      \"merch_terms\": \"dolor consectetur nulla in magna\",\n      \"options\": [\n        \"Excepteur \",\n        \"consectetur velit nulla anim incididunt\"\n      ],\n      \"part_payments\": {\n        \"enabled\": \"culp\",\n        \"floor\": \"cillum esse\",\n        \"max\": \"est sit\",\n        \"max_rate\": \"officia ullamco id\",\n        \"min\": \"est pariatur anim Ut\",\n        \"min_rate\": \"elit\"\n      },\n      \"postback\": \"in\",\n      \"postback_password\": \"sed\",\n      \"postback_policy\": \"deserunt laboris ut reprehenderit\",\n      \"postback_username\": \"ullamco ipsum sit\",\n      \"redirect_delay\": 76242252,\n      \"redirect_failure\": \"labore ipsum et consectetur esse\",\n      \"redirect_success\": \"incididunt\",\n      \"renderer\": \"sed tempor\",\n      \"return_params\": \"mollit\",\n      \"ui\": {\n        \"address_mandatory\": false,\n        \"form_auto_complete\": \"consequat\",\n        \"ordering\": 75202835,\n        \"postcode_mandatory\": true\n      }\n    },\n    \"email\": \"card.holder@citypay.com\",\n    \"subscription_id\": \"aliquip dolor ad nisi sint\",\n    \"tx_type\": \"exercitation magna commodo\"\n  },\n  \"attachments\": [\n    {\n      \"filename\": \"sit id ullamco\",\n      \"mime_type\": \"incididunt dolore et\",\n      \"data\": \"dolore ex officia\"\n    },\n    {\n      \"filename\": \"ad mollit cons\",\n      \"mime_type\": \"sed in fugiat ex\",\n      \"data\": \"exerci\"\n    }\n  ],\n  \"descriptor\": \"qui Duis culpa proident\",\n  \"due\": \"1971-07-15\",\n  \"email_notification_path\": {\n    \"to\": \"n\",\n    \"bcc\": \"et\",\n    \"cc\": \"et amet deserunt\",\n    \"reply_to\": \"au\",\n    \"template\": \"ullamco cupidatat\"\n  },\n  \"sms_notification_path\": {\n    \"to\": \"officia ad veniam\",\n    \"template\": \"velit dolore in\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/bill-payment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"bill-payment"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "cf505ffa-42bc-4b6a-a144-d55d308d6bf3",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"amount\": -47984565,\n    \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n    \"merchantid\": 11223344,\n    \"accountno\": \"quis adipisicing\",\n    \"cardholder\": {\n      \"accept_headers\": \"laboris ea minim Lorem sit\",\n      \"address\": {\n        \"address1\": \"79 Parliament St\",\n        \"address2\": \"Westminster\",\n        \"address3\": \"ut do Excepteur q\",\n        \"area\": \"London\",\n        \"country\": \"GB\",\n        \"label\": \"Head Office\",\n        \"postcode\": \"L1 789\"\n      },\n      \"company\": \"Acme Ltd\",\n      \"email\": \"card.holder@citypay.com\",\n      \"firstname\": \"John\",\n      \"lastname\": \"Smith\",\n      \"mobile_no\": \"do e\",\n      \"remote_addr\": \"irure veniam\",\n      \"title\": \"Mr\",\n      \"user_agent\": \"tempor\"\n    },\n    \"cart\": {\n      \"contents\": [\n        {\n          \"amount\": 40159618,\n          \"brand\": \"sunt sed ea nulla\",\n          \"category\": \"proident\",\n          \"count\": -15674439,\n          \"label\": \"amet adipisicing fugiat\",\n          \"max\": 46148784,\n          \"sku\": \"c\",\n          \"variant\": \"eu in\"\n        },\n        {\n          \"amount\": -8249102,\n          \"brand\": \"ex commodo\",\n          \"category\": \"exercitation esse\",\n          \"count\": -2151543,\n          \"label\": \"elit commodo et\",\n          \"max\": -33085991,\n          \"sku\": \"veniam labore laborum sed\",\n          \"variant\": \"consectetur incididunt non dolore\"\n        }\n      ],\n      \"coupon\": \"ipsum sunt ut commodo id\",\n      \"mode\": -98280927,\n      \"product_description\": \"cupidatat amet laboris\",\n      \"product_information\": \"nulla sint qui\",\n      \"shipping\": 20611566,\n      \"tax\": -49607071\n    },\n    \"client_version\": \"dolor eu exercitation eiusmod\",\n    \"config\": {\n      \"acs_mode\": \"in\",\n      \"custom_params\": [\n        {\n          \"name\": \"mollit sunt reprehenderit dolor\",\n          \"field_type\": \"anim ut dolore esse do\",\n          \"group\": \"nisi voluptate\",\n          \"label\": \"adipisicing esse cupidatat\",\n          \"locked\": true,\n          \"order\": -25342992,\n          \"pattern\": \"consectetur esse\",\n          \"placeholder\": \"in aute\",\n          \"required\": false,\n          \"value\": \"dolore Excepteur\"\n        },\n        {\n          \"name\": \"tempor non s\",\n          \"field_type\": \"enim\",\n          \"group\": \"ut do\",\n          \"label\": \"nisi id Duis\",\n          \"locked\": false,\n          \"order\": 78716392,\n          \"pattern\": \"proident anim esse\",\n          \"placeholder\": \"reprehenderit magna\",\n          \"required\": true,\n          \"value\": \"culpa do\"\n        }\n      ],\n      \"descriptor\": \"quis voluptate amet ipsum\",\n      \"expire_in\": \"\",\n      \"field_guard\": [\n        {\n          \"label\": \"irure ut anim\",\n          \"name\": \"aute cillum velit\",\n          \"type\": \"Ut consequat\"\n        },\n        {\n          \"label\": \"ut dolor dolore deserunt\",\n          \"name\": \"nu\",\n          \"type\": \"dolor esse\"\n        }\n      ],\n      \"lock_params\": [\n        \"id laborum l\",\n        \"Lorem\"\n      ],\n      \"merch_logo\": \"id labore\",\n      \"merch_terms\": \"dolor consectetur nulla in magna\",\n      \"options\": [\n        \"Excepteur \",\n        \"consectetur velit nulla anim incididunt\"\n      ],\n      \"part_payments\": {\n        \"enabled\": \"culp\",\n        \"floor\": \"cillum esse\",\n        \"max\": \"est sit\",\n        \"max_rate\": \"officia ullamco id\",\n        \"min\": \"est pariatur anim Ut\",\n        \"min_rate\": \"elit\"\n      },\n      \"postback\": \"in\",\n      \"postback_password\": \"sed\",\n      \"postback_policy\": \"deserunt laboris ut reprehenderit\",\n      \"postback_username\": \"ullamco ipsum sit\",\n      \"redirect_delay\": 76242252,\n      \"redirect_failure\": \"labore ipsum et consectetur esse\",\n      \"redirect_success\": \"incididunt\",\n      \"renderer\": \"sed tempor\",\n      \"return_params\": \"mollit\",\n      \"ui\": {\n        \"address_mandatory\": false,\n        \"form_auto_complete\": \"consequat\",\n        \"ordering\": 75202835,\n        \"postcode_mandatory\": true\n      }\n    },\n    \"email\": \"card.holder@citypay.com\",\n    \"subscription_id\": \"aliquip dolor ad nisi sint\",\n    \"tx_type\": \"exercitation magna commodo\"\n  },\n  \"attachments\": [\n    {\n      \"filename\": \"sit id ullamco\",\n      \"mime_type\": \"incididunt dolore et\",\n      \"data\": \"dolore ex officia\"\n    },\n    {\n      \"filename\": \"ad mollit cons\",\n      \"mime_type\": \"sed in fugiat ex\",\n      \"data\": \"exerci\"\n    }\n  ],\n  \"descriptor\": \"qui Duis culpa proident\",\n  \"due\": \"1971-07-15\",\n  \"email_notification_path\": {\n    \"to\": \"n\",\n    \"bcc\": \"et\",\n    \"cc\": \"et amet deserunt\",\n    \"reply_to\": \"au\",\n    \"template\": \"ullamco cupidatat\"\n  },\n  \"sms_notification_path\": {\n    \"to\": \"officia ad veniam\",\n    \"template\": \"velit dolore in\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/bill-payment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"bill-payment"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "a52dd72e-dcbd-41cc-add7-98330331d406",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"amount\": -47984565,\n    \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n    \"merchantid\": 11223344,\n    \"accountno\": \"quis adipisicing\",\n    \"cardholder\": {\n      \"accept_headers\": \"laboris ea minim Lorem sit\",\n      \"address\": {\n        \"address1\": \"79 Parliament St\",\n        \"address2\": \"Westminster\",\n        \"address3\": \"ut do Excepteur q\",\n        \"area\": \"London\",\n        \"country\": \"GB\",\n        \"label\": \"Head Office\",\n        \"postcode\": \"L1 789\"\n      },\n      \"company\": \"Acme Ltd\",\n      \"email\": \"card.holder@citypay.com\",\n      \"firstname\": \"John\",\n      \"lastname\": \"Smith\",\n      \"mobile_no\": \"do e\",\n      \"remote_addr\": \"irure veniam\",\n      \"title\": \"Mr\",\n      \"user_agent\": \"tempor\"\n    },\n    \"cart\": {\n      \"contents\": [\n        {\n          \"amount\": 40159618,\n          \"brand\": \"sunt sed ea nulla\",\n          \"category\": \"proident\",\n          \"count\": -15674439,\n          \"label\": \"amet adipisicing fugiat\",\n          \"max\": 46148784,\n          \"sku\": \"c\",\n          \"variant\": \"eu in\"\n        },\n        {\n          \"amount\": -8249102,\n          \"brand\": \"ex commodo\",\n          \"category\": \"exercitation esse\",\n          \"count\": -2151543,\n          \"label\": \"elit commodo et\",\n          \"max\": -33085991,\n          \"sku\": \"veniam labore laborum sed\",\n          \"variant\": \"consectetur incididunt non dolore\"\n        }\n      ],\n      \"coupon\": \"ipsum sunt ut commodo id\",\n      \"mode\": -98280927,\n      \"product_description\": \"cupidatat amet laboris\",\n      \"product_information\": \"nulla sint qui\",\n      \"shipping\": 20611566,\n      \"tax\": -49607071\n    },\n    \"client_version\": \"dolor eu exercitation eiusmod\",\n    \"config\": {\n      \"acs_mode\": \"in\",\n      \"custom_params\": [\n        {\n          \"name\": \"mollit sunt reprehenderit dolor\",\n          \"field_type\": \"anim ut dolore esse do\",\n          \"group\": \"nisi voluptate\",\n          \"label\": \"adipisicing esse cupidatat\",\n          \"locked\": true,\n          \"order\": -25342992,\n          \"pattern\": \"consectetur esse\",\n          \"placeholder\": \"in aute\",\n          \"required\": false,\n          \"value\": \"dolore Excepteur\"\n        },\n        {\n          \"name\": \"tempor non s\",\n          \"field_type\": \"enim\",\n          \"group\": \"ut do\",\n          \"label\": \"nisi id Duis\",\n          \"locked\": false,\n          \"order\": 78716392,\n          \"pattern\": \"proident anim esse\",\n          \"placeholder\": \"reprehenderit magna\",\n          \"required\": true,\n          \"value\": \"culpa do\"\n        }\n      ],\n      \"descriptor\": \"quis voluptate amet ipsum\",\n      \"expire_in\": \"\",\n      \"field_guard\": [\n        {\n          \"label\": \"irure ut anim\",\n          \"name\": \"aute cillum velit\",\n          \"type\": \"Ut consequat\"\n        },\n        {\n          \"label\": \"ut dolor dolore deserunt\",\n          \"name\": \"nu\",\n          \"type\": \"dolor esse\"\n        }\n      ],\n      \"lock_params\": [\n        \"id laborum l\",\n        \"Lorem\"\n      ],\n      \"merch_logo\": \"id labore\",\n      \"merch_terms\": \"dolor consectetur nulla in magna\",\n      \"options\": [\n        \"Excepteur \",\n        \"consectetur velit nulla anim incididunt\"\n      ],\n      \"part_payments\": {\n        \"enabled\": \"culp\",\n        \"floor\": \"cillum esse\",\n        \"max\": \"est sit\",\n        \"max_rate\": \"officia ullamco id\",\n        \"min\": \"est pariatur anim Ut\",\n        \"min_rate\": \"elit\"\n      },\n      \"postback\": \"in\",\n      \"postback_password\": \"sed\",\n      \"postback_policy\": \"deserunt laboris ut reprehenderit\",\n      \"postback_username\": \"ullamco ipsum sit\",\n      \"redirect_delay\": 76242252,\n      \"redirect_failure\": \"labore ipsum et consectetur esse\",\n      \"redirect_success\": \"incididunt\",\n      \"renderer\": \"sed tempor\",\n      \"return_params\": \"mollit\",\n      \"ui\": {\n        \"address_mandatory\": false,\n        \"form_auto_complete\": \"consequat\",\n        \"ordering\": 75202835,\n        \"postcode_mandatory\": true\n      }\n    },\n    \"email\": \"card.holder@citypay.com\",\n    \"subscription_id\": \"aliquip dolor ad nisi sint\",\n    \"tx_type\": \"exercitation magna commodo\"\n  },\n  \"attachments\": [\n    {\n      \"filename\": \"sit id ullamco\",\n      \"mime_type\": \"incididunt dolore et\",\n      \"data\": \"dolore ex officia\"\n    },\n    {\n      \"filename\": \"ad mollit cons\",\n      \"mime_type\": \"sed in fugiat ex\",\n      \"data\": \"exerci\"\n    }\n  ],\n  \"descriptor\": \"qui Duis culpa proident\",\n  \"due\": \"1971-07-15\",\n  \"email_notification_path\": {\n    \"to\": \"n\",\n    \"bcc\": \"et\",\n    \"cc\": \"et amet deserunt\",\n    \"reply_to\": \"au\",\n    \"template\": \"ullamco cupidatat\"\n  },\n  \"sms_notification_path\": {\n    \"to\": \"officia ad veniam\",\n    \"template\": \"velit dolore in\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/bill-payment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"bill-payment"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "1c7a5245-8eb4-4807-93ab-391e0ef2c248",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"amount\": -47984565,\n    \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n    \"merchantid\": 11223344,\n    \"accountno\": \"quis adipisicing\",\n    \"cardholder\": {\n      \"accept_headers\": \"laboris ea minim Lorem sit\",\n      \"address\": {\n        \"address1\": \"79 Parliament St\",\n        \"address2\": \"Westminster\",\n        \"address3\": \"ut do Excepteur q\",\n        \"area\": \"London\",\n        \"country\": \"GB\",\n        \"label\": \"Head Office\",\n        \"postcode\": \"L1 789\"\n      },\n      \"company\": \"Acme Ltd\",\n      \"email\": \"card.holder@citypay.com\",\n      \"firstname\": \"John\",\n      \"lastname\": \"Smith\",\n      \"mobile_no\": \"do e\",\n      \"remote_addr\": \"irure veniam\",\n      \"title\": \"Mr\",\n      \"user_agent\": \"tempor\"\n    },\n    \"cart\": {\n      \"contents\": [\n        {\n          \"amount\": 40159618,\n          \"brand\": \"sunt sed ea nulla\",\n          \"category\": \"proident\",\n          \"count\": -15674439,\n          \"label\": \"amet adipisicing fugiat\",\n          \"max\": 46148784,\n          \"sku\": \"c\",\n          \"variant\": \"eu in\"\n        },\n        {\n          \"amount\": -8249102,\n          \"brand\": \"ex commodo\",\n          \"category\": \"exercitation esse\",\n          \"count\": -2151543,\n          \"label\": \"elit commodo et\",\n          \"max\": -33085991,\n          \"sku\": \"veniam labore laborum sed\",\n          \"variant\": \"consectetur incididunt non dolore\"\n        }\n      ],\n      \"coupon\": \"ipsum sunt ut commodo id\",\n      \"mode\": -98280927,\n      \"product_description\": \"cupidatat amet laboris\",\n      \"product_information\": \"nulla sint qui\",\n      \"shipping\": 20611566,\n      \"tax\": -49607071\n    },\n    \"client_version\": \"dolor eu exercitation eiusmod\",\n    \"config\": {\n      \"acs_mode\": \"in\",\n      \"custom_params\": [\n        {\n          \"name\": \"mollit sunt reprehenderit dolor\",\n          \"field_type\": \"anim ut dolore esse do\",\n          \"group\": \"nisi voluptate\",\n          \"label\": \"adipisicing esse cupidatat\",\n          \"locked\": true,\n          \"order\": -25342992,\n          \"pattern\": \"consectetur esse\",\n          \"placeholder\": \"in aute\",\n          \"required\": false,\n          \"value\": \"dolore Excepteur\"\n        },\n        {\n          \"name\": \"tempor non s\",\n          \"field_type\": \"enim\",\n          \"group\": \"ut do\",\n          \"label\": \"nisi id Duis\",\n          \"locked\": false,\n          \"order\": 78716392,\n          \"pattern\": \"proident anim esse\",\n          \"placeholder\": \"reprehenderit magna\",\n          \"required\": true,\n          \"value\": \"culpa do\"\n        }\n      ],\n      \"descriptor\": \"quis voluptate amet ipsum\",\n      \"expire_in\": \"\",\n      \"field_guard\": [\n        {\n          \"label\": \"irure ut anim\",\n          \"name\": \"aute cillum velit\",\n          \"type\": \"Ut consequat\"\n        },\n        {\n          \"label\": \"ut dolor dolore deserunt\",\n          \"name\": \"nu\",\n          \"type\": \"dolor esse\"\n        }\n      ],\n      \"lock_params\": [\n        \"id laborum l\",\n        \"Lorem\"\n      ],\n      \"merch_logo\": \"id labore\",\n      \"merch_terms\": \"dolor consectetur nulla in magna\",\n      \"options\": [\n        \"Excepteur \",\n        \"consectetur velit nulla anim incididunt\"\n      ],\n      \"part_payments\": {\n        \"enabled\": \"culp\",\n        \"floor\": \"cillum esse\",\n        \"max\": \"est sit\",\n        \"max_rate\": \"officia ullamco id\",\n        \"min\": \"est pariatur anim Ut\",\n        \"min_rate\": \"elit\"\n      },\n      \"postback\": \"in\",\n      \"postback_password\": \"sed\",\n      \"postback_policy\": \"deserunt laboris ut reprehenderit\",\n      \"postback_username\": \"ullamco ipsum sit\",\n      \"redirect_delay\": 76242252,\n      \"redirect_failure\": \"labore ipsum et consectetur esse\",\n      \"redirect_success\": \"incididunt\",\n      \"renderer\": \"sed tempor\",\n      \"return_params\": \"mollit\",\n      \"ui\": {\n        \"address_mandatory\": false,\n        \"form_auto_complete\": \"consequat\",\n        \"ordering\": 75202835,\n        \"postcode_mandatory\": true\n      }\n    },\n    \"email\": \"card.holder@citypay.com\",\n    \"subscription_id\": \"aliquip dolor ad nisi sint\",\n    \"tx_type\": \"exercitation magna commodo\"\n  },\n  \"attachments\": [\n    {\n      \"filename\": \"sit id ullamco\",\n      \"mime_type\": \"incididunt dolore et\",\n      \"data\": \"dolore ex officia\"\n    },\n    {\n      \"filename\": \"ad mollit cons\",\n      \"mime_type\": \"sed in fugiat ex\",\n      \"data\": \"exerci\"\n    }\n  ],\n  \"descriptor\": \"qui Duis culpa proident\",\n  \"due\": \"1971-07-15\",\n  \"email_notification_path\": {\n    \"to\": \"n\",\n    \"bcc\": \"et\",\n    \"cc\": \"et amet deserunt\",\n    \"reply_to\": \"au\",\n    \"template\": \"ullamco cupidatat\"\n  },\n  \"sms_notification_path\": {\n    \"to\": \"officia ad veniam\",\n    \"template\": \"velit dolore in\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/bill-payment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"bill-payment"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "59832cc1-b7c7-4921-b172-b16c1c367c7b",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"amount\": -47984565,\n    \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n    \"merchantid\": 11223344,\n    \"accountno\": \"quis adipisicing\",\n    \"cardholder\": {\n      \"accept_headers\": \"laboris ea minim Lorem sit\",\n      \"address\": {\n        \"address1\": \"79 Parliament St\",\n        \"address2\": \"Westminster\",\n        \"address3\": \"ut do Excepteur q\",\n        \"area\": \"London\",\n        \"country\": \"GB\",\n        \"label\": \"Head Office\",\n        \"postcode\": \"L1 789\"\n      },\n      \"company\": \"Acme Ltd\",\n      \"email\": \"card.holder@citypay.com\",\n      \"firstname\": \"John\",\n      \"lastname\": \"Smith\",\n      \"mobile_no\": \"do e\",\n      \"remote_addr\": \"irure veniam\",\n      \"title\": \"Mr\",\n      \"user_agent\": \"tempor\"\n    },\n    \"cart\": {\n      \"contents\": [\n        {\n          \"amount\": 40159618,\n          \"brand\": \"sunt sed ea nulla\",\n          \"category\": \"proident\",\n          \"count\": -15674439,\n          \"label\": \"amet adipisicing fugiat\",\n          \"max\": 46148784,\n          \"sku\": \"c\",\n          \"variant\": \"eu in\"\n        },\n        {\n          \"amount\": -8249102,\n          \"brand\": \"ex commodo\",\n          \"category\": \"exercitation esse\",\n          \"count\": -2151543,\n          \"label\": \"elit commodo et\",\n          \"max\": -33085991,\n          \"sku\": \"veniam labore laborum sed\",\n          \"variant\": \"consectetur incididunt non dolore\"\n        }\n      ],\n      \"coupon\": \"ipsum sunt ut commodo id\",\n      \"mode\": -98280927,\n      \"product_description\": \"cupidatat amet laboris\",\n      \"product_information\": \"nulla sint qui\",\n      \"shipping\": 20611566,\n      \"tax\": -49607071\n    },\n    \"client_version\": \"dolor eu exercitation eiusmod\",\n    \"config\": {\n      \"acs_mode\": \"in\",\n      \"custom_params\": [\n        {\n          \"name\": \"mollit sunt reprehenderit dolor\",\n          \"field_type\": \"anim ut dolore esse do\",\n          \"group\": \"nisi voluptate\",\n          \"label\": \"adipisicing esse cupidatat\",\n          \"locked\": true,\n          \"order\": -25342992,\n          \"pattern\": \"consectetur esse\",\n          \"placeholder\": \"in aute\",\n          \"required\": false,\n          \"value\": \"dolore Excepteur\"\n        },\n        {\n          \"name\": \"tempor non s\",\n          \"field_type\": \"enim\",\n          \"group\": \"ut do\",\n          \"label\": \"nisi id Duis\",\n          \"locked\": false,\n          \"order\": 78716392,\n          \"pattern\": \"proident anim esse\",\n          \"placeholder\": \"reprehenderit magna\",\n          \"required\": true,\n          \"value\": \"culpa do\"\n        }\n      ],\n      \"descriptor\": \"quis voluptate amet ipsum\",\n      \"expire_in\": \"\",\n      \"field_guard\": [\n        {\n          \"label\": \"irure ut anim\",\n          \"name\": \"aute cillum velit\",\n          \"type\": \"Ut consequat\"\n        },\n        {\n          \"label\": \"ut dolor dolore deserunt\",\n          \"name\": \"nu\",\n          \"type\": \"dolor esse\"\n        }\n      ],\n      \"lock_params\": [\n        \"id laborum l\",\n        \"Lorem\"\n      ],\n      \"merch_logo\": \"id labore\",\n      \"merch_terms\": \"dolor consectetur nulla in magna\",\n      \"options\": [\n        \"Excepteur \",\n        \"consectetur velit nulla anim incididunt\"\n      ],\n      \"part_payments\": {\n        \"enabled\": \"culp\",\n        \"floor\": \"cillum esse\",\n        \"max\": \"est sit\",\n        \"max_rate\": \"officia ullamco id\",\n        \"min\": \"est pariatur anim Ut\",\n        \"min_rate\": \"elit\"\n      },\n      \"postback\": \"in\",\n      \"postback_password\": \"sed\",\n      \"postback_policy\": \"deserunt laboris ut reprehenderit\",\n      \"postback_username\": \"ullamco ipsum sit\",\n      \"redirect_delay\": 76242252,\n      \"redirect_failure\": \"labore ipsum et consectetur esse\",\n      \"redirect_success\": \"incididunt\",\n      \"renderer\": \"sed tempor\",\n      \"return_params\": \"mollit\",\n      \"ui\": {\n        \"address_mandatory\": false,\n        \"form_auto_complete\": \"consequat\",\n        \"ordering\": 75202835,\n        \"postcode_mandatory\": true\n      }\n    },\n    \"email\": \"card.holder@citypay.com\",\n    \"subscription_id\": \"aliquip dolor ad nisi sint\",\n    \"tx_type\": \"exercitation magna commodo\"\n  },\n  \"attachments\": [\n    {\n      \"filename\": \"sit id ullamco\",\n      \"mime_type\": \"incididunt dolore et\",\n      \"data\": \"dolore ex officia\"\n    },\n    {\n      \"filename\": \"ad mollit cons\",\n      \"mime_type\": \"sed in fugiat ex\",\n      \"data\": \"exerci\"\n    }\n  ],\n  \"descriptor\": \"qui Duis culpa proident\",\n  \"due\": \"1971-07-15\",\n  \"email_notification_path\": {\n    \"to\": \"n\",\n    \"bcc\": \"et\",\n    \"cc\": \"et amet deserunt\",\n    \"reply_to\": \"au\",\n    \"template\": \"ullamco cupidatat\"\n  },\n  \"sms_notification_path\": {\n    \"to\": \"officia ad veniam\",\n    \"template\": \"velit dolore in\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/bill-payment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"bill-payment"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Paylink Token",
					"id": "8228294c-810b-4df0-8b39-db4465861f94",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 5451506,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"accountno\": \"pariatur et\",\n  \"cardholder\": {\n    \"accept_headers\": \"eu enim in ullamco\",\n    \"address\": {\n      \"address1\": \"79 Parliament St\",\n      \"address2\": \"Westminster\",\n      \"address3\": \"Lorem\",\n      \"area\": \"London\",\n      \"country\": \"GB\",\n      \"label\": \"Head Office\",\n      \"postcode\": \"L1 789\"\n    },\n    \"company\": \"Acme Ltd\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"a\",\n    \"remote_addr\": \"sint\",\n    \"title\": \"Mr\",\n    \"user_agent\": \"Ut laboris amet veniam\"\n  },\n  \"cart\": {\n    \"contents\": [\n      {\n        \"amount\": 87804637,\n        \"brand\": \"qui aliquip anim\",\n        \"category\": \"esse non ex voluptate\",\n        \"count\": -25297563,\n        \"label\": \"non ut consectetur quis\",\n        \"max\": 55705025,\n        \"sku\": \"Duis dolore cupidatat\",\n        \"variant\": \"dolore c\"\n      },\n      {\n        \"amount\": 53253787,\n        \"brand\": \"quis deserunt commodo anim\",\n        \"category\": \"deserunt ut ullamco\",\n        \"count\": -40259267,\n        \"label\": \"e\",\n        \"max\": 67004082,\n        \"sku\": \"dolore consectetur commodo\",\n        \"variant\": \"in tempor reprehenderit\"\n      }\n    ],\n    \"coupon\": \"ipsum ea mollit non aute\",\n    \"mode\": -49151235,\n    \"product_description\": \"fugiat officia proident\",\n    \"product_information\": \"ad Excepteur do dolore dolor\",\n    \"shipping\": 76961545,\n    \"tax\": -39535002\n  },\n  \"client_version\": \"quis mollit ex\",\n  \"config\": {\n    \"acs_mode\": \"in aliquip qui incididunt\",\n    \"custom_params\": [\n      {\n        \"name\": \"dolore Duis laboris\",\n        \"field_type\": \"consectetur\",\n        \"group\": \"proident\",\n        \"label\": \"est\",\n        \"locked\": false,\n        \"order\": 67324320,\n        \"pattern\": \"laborum dolor irure commodo\",\n        \"placeholder\": \"in dolore sed\",\n        \"required\": true,\n        \"value\": \"velit fugiat Excepteur magna\"\n      },\n      {\n        \"name\": \"nulla aute veniam aliqua\",\n        \"field_type\": \"in\",\n        \"group\": \"aliquip nostrud\",\n        \"label\": \"qui ullamco sit\",\n        \"locked\": true,\n        \"order\": -48460109,\n        \"pattern\": \"sint nostrud\",\n        \"placeholder\": \"id irure et sunt pariatur\",\n        \"required\": false,\n        \"value\": \"irure \"\n      }\n    ],\n    \"descriptor\": \"q\",\n    \"expire_in\": \"magn\",\n    \"field_guard\": [\n      {\n        \"label\": \"dolore\",\n        \"name\": \"velit tempor reprehenderit esse adipisicing\",\n        \"type\": \"quis dolore ullamco nulla\"\n      },\n      {\n        \"label\": \"in E\",\n        \"name\": \"velit ea dolore aliquip\",\n        \"type\": \"et eiusmod cupidatat\"\n      }\n    ],\n    \"lock_params\": [\n      \"cupidatat ull\",\n      \"deserunt ad\"\n    ],\n    \"merch_logo\": \"laboris id tempor ut\",\n    \"merch_terms\": \"sed esse laborum\",\n    \"options\": [\n      \"nisi quis non\",\n      \"enim aliquip\"\n    ],\n    \"part_payments\": {\n      \"enabled\": \"mollit reprehenderit\",\n      \"floor\": \"dolor exercitation\",\n      \"max\": \"consectetur\",\n      \"max_rate\": \"proident incididunt\",\n      \"min\": \"Lorem laboris\",\n      \"min_rate\": \"Duis sit\"\n    },\n    \"postback\": \"id mollit in\",\n    \"postback_password\": \"ut dolor nulla est\",\n    \"postback_policy\": \"laborum enim ipsum qui\",\n    \"postback_username\": \"Ut consequat voluptate amet\",\n    \"redirect_delay\": 54787172,\n    \"redirect_failure\": \"dolor consectetur fugiat\",\n    \"redirect_success\": \"in sunt velit nisi\",\n    \"renderer\": \"in dolor eu proident\",\n    \"return_params\": \"officia occaecat\",\n    \"ui\": {\n      \"address_mandatory\": true,\n      \"form_auto_complete\": \"cillum non occaecat sint\",\n      \"ordering\": 28437231,\n      \"postcode_mandatory\": false\n    }\n  },\n  \"email\": \"card.holder@citypay.com\",\n  \"subscription_id\": \"voluptate incididunt\",\n  \"tx_type\": \"enim in dolore\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/paylink/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paylink",
								"create"
							]
						},
						"description": "Creates a Paylink token from the CityPay API."
					},
					"response": [
						{
							"id": "acfa75fe-f3e3-4ee8-967b-00695ec4530a",
							"name": "Response defining the result of the token request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 5451506,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"accountno\": \"pariatur et\",\n  \"cardholder\": {\n    \"accept_headers\": \"eu enim in ullamco\",\n    \"address\": {\n      \"address1\": \"79 Parliament St\",\n      \"address2\": \"Westminster\",\n      \"address3\": \"Lorem\",\n      \"area\": \"London\",\n      \"country\": \"GB\",\n      \"label\": \"Head Office\",\n      \"postcode\": \"L1 789\"\n    },\n    \"company\": \"Acme Ltd\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"a\",\n    \"remote_addr\": \"sint\",\n    \"title\": \"Mr\",\n    \"user_agent\": \"Ut laboris amet veniam\"\n  },\n  \"cart\": {\n    \"contents\": [\n      {\n        \"amount\": 87804637,\n        \"brand\": \"qui aliquip anim\",\n        \"category\": \"esse non ex voluptate\",\n        \"count\": -25297563,\n        \"label\": \"non ut consectetur quis\",\n        \"max\": 55705025,\n        \"sku\": \"Duis dolore cupidatat\",\n        \"variant\": \"dolore c\"\n      },\n      {\n        \"amount\": 53253787,\n        \"brand\": \"quis deserunt commodo anim\",\n        \"category\": \"deserunt ut ullamco\",\n        \"count\": -40259267,\n        \"label\": \"e\",\n        \"max\": 67004082,\n        \"sku\": \"dolore consectetur commodo\",\n        \"variant\": \"in tempor reprehenderit\"\n      }\n    ],\n    \"coupon\": \"ipsum ea mollit non aute\",\n    \"mode\": -49151235,\n    \"product_description\": \"fugiat officia proident\",\n    \"product_information\": \"ad Excepteur do dolore dolor\",\n    \"shipping\": 76961545,\n    \"tax\": -39535002\n  },\n  \"client_version\": \"quis mollit ex\",\n  \"config\": {\n    \"acs_mode\": \"in aliquip qui incididunt\",\n    \"custom_params\": [\n      {\n        \"name\": \"dolore Duis laboris\",\n        \"field_type\": \"consectetur\",\n        \"group\": \"proident\",\n        \"label\": \"est\",\n        \"locked\": false,\n        \"order\": 67324320,\n        \"pattern\": \"laborum dolor irure commodo\",\n        \"placeholder\": \"in dolore sed\",\n        \"required\": true,\n        \"value\": \"velit fugiat Excepteur magna\"\n      },\n      {\n        \"name\": \"nulla aute veniam aliqua\",\n        \"field_type\": \"in\",\n        \"group\": \"aliquip nostrud\",\n        \"label\": \"qui ullamco sit\",\n        \"locked\": true,\n        \"order\": -48460109,\n        \"pattern\": \"sint nostrud\",\n        \"placeholder\": \"id irure et sunt pariatur\",\n        \"required\": false,\n        \"value\": \"irure \"\n      }\n    ],\n    \"descriptor\": \"q\",\n    \"expire_in\": \"magn\",\n    \"field_guard\": [\n      {\n        \"label\": \"dolore\",\n        \"name\": \"velit tempor reprehenderit esse adipisicing\",\n        \"type\": \"quis dolore ullamco nulla\"\n      },\n      {\n        \"label\": \"in E\",\n        \"name\": \"velit ea dolore aliquip\",\n        \"type\": \"et eiusmod cupidatat\"\n      }\n    ],\n    \"lock_params\": [\n      \"cupidatat ull\",\n      \"deserunt ad\"\n    ],\n    \"merch_logo\": \"laboris id tempor ut\",\n    \"merch_terms\": \"sed esse laborum\",\n    \"options\": [\n      \"nisi quis non\",\n      \"enim aliquip\"\n    ],\n    \"part_payments\": {\n      \"enabled\": \"mollit reprehenderit\",\n      \"floor\": \"dolor exercitation\",\n      \"max\": \"consectetur\",\n      \"max_rate\": \"proident incididunt\",\n      \"min\": \"Lorem laboris\",\n      \"min_rate\": \"Duis sit\"\n    },\n    \"postback\": \"id mollit in\",\n    \"postback_password\": \"ut dolor nulla est\",\n    \"postback_policy\": \"laborum enim ipsum qui\",\n    \"postback_username\": \"Ut consequat voluptate amet\",\n    \"redirect_delay\": 54787172,\n    \"redirect_failure\": \"dolor consectetur fugiat\",\n    \"redirect_success\": \"in sunt velit nisi\",\n    \"renderer\": \"in dolor eu proident\",\n    \"return_params\": \"officia occaecat\",\n    \"ui\": {\n      \"address_mandatory\": true,\n      \"form_auto_complete\": \"cillum non occaecat sint\",\n      \"ordering\": 28437231,\n      \"postcode_mandatory\": false\n    }\n  },\n  \"email\": \"card.holder@citypay.com\",\n  \"subscription_id\": \"voluptate incididunt\",\n  \"tx_type\": \"enim in dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"non in incididunt dolor\",\n  \"result\": -58739661,\n  \"token\": \"est proident sunt incididunt amet\",\n  \"attachments\": {\n    \"name\": \"\",\n    \"result\": \"reprehenderit volu\",\n    \"url\": \"ali\"\n  },\n  \"bps\": \"pariatur culpa reprehenderit in\",\n  \"date_created\": \"1986-01-18T07:02:37.026Z\",\n  \"errors\": [\n    {\n      \"code\": \"culpa quis consectetur\",\n      \"msg\": \"aute \"\n    },\n    {\n      \"code\": \"Ut\",\n      \"msg\": \"pariatur\"\n    }\n  ],\n  \"identifier\": \"sed\",\n  \"mode\": \"minim id\",\n  \"qr_code\": \"exercitation de\",\n  \"server_version\": \"ame\",\n  \"source\": \"17.96.26.166\",\n  \"url\": \"voluptate no\",\n  \"usc\": \"adipisicing aliqua esse ulla\"\n}"
						},
						{
							"id": "7d0eb966-2582-4b5b-9340-8803d5881cb6",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 5451506,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"accountno\": \"pariatur et\",\n  \"cardholder\": {\n    \"accept_headers\": \"eu enim in ullamco\",\n    \"address\": {\n      \"address1\": \"79 Parliament St\",\n      \"address2\": \"Westminster\",\n      \"address3\": \"Lorem\",\n      \"area\": \"London\",\n      \"country\": \"GB\",\n      \"label\": \"Head Office\",\n      \"postcode\": \"L1 789\"\n    },\n    \"company\": \"Acme Ltd\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"a\",\n    \"remote_addr\": \"sint\",\n    \"title\": \"Mr\",\n    \"user_agent\": \"Ut laboris amet veniam\"\n  },\n  \"cart\": {\n    \"contents\": [\n      {\n        \"amount\": 87804637,\n        \"brand\": \"qui aliquip anim\",\n        \"category\": \"esse non ex voluptate\",\n        \"count\": -25297563,\n        \"label\": \"non ut consectetur quis\",\n        \"max\": 55705025,\n        \"sku\": \"Duis dolore cupidatat\",\n        \"variant\": \"dolore c\"\n      },\n      {\n        \"amount\": 53253787,\n        \"brand\": \"quis deserunt commodo anim\",\n        \"category\": \"deserunt ut ullamco\",\n        \"count\": -40259267,\n        \"label\": \"e\",\n        \"max\": 67004082,\n        \"sku\": \"dolore consectetur commodo\",\n        \"variant\": \"in tempor reprehenderit\"\n      }\n    ],\n    \"coupon\": \"ipsum ea mollit non aute\",\n    \"mode\": -49151235,\n    \"product_description\": \"fugiat officia proident\",\n    \"product_information\": \"ad Excepteur do dolore dolor\",\n    \"shipping\": 76961545,\n    \"tax\": -39535002\n  },\n  \"client_version\": \"quis mollit ex\",\n  \"config\": {\n    \"acs_mode\": \"in aliquip qui incididunt\",\n    \"custom_params\": [\n      {\n        \"name\": \"dolore Duis laboris\",\n        \"field_type\": \"consectetur\",\n        \"group\": \"proident\",\n        \"label\": \"est\",\n        \"locked\": false,\n        \"order\": 67324320,\n        \"pattern\": \"laborum dolor irure commodo\",\n        \"placeholder\": \"in dolore sed\",\n        \"required\": true,\n        \"value\": \"velit fugiat Excepteur magna\"\n      },\n      {\n        \"name\": \"nulla aute veniam aliqua\",\n        \"field_type\": \"in\",\n        \"group\": \"aliquip nostrud\",\n        \"label\": \"qui ullamco sit\",\n        \"locked\": true,\n        \"order\": -48460109,\n        \"pattern\": \"sint nostrud\",\n        \"placeholder\": \"id irure et sunt pariatur\",\n        \"required\": false,\n        \"value\": \"irure \"\n      }\n    ],\n    \"descriptor\": \"q\",\n    \"expire_in\": \"magn\",\n    \"field_guard\": [\n      {\n        \"label\": \"dolore\",\n        \"name\": \"velit tempor reprehenderit esse adipisicing\",\n        \"type\": \"quis dolore ullamco nulla\"\n      },\n      {\n        \"label\": \"in E\",\n        \"name\": \"velit ea dolore aliquip\",\n        \"type\": \"et eiusmod cupidatat\"\n      }\n    ],\n    \"lock_params\": [\n      \"cupidatat ull\",\n      \"deserunt ad\"\n    ],\n    \"merch_logo\": \"laboris id tempor ut\",\n    \"merch_terms\": \"sed esse laborum\",\n    \"options\": [\n      \"nisi quis non\",\n      \"enim aliquip\"\n    ],\n    \"part_payments\": {\n      \"enabled\": \"mollit reprehenderit\",\n      \"floor\": \"dolor exercitation\",\n      \"max\": \"consectetur\",\n      \"max_rate\": \"proident incididunt\",\n      \"min\": \"Lorem laboris\",\n      \"min_rate\": \"Duis sit\"\n    },\n    \"postback\": \"id mollit in\",\n    \"postback_password\": \"ut dolor nulla est\",\n    \"postback_policy\": \"laborum enim ipsum qui\",\n    \"postback_username\": \"Ut consequat voluptate amet\",\n    \"redirect_delay\": 54787172,\n    \"redirect_failure\": \"dolor consectetur fugiat\",\n    \"redirect_success\": \"in sunt velit nisi\",\n    \"renderer\": \"in dolor eu proident\",\n    \"return_params\": \"officia occaecat\",\n    \"ui\": {\n      \"address_mandatory\": true,\n      \"form_auto_complete\": \"cillum non occaecat sint\",\n      \"ordering\": 28437231,\n      \"postcode_mandatory\": false\n    }\n  },\n  \"email\": \"card.holder@citypay.com\",\n  \"subscription_id\": \"voluptate incididunt\",\n  \"tx_type\": \"enim in dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "3197d904-0e9a-4ab0-a491-05a9c3d3ca50",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 5451506,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"accountno\": \"pariatur et\",\n  \"cardholder\": {\n    \"accept_headers\": \"eu enim in ullamco\",\n    \"address\": {\n      \"address1\": \"79 Parliament St\",\n      \"address2\": \"Westminster\",\n      \"address3\": \"Lorem\",\n      \"area\": \"London\",\n      \"country\": \"GB\",\n      \"label\": \"Head Office\",\n      \"postcode\": \"L1 789\"\n    },\n    \"company\": \"Acme Ltd\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"a\",\n    \"remote_addr\": \"sint\",\n    \"title\": \"Mr\",\n    \"user_agent\": \"Ut laboris amet veniam\"\n  },\n  \"cart\": {\n    \"contents\": [\n      {\n        \"amount\": 87804637,\n        \"brand\": \"qui aliquip anim\",\n        \"category\": \"esse non ex voluptate\",\n        \"count\": -25297563,\n        \"label\": \"non ut consectetur quis\",\n        \"max\": 55705025,\n        \"sku\": \"Duis dolore cupidatat\",\n        \"variant\": \"dolore c\"\n      },\n      {\n        \"amount\": 53253787,\n        \"brand\": \"quis deserunt commodo anim\",\n        \"category\": \"deserunt ut ullamco\",\n        \"count\": -40259267,\n        \"label\": \"e\",\n        \"max\": 67004082,\n        \"sku\": \"dolore consectetur commodo\",\n        \"variant\": \"in tempor reprehenderit\"\n      }\n    ],\n    \"coupon\": \"ipsum ea mollit non aute\",\n    \"mode\": -49151235,\n    \"product_description\": \"fugiat officia proident\",\n    \"product_information\": \"ad Excepteur do dolore dolor\",\n    \"shipping\": 76961545,\n    \"tax\": -39535002\n  },\n  \"client_version\": \"quis mollit ex\",\n  \"config\": {\n    \"acs_mode\": \"in aliquip qui incididunt\",\n    \"custom_params\": [\n      {\n        \"name\": \"dolore Duis laboris\",\n        \"field_type\": \"consectetur\",\n        \"group\": \"proident\",\n        \"label\": \"est\",\n        \"locked\": false,\n        \"order\": 67324320,\n        \"pattern\": \"laborum dolor irure commodo\",\n        \"placeholder\": \"in dolore sed\",\n        \"required\": true,\n        \"value\": \"velit fugiat Excepteur magna\"\n      },\n      {\n        \"name\": \"nulla aute veniam aliqua\",\n        \"field_type\": \"in\",\n        \"group\": \"aliquip nostrud\",\n        \"label\": \"qui ullamco sit\",\n        \"locked\": true,\n        \"order\": -48460109,\n        \"pattern\": \"sint nostrud\",\n        \"placeholder\": \"id irure et sunt pariatur\",\n        \"required\": false,\n        \"value\": \"irure \"\n      }\n    ],\n    \"descriptor\": \"q\",\n    \"expire_in\": \"magn\",\n    \"field_guard\": [\n      {\n        \"label\": \"dolore\",\n        \"name\": \"velit tempor reprehenderit esse adipisicing\",\n        \"type\": \"quis dolore ullamco nulla\"\n      },\n      {\n        \"label\": \"in E\",\n        \"name\": \"velit ea dolore aliquip\",\n        \"type\": \"et eiusmod cupidatat\"\n      }\n    ],\n    \"lock_params\": [\n      \"cupidatat ull\",\n      \"deserunt ad\"\n    ],\n    \"merch_logo\": \"laboris id tempor ut\",\n    \"merch_terms\": \"sed esse laborum\",\n    \"options\": [\n      \"nisi quis non\",\n      \"enim aliquip\"\n    ],\n    \"part_payments\": {\n      \"enabled\": \"mollit reprehenderit\",\n      \"floor\": \"dolor exercitation\",\n      \"max\": \"consectetur\",\n      \"max_rate\": \"proident incididunt\",\n      \"min\": \"Lorem laboris\",\n      \"min_rate\": \"Duis sit\"\n    },\n    \"postback\": \"id mollit in\",\n    \"postback_password\": \"ut dolor nulla est\",\n    \"postback_policy\": \"laborum enim ipsum qui\",\n    \"postback_username\": \"Ut consequat voluptate amet\",\n    \"redirect_delay\": 54787172,\n    \"redirect_failure\": \"dolor consectetur fugiat\",\n    \"redirect_success\": \"in sunt velit nisi\",\n    \"renderer\": \"in dolor eu proident\",\n    \"return_params\": \"officia occaecat\",\n    \"ui\": {\n      \"address_mandatory\": true,\n      \"form_auto_complete\": \"cillum non occaecat sint\",\n      \"ordering\": 28437231,\n      \"postcode_mandatory\": false\n    }\n  },\n  \"email\": \"card.holder@citypay.com\",\n  \"subscription_id\": \"voluptate incididunt\",\n  \"tx_type\": \"enim in dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"create"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "0cc0be81-6d38-4538-845e-16f7cddf6096",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 5451506,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"accountno\": \"pariatur et\",\n  \"cardholder\": {\n    \"accept_headers\": \"eu enim in ullamco\",\n    \"address\": {\n      \"address1\": \"79 Parliament St\",\n      \"address2\": \"Westminster\",\n      \"address3\": \"Lorem\",\n      \"area\": \"London\",\n      \"country\": \"GB\",\n      \"label\": \"Head Office\",\n      \"postcode\": \"L1 789\"\n    },\n    \"company\": \"Acme Ltd\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"a\",\n    \"remote_addr\": \"sint\",\n    \"title\": \"Mr\",\n    \"user_agent\": \"Ut laboris amet veniam\"\n  },\n  \"cart\": {\n    \"contents\": [\n      {\n        \"amount\": 87804637,\n        \"brand\": \"qui aliquip anim\",\n        \"category\": \"esse non ex voluptate\",\n        \"count\": -25297563,\n        \"label\": \"non ut consectetur quis\",\n        \"max\": 55705025,\n        \"sku\": \"Duis dolore cupidatat\",\n        \"variant\": \"dolore c\"\n      },\n      {\n        \"amount\": 53253787,\n        \"brand\": \"quis deserunt commodo anim\",\n        \"category\": \"deserunt ut ullamco\",\n        \"count\": -40259267,\n        \"label\": \"e\",\n        \"max\": 67004082,\n        \"sku\": \"dolore consectetur commodo\",\n        \"variant\": \"in tempor reprehenderit\"\n      }\n    ],\n    \"coupon\": \"ipsum ea mollit non aute\",\n    \"mode\": -49151235,\n    \"product_description\": \"fugiat officia proident\",\n    \"product_information\": \"ad Excepteur do dolore dolor\",\n    \"shipping\": 76961545,\n    \"tax\": -39535002\n  },\n  \"client_version\": \"quis mollit ex\",\n  \"config\": {\n    \"acs_mode\": \"in aliquip qui incididunt\",\n    \"custom_params\": [\n      {\n        \"name\": \"dolore Duis laboris\",\n        \"field_type\": \"consectetur\",\n        \"group\": \"proident\",\n        \"label\": \"est\",\n        \"locked\": false,\n        \"order\": 67324320,\n        \"pattern\": \"laborum dolor irure commodo\",\n        \"placeholder\": \"in dolore sed\",\n        \"required\": true,\n        \"value\": \"velit fugiat Excepteur magna\"\n      },\n      {\n        \"name\": \"nulla aute veniam aliqua\",\n        \"field_type\": \"in\",\n        \"group\": \"aliquip nostrud\",\n        \"label\": \"qui ullamco sit\",\n        \"locked\": true,\n        \"order\": -48460109,\n        \"pattern\": \"sint nostrud\",\n        \"placeholder\": \"id irure et sunt pariatur\",\n        \"required\": false,\n        \"value\": \"irure \"\n      }\n    ],\n    \"descriptor\": \"q\",\n    \"expire_in\": \"magn\",\n    \"field_guard\": [\n      {\n        \"label\": \"dolore\",\n        \"name\": \"velit tempor reprehenderit esse adipisicing\",\n        \"type\": \"quis dolore ullamco nulla\"\n      },\n      {\n        \"label\": \"in E\",\n        \"name\": \"velit ea dolore aliquip\",\n        \"type\": \"et eiusmod cupidatat\"\n      }\n    ],\n    \"lock_params\": [\n      \"cupidatat ull\",\n      \"deserunt ad\"\n    ],\n    \"merch_logo\": \"laboris id tempor ut\",\n    \"merch_terms\": \"sed esse laborum\",\n    \"options\": [\n      \"nisi quis non\",\n      \"enim aliquip\"\n    ],\n    \"part_payments\": {\n      \"enabled\": \"mollit reprehenderit\",\n      \"floor\": \"dolor exercitation\",\n      \"max\": \"consectetur\",\n      \"max_rate\": \"proident incididunt\",\n      \"min\": \"Lorem laboris\",\n      \"min_rate\": \"Duis sit\"\n    },\n    \"postback\": \"id mollit in\",\n    \"postback_password\": \"ut dolor nulla est\",\n    \"postback_policy\": \"laborum enim ipsum qui\",\n    \"postback_username\": \"Ut consequat voluptate amet\",\n    \"redirect_delay\": 54787172,\n    \"redirect_failure\": \"dolor consectetur fugiat\",\n    \"redirect_success\": \"in sunt velit nisi\",\n    \"renderer\": \"in dolor eu proident\",\n    \"return_params\": \"officia occaecat\",\n    \"ui\": {\n      \"address_mandatory\": true,\n      \"form_auto_complete\": \"cillum non occaecat sint\",\n      \"ordering\": 28437231,\n      \"postcode_mandatory\": false\n    }\n  },\n  \"email\": \"card.holder@citypay.com\",\n  \"subscription_id\": \"voluptate incididunt\",\n  \"tx_type\": \"enim in dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"create"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "d3b08f36-2f73-4381-8f6c-df420b057541",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 5451506,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"accountno\": \"pariatur et\",\n  \"cardholder\": {\n    \"accept_headers\": \"eu enim in ullamco\",\n    \"address\": {\n      \"address1\": \"79 Parliament St\",\n      \"address2\": \"Westminster\",\n      \"address3\": \"Lorem\",\n      \"area\": \"London\",\n      \"country\": \"GB\",\n      \"label\": \"Head Office\",\n      \"postcode\": \"L1 789\"\n    },\n    \"company\": \"Acme Ltd\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"a\",\n    \"remote_addr\": \"sint\",\n    \"title\": \"Mr\",\n    \"user_agent\": \"Ut laboris amet veniam\"\n  },\n  \"cart\": {\n    \"contents\": [\n      {\n        \"amount\": 87804637,\n        \"brand\": \"qui aliquip anim\",\n        \"category\": \"esse non ex voluptate\",\n        \"count\": -25297563,\n        \"label\": \"non ut consectetur quis\",\n        \"max\": 55705025,\n        \"sku\": \"Duis dolore cupidatat\",\n        \"variant\": \"dolore c\"\n      },\n      {\n        \"amount\": 53253787,\n        \"brand\": \"quis deserunt commodo anim\",\n        \"category\": \"deserunt ut ullamco\",\n        \"count\": -40259267,\n        \"label\": \"e\",\n        \"max\": 67004082,\n        \"sku\": \"dolore consectetur commodo\",\n        \"variant\": \"in tempor reprehenderit\"\n      }\n    ],\n    \"coupon\": \"ipsum ea mollit non aute\",\n    \"mode\": -49151235,\n    \"product_description\": \"fugiat officia proident\",\n    \"product_information\": \"ad Excepteur do dolore dolor\",\n    \"shipping\": 76961545,\n    \"tax\": -39535002\n  },\n  \"client_version\": \"quis mollit ex\",\n  \"config\": {\n    \"acs_mode\": \"in aliquip qui incididunt\",\n    \"custom_params\": [\n      {\n        \"name\": \"dolore Duis laboris\",\n        \"field_type\": \"consectetur\",\n        \"group\": \"proident\",\n        \"label\": \"est\",\n        \"locked\": false,\n        \"order\": 67324320,\n        \"pattern\": \"laborum dolor irure commodo\",\n        \"placeholder\": \"in dolore sed\",\n        \"required\": true,\n        \"value\": \"velit fugiat Excepteur magna\"\n      },\n      {\n        \"name\": \"nulla aute veniam aliqua\",\n        \"field_type\": \"in\",\n        \"group\": \"aliquip nostrud\",\n        \"label\": \"qui ullamco sit\",\n        \"locked\": true,\n        \"order\": -48460109,\n        \"pattern\": \"sint nostrud\",\n        \"placeholder\": \"id irure et sunt pariatur\",\n        \"required\": false,\n        \"value\": \"irure \"\n      }\n    ],\n    \"descriptor\": \"q\",\n    \"expire_in\": \"magn\",\n    \"field_guard\": [\n      {\n        \"label\": \"dolore\",\n        \"name\": \"velit tempor reprehenderit esse adipisicing\",\n        \"type\": \"quis dolore ullamco nulla\"\n      },\n      {\n        \"label\": \"in E\",\n        \"name\": \"velit ea dolore aliquip\",\n        \"type\": \"et eiusmod cupidatat\"\n      }\n    ],\n    \"lock_params\": [\n      \"cupidatat ull\",\n      \"deserunt ad\"\n    ],\n    \"merch_logo\": \"laboris id tempor ut\",\n    \"merch_terms\": \"sed esse laborum\",\n    \"options\": [\n      \"nisi quis non\",\n      \"enim aliquip\"\n    ],\n    \"part_payments\": {\n      \"enabled\": \"mollit reprehenderit\",\n      \"floor\": \"dolor exercitation\",\n      \"max\": \"consectetur\",\n      \"max_rate\": \"proident incididunt\",\n      \"min\": \"Lorem laboris\",\n      \"min_rate\": \"Duis sit\"\n    },\n    \"postback\": \"id mollit in\",\n    \"postback_password\": \"ut dolor nulla est\",\n    \"postback_policy\": \"laborum enim ipsum qui\",\n    \"postback_username\": \"Ut consequat voluptate amet\",\n    \"redirect_delay\": 54787172,\n    \"redirect_failure\": \"dolor consectetur fugiat\",\n    \"redirect_success\": \"in sunt velit nisi\",\n    \"renderer\": \"in dolor eu proident\",\n    \"return_params\": \"officia occaecat\",\n    \"ui\": {\n      \"address_mandatory\": true,\n      \"form_auto_complete\": \"cillum non occaecat sint\",\n      \"ordering\": 28437231,\n      \"postcode_mandatory\": false\n    }\n  },\n  \"email\": \"card.holder@citypay.com\",\n  \"subscription_id\": \"voluptate incididunt\",\n  \"tx_type\": \"enim in dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"create"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "abdc7c6a-2349-4b34-80c5-5712c35e5768",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 5451506,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"accountno\": \"pariatur et\",\n  \"cardholder\": {\n    \"accept_headers\": \"eu enim in ullamco\",\n    \"address\": {\n      \"address1\": \"79 Parliament St\",\n      \"address2\": \"Westminster\",\n      \"address3\": \"Lorem\",\n      \"area\": \"London\",\n      \"country\": \"GB\",\n      \"label\": \"Head Office\",\n      \"postcode\": \"L1 789\"\n    },\n    \"company\": \"Acme Ltd\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"a\",\n    \"remote_addr\": \"sint\",\n    \"title\": \"Mr\",\n    \"user_agent\": \"Ut laboris amet veniam\"\n  },\n  \"cart\": {\n    \"contents\": [\n      {\n        \"amount\": 87804637,\n        \"brand\": \"qui aliquip anim\",\n        \"category\": \"esse non ex voluptate\",\n        \"count\": -25297563,\n        \"label\": \"non ut consectetur quis\",\n        \"max\": 55705025,\n        \"sku\": \"Duis dolore cupidatat\",\n        \"variant\": \"dolore c\"\n      },\n      {\n        \"amount\": 53253787,\n        \"brand\": \"quis deserunt commodo anim\",\n        \"category\": \"deserunt ut ullamco\",\n        \"count\": -40259267,\n        \"label\": \"e\",\n        \"max\": 67004082,\n        \"sku\": \"dolore consectetur commodo\",\n        \"variant\": \"in tempor reprehenderit\"\n      }\n    ],\n    \"coupon\": \"ipsum ea mollit non aute\",\n    \"mode\": -49151235,\n    \"product_description\": \"fugiat officia proident\",\n    \"product_information\": \"ad Excepteur do dolore dolor\",\n    \"shipping\": 76961545,\n    \"tax\": -39535002\n  },\n  \"client_version\": \"quis mollit ex\",\n  \"config\": {\n    \"acs_mode\": \"in aliquip qui incididunt\",\n    \"custom_params\": [\n      {\n        \"name\": \"dolore Duis laboris\",\n        \"field_type\": \"consectetur\",\n        \"group\": \"proident\",\n        \"label\": \"est\",\n        \"locked\": false,\n        \"order\": 67324320,\n        \"pattern\": \"laborum dolor irure commodo\",\n        \"placeholder\": \"in dolore sed\",\n        \"required\": true,\n        \"value\": \"velit fugiat Excepteur magna\"\n      },\n      {\n        \"name\": \"nulla aute veniam aliqua\",\n        \"field_type\": \"in\",\n        \"group\": \"aliquip nostrud\",\n        \"label\": \"qui ullamco sit\",\n        \"locked\": true,\n        \"order\": -48460109,\n        \"pattern\": \"sint nostrud\",\n        \"placeholder\": \"id irure et sunt pariatur\",\n        \"required\": false,\n        \"value\": \"irure \"\n      }\n    ],\n    \"descriptor\": \"q\",\n    \"expire_in\": \"magn\",\n    \"field_guard\": [\n      {\n        \"label\": \"dolore\",\n        \"name\": \"velit tempor reprehenderit esse adipisicing\",\n        \"type\": \"quis dolore ullamco nulla\"\n      },\n      {\n        \"label\": \"in E\",\n        \"name\": \"velit ea dolore aliquip\",\n        \"type\": \"et eiusmod cupidatat\"\n      }\n    ],\n    \"lock_params\": [\n      \"cupidatat ull\",\n      \"deserunt ad\"\n    ],\n    \"merch_logo\": \"laboris id tempor ut\",\n    \"merch_terms\": \"sed esse laborum\",\n    \"options\": [\n      \"nisi quis non\",\n      \"enim aliquip\"\n    ],\n    \"part_payments\": {\n      \"enabled\": \"mollit reprehenderit\",\n      \"floor\": \"dolor exercitation\",\n      \"max\": \"consectetur\",\n      \"max_rate\": \"proident incididunt\",\n      \"min\": \"Lorem laboris\",\n      \"min_rate\": \"Duis sit\"\n    },\n    \"postback\": \"id mollit in\",\n    \"postback_password\": \"ut dolor nulla est\",\n    \"postback_policy\": \"laborum enim ipsum qui\",\n    \"postback_username\": \"Ut consequat voluptate amet\",\n    \"redirect_delay\": 54787172,\n    \"redirect_failure\": \"dolor consectetur fugiat\",\n    \"redirect_success\": \"in sunt velit nisi\",\n    \"renderer\": \"in dolor eu proident\",\n    \"return_params\": \"officia occaecat\",\n    \"ui\": {\n      \"address_mandatory\": true,\n      \"form_auto_complete\": \"cillum non occaecat sint\",\n      \"ordering\": 28437231,\n      \"postcode_mandatory\": false\n    }\n  },\n  \"email\": \"card.holder@citypay.com\",\n  \"subscription_id\": \"voluptate incididunt\",\n  \"tx_type\": \"enim in dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"create"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Paylink Token Audit",
					"id": "d6730b57-b16e-4e59-95ab-d70e2da282f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"after\": \"1990-04-29T16:13:23.781Z\",\n  \"merchantid\": 11223344,\n  \"maxResults\": 88193380,\n  \"nextToken\": \"ad\",\n  \"orderBy\": [\n    \"dolore Duis do occaecat sint\",\n    \"do ullamco ut\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/paylink/token/changes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paylink",
								"token",
								"changes"
							]
						},
						"description": "Obtains any changes on Paylink Tokens since a given date and time. This allows for a merchant to regularly check on \nactivity over a collection of Paylink Tokens and to check on any events that may have occurred. If a Token is `Closed` \nit is not considered.\n\nOnly statuses that have been appended since the given date and time is returned.\n"
					},
					"response": [
						{
							"id": "baef012d-b5e1-4cd5-a240-c833f2b2bac5",
							"name": "Changes from tokens actioned after the pivotal date provided in the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"after\": \"1943-10-22T06:57:02.113Z\",\n  \"merchantid\": 11223344,\n  \"maxResults\": 3490211,\n  \"nextToken\": \"eu non irure\",\n  \"orderBy\": [\n    \"aute Excepteur nisi dolore\",\n    \"enim sed fugiat\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/token/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"token",
										"changes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tokens\": [\n    {\n      \"amount_paid\": 50130052,\n      \"auth_code\": \"nulla enim\",\n      \"card\": \"enim\",\n      \"created\": \"1983-07-22T10:53:32.700Z\",\n      \"datetime\": \"2013-08-16T16:59:22.342Z\",\n      \"identifier\": \"\",\n      \"is_attachment\": false,\n      \"is_cancelled\": true,\n      \"is_closed\": false,\n      \"is_customer_receipt_email_sent\": true,\n      \"is_email_sent\": true,\n      \"is_expired\": false,\n      \"is_form_viewed\": true,\n      \"is_merchant_notification_email_sent\": true,\n      \"is_open_for_payment\": true,\n      \"is_paid\": true,\n      \"is_payment_attempted\": false,\n      \"is_postback_ok\": true,\n      \"is_request_challenged\": true,\n      \"is_sms_sent\": false,\n      \"is_validated\": false,\n      \"last_event_date_time\": \"1972-04-04T10:43:28.246Z\",\n      \"last_payment_result\": \"aute et minim\",\n      \"mid\": \"dolor adipisicing dolor reprehenderit\",\n      \"payment_attempts_count\": -29534912,\n      \"state_history\": [\n        {\n          \"datetime\": \"1988-01-12T10:03:17.660Z\",\n          \"message\": \"ex sunt ad eu amet\",\n          \"state\": \"1962-05-21T18:55:48.631Z\"\n        },\n        {\n          \"datetime\": \"1947-03-21T02:50:49.679Z\",\n          \"message\": \"quis \",\n          \"state\": \"2016-06-06T03:19:25.070Z\"\n        }\n      ],\n      \"token\": \"magna ip\",\n      \"trans_no\": -61481453\n    },\n    {\n      \"amount_paid\": -11974671,\n      \"auth_code\": \"pariatur officia\",\n      \"card\": \"consequat sit et sed\",\n      \"created\": \"1999-02-28T23:03:23.848Z\",\n      \"datetime\": \"1966-03-20T14:07:23.964Z\",\n      \"identifier\": \"aliqua Excepteur exercitation commodo\",\n      \"is_attachment\": false,\n      \"is_cancelled\": true,\n      \"is_closed\": false,\n      \"is_customer_receipt_email_sent\": false,\n      \"is_email_sent\": true,\n      \"is_expired\": false,\n      \"is_form_viewed\": false,\n      \"is_merchant_notification_email_sent\": false,\n      \"is_open_for_payment\": true,\n      \"is_paid\": false,\n      \"is_payment_attempted\": false,\n      \"is_postback_ok\": false,\n      \"is_request_challenged\": false,\n      \"is_sms_sent\": false,\n      \"is_validated\": false,\n      \"last_event_date_time\": \"1978-12-05T14:56:40.064Z\",\n      \"last_payment_result\": \"labore sunt ea\",\n      \"mid\": \"tempor dolore Duis eiusmod cupidatat\",\n      \"payment_attempts_count\": -71245962,\n      \"state_history\": [\n        {\n          \"datetime\": \"1944-10-04T22:33:19.060Z\",\n          \"message\": \"Excepteur velit id do\",\n          \"state\": \"2001-12-18T03:22:35.062Z\"\n        },\n        {\n          \"datetime\": \"1981-05-28T12:49:59.118Z\",\n          \"message\": \"anim occaecat\",\n          \"state\": \"1986-07-25T05:59:02.111Z\"\n        }\n      ],\n      \"token\": \"officia laborum cillum ut quis\",\n      \"trans_no\": -38209944\n    }\n  ],\n  \"nextToken\": \"sint cupidatat exercitation esse pariatur\"\n}"
						},
						{
							"id": "d6e77502-7926-400d-9dcd-da8aef0f5b82",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"after\": \"1943-10-22T06:57:02.113Z\",\n  \"merchantid\": 11223344,\n  \"maxResults\": 3490211,\n  \"nextToken\": \"eu non irure\",\n  \"orderBy\": [\n    \"aute Excepteur nisi dolore\",\n    \"enim sed fugiat\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/token/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"token",
										"changes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "1f73a04b-9932-486d-b2ba-0b966c5f54f6",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"after\": \"1943-10-22T06:57:02.113Z\",\n  \"merchantid\": 11223344,\n  \"maxResults\": 3490211,\n  \"nextToken\": \"eu non irure\",\n  \"orderBy\": [\n    \"aute Excepteur nisi dolore\",\n    \"enim sed fugiat\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/token/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"token",
										"changes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "bae4f31b-4416-4740-8923-33e79544cb4a",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"after\": \"1943-10-22T06:57:02.113Z\",\n  \"merchantid\": 11223344,\n  \"maxResults\": 3490211,\n  \"nextToken\": \"eu non irure\",\n  \"orderBy\": [\n    \"aute Excepteur nisi dolore\",\n    \"enim sed fugiat\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/token/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"token",
										"changes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "94861006-0a84-4450-aa41-c166d48b3fcc",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"after\": \"1943-10-22T06:57:02.113Z\",\n  \"merchantid\": 11223344,\n  \"maxResults\": 3490211,\n  \"nextToken\": \"eu non irure\",\n  \"orderBy\": [\n    \"aute Excepteur nisi dolore\",\n    \"enim sed fugiat\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/token/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"token",
										"changes"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "86adf2d7-4dc1-477a-b732-74093f5c33c5",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"after\": \"1943-10-22T06:57:02.113Z\",\n  \"merchantid\": 11223344,\n  \"maxResults\": 3490211,\n  \"nextToken\": \"eu non irure\",\n  \"orderBy\": [\n    \"aute Excepteur nisi dolore\",\n    \"enim sed fugiat\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paylink/token/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paylink",
										"token",
										"changes"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "06e1abe5-55bd-4436-834b-ef9a945e9a86"
		},
		{
			"name": "v6",
			"item": [
				{
					"name": "account",
					"item": [
						{
							"name": "{accountid}",
							"item": [
								{
									"name": "card/{card Id}",
									"item": [
										{
											"name": "Card Deletion",
											"id": "986b10c8-5c0c-4fcb-843f-0763d23eaf3b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "cp-api-key",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"card",
														":cardId"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														},
														{
															"key": "cardId",
															"value": "velit dolor",
															"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
														}
													]
												},
												"description": "Deletes a card from the account. The card will be marked for deletion before a subsequent\npurge will clear the card permanently.\n"
											},
											"response": [
												{
													"id": "2626e918-d1cf-4662-afde-68699bee8536",
													"name": "Acknowledges the card has been requested for deletion. A response code of `001` is returned if the account is available for deletion otherwise an error code is returned.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
												},
												{
													"id": "a5165dc0-4aa6-483e-8b61-360abac041f2",
													"name": "Bad Request. Should the incoming data not be validly determined.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "0e16c9d3-d348-453c-b39b-8559357aece3",
													"name": "Unauthorized. No api key has been provided and is required for this operation.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "b1447981-8a4f-45c8-896e-795f437bb100",
													"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "3275485a-69f5-41b9-8377-e2bf626ad708",
													"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
												},
												{
													"id": "72969154-10f3-463f-80ae-aa49a26957f0",
													"name": "Server Error. The server was unable to complete the request.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Card Status",
											"id": "9e60cda4-8ac8-458e-8b15-e6b17fe19c9a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "cp-api-key",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"card_status\": \"et deserunt Ut\",\n  \"default\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"card",
														":cardId",
														"status"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														},
														{
															"key": "cardId",
															"value": "velit dolor",
															"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
														}
													]
												},
												"description": "Updates the status of a card for processing. The following values are available\n\n| Status | Description | \n|--------|-------------|\n| Active | The card is active for processing and can be used for charging against with a valid token |\n| Inactive | The card is inactive for processing and cannot be used for processing, it will require reactivation before being used to charge |\n| Expired | The card has expired either due to the expiry date no longer being valid or due to a replacement card being issued |\n"
											},
											"response": [
												{
													"id": "8871c62a-bfdc-412f-9573-f762b2884320",
													"name": "Acknowledges the card status has changed, returning a response code of `001` for a valid change or `000` for a non valid change.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"card_status\": \"et deserunt Ut\",\n  \"default\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId",
																"status"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
												},
												{
													"id": "e72a2b66-bc9e-47db-aa71-ebe6fc1be590",
													"name": "Bad Request. Should the incoming data not be validly determined.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"card_status\": \"et deserunt Ut\",\n  \"default\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId",
																"status"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "0e736ffa-d7fb-41c5-aa74-65d170138a9a",
													"name": "Unauthorized. No api key has been provided and is required for this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"card_status\": \"et deserunt Ut\",\n  \"default\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId",
																"status"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "8202b665-8f87-47cf-b397-6fef67612739",
													"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"card_status\": \"et deserunt Ut\",\n  \"default\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId",
																"status"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "e8ceb53b-7cfc-4ff4-8a6b-b3ca99bf6a36",
													"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"card_status\": \"et deserunt Ut\",\n  \"default\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId",
																"status"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
												},
												{
													"id": "39027dfa-96c8-44da-a406-74aa58031ed7",
													"name": "Server Error. The server was unable to complete the request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "cp-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"card_status\": \"et deserunt Ut\",\n  \"default\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v6/account/:accountid/card/:cardId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v6",
																"account",
																":accountid",
																"card",
																":cardId",
																"status"
															],
															"variable": [
																{
																	"key": "accountid",
																	"value": "velit dolor",
																	"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
																},
																{
																	"key": "cardId",
																	"value": "velit dolor",
																	"description": "(Required) The id of the card that is presented by a call to retrieve a card holder account."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "d026e2f9-d921-403d-beff-2e5efdb3920d"
								},
								{
									"name": "Account Retrieval",
									"id": "008f5e72-68d3-4eb0-808d-dd3444f9de00",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "cp-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v6/account/:accountid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												":accountid"
											],
											"variable": [
												{
													"key": "accountid",
													"value": "velit dolor",
													"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
												}
											]
										},
										"description": "Allows for the retrieval of a card holder account for the given `id`. Should duplicate accounts exist\nfor the same `id`, the first account created with that `id` will be returned.\n\nThe account can be used for tokenisation processing by listing all cards assigned to the account.\nThe returned cards will include all `active`, `inactive` and `expired` cards. This can be used to \nenable a card holder to view their wallet and make constructive choices on which card to use.\n"
									},
									"response": [
										{
											"id": "39c86fb9-b8a4-4eb0-be93-d1b4c5c3b56e",
											"name": "A card holder account that matches the account id provided in the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"sunt eu sed occaecat commodo\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"sint qui\",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"ex \",\n    \"title\": \"Mr\"\n  },\n  \"cards\": [\n    {\n      \"bin_commercial\": true,\n      \"bin_corporate\": true,\n      \"bin_country_issued\": \"do voluptate sit\",\n      \"bin_credit\": false,\n      \"bin_currency\": \"deserunt p\",\n      \"bin_debit\": false,\n      \"bin_description\": \"Platinum Card\",\n      \"bin_eu\": false,\n      \"card_id\": \"amet eu dolore adipisicing\",\n      \"card_status\": \"dolore\",\n      \"date_created\": \"2020-01-02T18:32:28Z\",\n      \"default\": false,\n      \"expmonth\": 9,\n      \"expyear\": 2025,\n      \"label\": \"Visa/0002\",\n      \"label2\": \"Visa/0002,Exp:2304\",\n      \"last4digits\": \"dolor cillum\",\n      \"name_on_card\": \"MR NE BODY\",\n      \"scheme\": \"Visa\",\n      \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\"\n    },\n    {\n      \"bin_commercial\": false,\n      \"bin_corporate\": true,\n      \"bin_country_issued\": \"quis esse reprehender\",\n      \"bin_credit\": true,\n      \"bin_currency\": \"sint veniam occaecat dolore Excepteur\",\n      \"bin_debit\": true,\n      \"bin_description\": \"Platinum Card\",\n      \"bin_eu\": false,\n      \"card_id\": \"laboris magna deserunt\",\n      \"card_status\": \"laboris in irure\",\n      \"date_created\": \"2020-01-02T18:32:28Z\",\n      \"default\": false,\n      \"expmonth\": 9,\n      \"expyear\": 2025,\n      \"label\": \"Visa/0002\",\n      \"label2\": \"Visa/0002,Exp:2304\",\n      \"last4digits\": \"in Lorem laborum\",\n      \"name_on_card\": \"MR NE BODY\",\n      \"scheme\": \"Visa\",\n      \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\"\n    }\n  ],\n  \"date_created\": \"2020-01-02T18:32:28Z\",\n  \"default_card_id\": \"dolore mollit commodo exercitation\",\n  \"default_card_index\": 18644735,\n  \"last_modified\": \"2020-01-02T18:32:28Z\",\n  \"status\": \"ipsum aliqua\",\n  \"unique_id\": \"ad\"\n}"
										},
										{
											"id": "e8af736a-ab9e-4187-a951-cb65387ea137",
											"name": "Bad Request. Should the incoming data not be validly determined.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "dc96cd10-e01f-404e-83bf-0868054de6e3",
											"name": "Unauthorized. No api key has been provided and is required for this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "8ad0efe8-72fd-4cac-97b5-107f80ab8490",
											"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "4154379b-5be6-4de9-b448-37a3410e8524",
											"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
										},
										{
											"id": "32f62980-13a6-4fce-97f7-d016c7e8f1ca",
											"name": "Server Error. The server was unable to complete the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Account Deletion",
									"id": "3713ee6f-8804-4b62-9061-92dbf095711c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "cp-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v6/account/:accountid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												":accountid"
											],
											"variable": [
												{
													"key": "accountid",
													"value": "velit dolor",
													"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
												}
											]
										},
										"description": "Allows for the deletion of an account. The account will marked for deletion and subsequent purging. No further\ntransactions will be alowed to be processed or actioned against this account.\n"
									},
									"response": [
										{
											"id": "1ea1eb1d-689a-4268-9c12-d9634a7c4110",
											"name": "An acknowledgment code of `001` that the card holder account has been marked for deletion.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
										},
										{
											"id": "eaa59205-e1f8-497f-a320-52d91959b20b",
											"name": "Bad Request. Should the incoming data not be validly determined.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "55b819d6-24f7-49dc-96e4-a7dcececdf76",
											"name": "Unauthorized. No api key has been provided and is required for this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "3cdc06bb-f5f7-48ec-a5bd-e4149e62c0f4",
											"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "01b3d985-afb1-46a1-97a8-64cc2aac37a6",
											"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
										},
										{
											"id": "bef6aab6-4e36-4ba9-8cc7-abebc3fb74b8",
											"name": "Server Error. The server was unable to complete the request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Contact Details Update",
									"id": "86e76d26-28cc-4483-8737-937b56b5bb0d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "cp-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address1\": \"79 Parliament St\",\n  \"address2\": \"Westminster\",\n  \"address3\": \"ad Excepteur\",\n  \"area\": \"London\",\n  \"company\": \"Acme Ltd\",\n  \"country\": \"GB\",\n  \"email\": \"card.holder@citypay.com\",\n  \"firstname\": \"John\",\n  \"lastname\": \"Smith\",\n  \"mobile_no\": \"proide\",\n  \"postcode\": \"L1 789\",\n  \"telephone_no\": \"Duis \",\n  \"title\": \"Mr\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/account/:accountid/contact",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												":accountid",
												"contact"
											],
											"variable": [
												{
													"key": "accountid",
													"value": "velit dolor",
													"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
												}
											]
										},
										"description": "Allows for the ability to change the contact details for an account."
									},
									"response": [
										{
											"id": "fbb61db4-7afa-419b-b991-3de248d33d18",
											"name": "A revised account with the new details set.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"address1\": \"79 Parliament St\",\n  \"address2\": \"Westminster\",\n  \"address3\": \"ad Excepteur\",\n  \"area\": \"London\",\n  \"company\": \"Acme Ltd\",\n  \"country\": \"GB\",\n  \"email\": \"card.holder@citypay.com\",\n  \"firstname\": \"John\",\n  \"lastname\": \"Smith\",\n  \"mobile_no\": \"proide\",\n  \"postcode\": \"L1 789\",\n  \"telephone_no\": \"Duis \",\n  \"title\": \"Mr\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/contact",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"contact"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"sunt eu sed occaecat commodo\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"sint qui\",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"ex \",\n    \"title\": \"Mr\"\n  },\n  \"cards\": [\n    {\n      \"bin_commercial\": true,\n      \"bin_corporate\": true,\n      \"bin_country_issued\": \"do voluptate sit\",\n      \"bin_credit\": false,\n      \"bin_currency\": \"deserunt p\",\n      \"bin_debit\": false,\n      \"bin_description\": \"Platinum Card\",\n      \"bin_eu\": false,\n      \"card_id\": \"amet eu dolore adipisicing\",\n      \"card_status\": \"dolore\",\n      \"date_created\": \"2020-01-02T18:32:28Z\",\n      \"default\": false,\n      \"expmonth\": 9,\n      \"expyear\": 2025,\n      \"label\": \"Visa/0002\",\n      \"label2\": \"Visa/0002,Exp:2304\",\n      \"last4digits\": \"dolor cillum\",\n      \"name_on_card\": \"MR NE BODY\",\n      \"scheme\": \"Visa\",\n      \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\"\n    },\n    {\n      \"bin_commercial\": false,\n      \"bin_corporate\": true,\n      \"bin_country_issued\": \"quis esse reprehender\",\n      \"bin_credit\": true,\n      \"bin_currency\": \"sint veniam occaecat dolore Excepteur\",\n      \"bin_debit\": true,\n      \"bin_description\": \"Platinum Card\",\n      \"bin_eu\": false,\n      \"card_id\": \"laboris magna deserunt\",\n      \"card_status\": \"laboris in irure\",\n      \"date_created\": \"2020-01-02T18:32:28Z\",\n      \"default\": false,\n      \"expmonth\": 9,\n      \"expyear\": 2025,\n      \"label\": \"Visa/0002\",\n      \"label2\": \"Visa/0002,Exp:2304\",\n      \"last4digits\": \"in Lorem laborum\",\n      \"name_on_card\": \"MR NE BODY\",\n      \"scheme\": \"Visa\",\n      \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\"\n    }\n  ],\n  \"date_created\": \"2020-01-02T18:32:28Z\",\n  \"default_card_id\": \"dolore mollit commodo exercitation\",\n  \"default_card_index\": 18644735,\n  \"last_modified\": \"2020-01-02T18:32:28Z\",\n  \"status\": \"ipsum aliqua\",\n  \"unique_id\": \"ad\"\n}"
										},
										{
											"id": "68a1562d-4249-4029-994b-9aa8e02caaf7",
											"name": "Bad Request. Should the incoming data not be validly determined.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"address1\": \"79 Parliament St\",\n  \"address2\": \"Westminster\",\n  \"address3\": \"ad Excepteur\",\n  \"area\": \"London\",\n  \"company\": \"Acme Ltd\",\n  \"country\": \"GB\",\n  \"email\": \"card.holder@citypay.com\",\n  \"firstname\": \"John\",\n  \"lastname\": \"Smith\",\n  \"mobile_no\": \"proide\",\n  \"postcode\": \"L1 789\",\n  \"telephone_no\": \"Duis \",\n  \"title\": \"Mr\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/contact",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"contact"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "580c5918-be48-43a3-a598-b19511a58045",
											"name": "Unauthorized. No api key has been provided and is required for this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"address1\": \"79 Parliament St\",\n  \"address2\": \"Westminster\",\n  \"address3\": \"ad Excepteur\",\n  \"area\": \"London\",\n  \"company\": \"Acme Ltd\",\n  \"country\": \"GB\",\n  \"email\": \"card.holder@citypay.com\",\n  \"firstname\": \"John\",\n  \"lastname\": \"Smith\",\n  \"mobile_no\": \"proide\",\n  \"postcode\": \"L1 789\",\n  \"telephone_no\": \"Duis \",\n  \"title\": \"Mr\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/contact",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"contact"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "6ac024b5-00d3-4b51-ab24-31c667fe01fb",
											"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"address1\": \"79 Parliament St\",\n  \"address2\": \"Westminster\",\n  \"address3\": \"ad Excepteur\",\n  \"area\": \"London\",\n  \"company\": \"Acme Ltd\",\n  \"country\": \"GB\",\n  \"email\": \"card.holder@citypay.com\",\n  \"firstname\": \"John\",\n  \"lastname\": \"Smith\",\n  \"mobile_no\": \"proide\",\n  \"postcode\": \"L1 789\",\n  \"telephone_no\": \"Duis \",\n  \"title\": \"Mr\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/contact",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"contact"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "e0832985-1b82-4cc3-af25-a9172e7a652a",
											"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"address1\": \"79 Parliament St\",\n  \"address2\": \"Westminster\",\n  \"address3\": \"ad Excepteur\",\n  \"area\": \"London\",\n  \"company\": \"Acme Ltd\",\n  \"country\": \"GB\",\n  \"email\": \"card.holder@citypay.com\",\n  \"firstname\": \"John\",\n  \"lastname\": \"Smith\",\n  \"mobile_no\": \"proide\",\n  \"postcode\": \"L1 789\",\n  \"telephone_no\": \"Duis \",\n  \"title\": \"Mr\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/contact",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"contact"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
										},
										{
											"id": "1259a71a-cbd5-4269-b37a-7ee98a2f12d4",
											"name": "Server Error. The server was unable to complete the request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"address1\": \"79 Parliament St\",\n  \"address2\": \"Westminster\",\n  \"address3\": \"ad Excepteur\",\n  \"area\": \"London\",\n  \"company\": \"Acme Ltd\",\n  \"country\": \"GB\",\n  \"email\": \"card.holder@citypay.com\",\n  \"firstname\": \"John\",\n  \"lastname\": \"Smith\",\n  \"mobile_no\": \"proide\",\n  \"postcode\": \"L1 789\",\n  \"telephone_no\": \"Duis \",\n  \"title\": \"Mr\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/contact",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"contact"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Card Registration",
									"id": "81f48d70-4c90-4c63-ba52-3d982c16b89b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "cp-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cardnumber\": \"4000 0000 0000 0002\",\n  \"expmonth\": 9,\n  \"expyear\": 2025,\n  \"default\": true,\n  \"name_on_card\": \"MR NE BODY\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/account/:accountid/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												":accountid",
												"register"
											],
											"variable": [
												{
													"key": "accountid",
													"value": "velit dolor",
													"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
												}
											]
										},
										"description": "Allows for a card to be registered for the account. The card will be added for future \nprocessing and will be available as a tokenised value for future processing.\n\nThe card will be validated for\n\n0. Being a valid card number (luhn check)\n0. Having a valid expiry date\n0. Being a valid bin value.\n"
									},
									"response": [
										{
											"id": "6b4e3d91-9536-461e-8aa8-1c3646b71e4b",
											"name": "A successfully registered card provides a reload of the account including the new card.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cardnumber\": \"4000 0000 0000 0002\",\n  \"expmonth\": 9,\n  \"expyear\": 2025,\n  \"default\": true,\n  \"name_on_card\": \"MR NE BODY\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"register"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"sunt eu sed occaecat commodo\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"sint qui\",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"ex \",\n    \"title\": \"Mr\"\n  },\n  \"cards\": [\n    {\n      \"bin_commercial\": true,\n      \"bin_corporate\": true,\n      \"bin_country_issued\": \"do voluptate sit\",\n      \"bin_credit\": false,\n      \"bin_currency\": \"deserunt p\",\n      \"bin_debit\": false,\n      \"bin_description\": \"Platinum Card\",\n      \"bin_eu\": false,\n      \"card_id\": \"amet eu dolore adipisicing\",\n      \"card_status\": \"dolore\",\n      \"date_created\": \"2020-01-02T18:32:28Z\",\n      \"default\": false,\n      \"expmonth\": 9,\n      \"expyear\": 2025,\n      \"label\": \"Visa/0002\",\n      \"label2\": \"Visa/0002,Exp:2304\",\n      \"last4digits\": \"dolor cillum\",\n      \"name_on_card\": \"MR NE BODY\",\n      \"scheme\": \"Visa\",\n      \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\"\n    },\n    {\n      \"bin_commercial\": false,\n      \"bin_corporate\": true,\n      \"bin_country_issued\": \"quis esse reprehender\",\n      \"bin_credit\": true,\n      \"bin_currency\": \"sint veniam occaecat dolore Excepteur\",\n      \"bin_debit\": true,\n      \"bin_description\": \"Platinum Card\",\n      \"bin_eu\": false,\n      \"card_id\": \"laboris magna deserunt\",\n      \"card_status\": \"laboris in irure\",\n      \"date_created\": \"2020-01-02T18:32:28Z\",\n      \"default\": false,\n      \"expmonth\": 9,\n      \"expyear\": 2025,\n      \"label\": \"Visa/0002\",\n      \"label2\": \"Visa/0002,Exp:2304\",\n      \"last4digits\": \"in Lorem laborum\",\n      \"name_on_card\": \"MR NE BODY\",\n      \"scheme\": \"Visa\",\n      \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\"\n    }\n  ],\n  \"date_created\": \"2020-01-02T18:32:28Z\",\n  \"default_card_id\": \"dolore mollit commodo exercitation\",\n  \"default_card_index\": 18644735,\n  \"last_modified\": \"2020-01-02T18:32:28Z\",\n  \"status\": \"ipsum aliqua\",\n  \"unique_id\": \"ad\"\n}"
										},
										{
											"id": "ae845fd7-e244-4381-bbb5-f28b43918556",
											"name": "Bad Request. Should the incoming data not be validly determined.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cardnumber\": \"4000 0000 0000 0002\",\n  \"expmonth\": 9,\n  \"expyear\": 2025,\n  \"default\": true,\n  \"name_on_card\": \"MR NE BODY\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"register"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "afc10aed-eeeb-44d5-9fe9-9fd3664dfb15",
											"name": "Unauthorized. No api key has been provided and is required for this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cardnumber\": \"4000 0000 0000 0002\",\n  \"expmonth\": 9,\n  \"expyear\": 2025,\n  \"default\": true,\n  \"name_on_card\": \"MR NE BODY\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"register"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "e09b814d-fea5-4bfd-a284-4cdf34ef993f",
											"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cardnumber\": \"4000 0000 0000 0002\",\n  \"expmonth\": 9,\n  \"expyear\": 2025,\n  \"default\": true,\n  \"name_on_card\": \"MR NE BODY\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"register"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "d3e8c7be-feb7-42a4-a0d4-a32f6572882d",
											"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cardnumber\": \"4000 0000 0000 0002\",\n  \"expmonth\": 9,\n  \"expyear\": 2025,\n  \"default\": true,\n  \"name_on_card\": \"MR NE BODY\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"register"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
										},
										{
											"id": "a8773935-a4db-467c-8b42-e7f85c84a8c3",
											"name": "Server Error. The server was unable to complete the request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cardnumber\": \"4000 0000 0000 0002\",\n  \"expmonth\": 9,\n  \"expyear\": 2025,\n  \"default\": true,\n  \"name_on_card\": \"MR NE BODY\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"register"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Account Status",
									"id": "d3efe2f2-b205-4306-825f-ff41fbf194b0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "cp-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"non sint quis\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/account/:accountid/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												":accountid",
												"status"
											],
											"variable": [
												{
													"key": "accountid",
													"value": "velit dolor",
													"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
												}
											]
										},
										"description": "Updates the status of an account. An account can have the following statuses applied\n\n| Status | Description |\n|--------|-------------|\n| Active | The account is active for processing |\n| Disabled | The account has been disabled and cannot be used for processing. The account will require reactivation to continue procesing |\n"
									},
									"response": [
										{
											"id": "45889611-309e-485e-bbf8-b4121f311e9f",
											"name": "An acknowledgment that the card holder account status has been updated.</br></br>A response code of `001` is returned if the request was accepted or no change required.</br></br>A response code of `000` is returned if the request contains invalid data.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"non sint quis\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"status"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
										},
										{
											"id": "22a2521a-f30b-42b5-949a-4156943cfd70",
											"name": "Bad Request. Should the incoming data not be validly determined.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"non sint quis\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"status"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "e3bb193f-1b17-44f3-9db4-1aca52f8a20a",
											"name": "Unauthorized. No api key has been provided and is required for this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"non sint quis\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"status"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "cc11f615-b728-46b5-8d37-7bd29b3a0ce9",
											"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"non sint quis\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"status"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "3a8d8dab-4cf7-4af9-ae3d-8ef6ca298ab5",
											"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"non sint quis\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"status"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
										},
										{
											"id": "299f7aa2-a398-4af8-8dc3-4911118f237a",
											"name": "Server Error. The server was unable to complete the request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "cp-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"non sint quis\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v6/account/:accountid/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v6",
														"account",
														":accountid",
														"status"
													],
													"variable": [
														{
															"key": "accountid",
															"value": "velit dolor",
															"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"id": "3e0b1e52-df51-43aa-a67c-d2a9a56a8a6a"
						},
						{
							"name": "Account Create",
							"id": "bdaa3064-b387-473d-a71d-7f13befa401d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "cp-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"esse cillum aute ad\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"do \",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"culpa nostrud es\",\n    \"title\": \"Mr\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/account/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"account",
										"create"
									]
								},
								"description": "Creates a new card holder account and initialises the account ready for adding cards."
							},
							"response": [
								{
									"id": "fdcf7dd4-69e7-4cb5-8216-0e60a197d5b1",
									"name": "Provides an initialised account.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"esse cillum aute ad\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"do \",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"culpa nostrud es\",\n    \"title\": \"Mr\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/account/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"do pariatur\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"voluptate\",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"qui a\",\n    \"title\": \"Mr\"\n  },\n  \"cards\": [\n    {\n      \"bin_commercial\": false,\n      \"bin_corporate\": false,\n      \"bin_country_issued\": \"amet mollit\",\n      \"bin_credit\": false,\n      \"bin_currency\": \"dolor\",\n      \"bin_debit\": true,\n      \"bin_description\": \"Platinum Card\",\n      \"bin_eu\": true,\n      \"card_id\": \"aliquip\",\n      \"card_status\": \"dolore et commodo nostrud\",\n      \"date_created\": \"2020-01-02T18:32:28Z\",\n      \"default\": false,\n      \"expmonth\": 9,\n      \"expyear\": 2025,\n      \"label\": \"Visa/0002\",\n      \"label2\": \"Visa/0002,Exp:2304\",\n      \"last4digits\": \"par\",\n      \"name_on_card\": \"MR NE BODY\",\n      \"scheme\": \"Visa\",\n      \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\"\n    },\n    {\n      \"bin_commercial\": true,\n      \"bin_corporate\": true,\n      \"bin_country_issued\": \"consectetur dolore\",\n      \"bin_credit\": false,\n      \"bin_currency\": \"est laboris\",\n      \"bin_debit\": false,\n      \"bin_description\": \"Platinum Card\",\n      \"bin_eu\": true,\n      \"card_id\": \"anim et ut\",\n      \"card_status\": \"ea sint\",\n      \"date_created\": \"2020-01-02T18:32:28Z\",\n      \"default\": true,\n      \"expmonth\": 9,\n      \"expyear\": 2025,\n      \"label\": \"Visa/0002\",\n      \"label2\": \"Visa/0002,Exp:2304\",\n      \"last4digits\": \"labore nisi ullamco quis\",\n      \"name_on_card\": \"MR NE BODY\",\n      \"scheme\": \"Visa\",\n      \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\"\n    }\n  ],\n  \"date_created\": \"2020-01-02T18:32:28Z\",\n  \"default_card_id\": \"commodo ipsum aliqua\",\n  \"default_card_index\": -82165998,\n  \"last_modified\": \"2020-01-02T18:32:28Z\",\n  \"status\": \"proident exercitation Lorem\",\n  \"unique_id\": \"Excepteur amet\"\n}"
								},
								{
									"id": "3c06533f-76ed-421f-87b8-2bb40951a7ac",
									"name": "Bad Request. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"esse cillum aute ad\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"do \",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"culpa nostrud es\",\n    \"title\": \"Mr\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/account/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												"create"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "dbf0c6b8-f8b4-4285-9495-86849c28c91d",
									"name": "Unauthorized. No api key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"esse cillum aute ad\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"do \",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"culpa nostrud es\",\n    \"title\": \"Mr\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/account/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												"create"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "de1fb8b5-5c21-42bc-9789-16d5230a5da3",
									"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"esse cillum aute ad\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"do \",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"culpa nostrud es\",\n    \"title\": \"Mr\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/account/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												"create"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "b29a3188-5e6e-4a5e-b0a7-c8c71d23298a",
									"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"esse cillum aute ad\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"do \",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"culpa nostrud es\",\n    \"title\": \"Mr\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/account/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												"create"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
								},
								{
									"id": "ca6079ac-b47e-45be-8b9d-da5a8efbe1e2",
									"name": "Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"aaabbb-cccddd-eee\",\n  \"contact\": {\n    \"address1\": \"79 Parliament St\",\n    \"address2\": \"Westminster\",\n    \"address3\": \"esse cillum aute ad\",\n    \"area\": \"London\",\n    \"company\": \"Acme Ltd\",\n    \"country\": \"GB\",\n    \"email\": \"card.holder@citypay.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Smith\",\n    \"mobile_no\": \"do \",\n    \"postcode\": \"L1 789\",\n    \"telephone_no\": \"culpa nostrud es\",\n    \"title\": \"Mr\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/account/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"account",
												"create"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "365b8d8c-6165-4cb9-95f4-61a8f06b6530"
				},
				{
					"name": "batch",
					"item": [
						{
							"name": "Batch Process Request",
							"id": "d4ce4aaf-8adb-4b74-ac92-191530ca8b34",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "cp-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"batch_date\": \"2020-01-02\",\n  \"batch_id\": 35,\n  \"transactions\": [\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    },\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    }\n  ],\n  \"client_account_id\": \"AC1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/batch/process",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"batch",
										"process"
									]
								},
								"description": "A batch process request is used to start the batch process workflow by uploading batch\ndata and initialising a new batch for processing. Once validated the batch will be queued\nfor processing and further updates can be received by a subsequent call to retrieve the batch\nstatus.\n"
							},
							"response": [
								{
									"id": "ecfb24ee-f298-418b-909d-e53717968907",
									"name": "Request to process a batch provided in the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_date\": \"2020-01-02\",\n  \"batch_id\": 35,\n  \"transactions\": [\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    },\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    }\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/process",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"process"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"valid\": true,\n  \"message\": \"Approved 044332\"\n}"
								},
								{
									"id": "497a95ff-85ef-4a77-a284-718d7fda84fa",
									"name": "Bad Request. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_date\": \"2020-01-02\",\n  \"batch_id\": 35,\n  \"transactions\": [\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    },\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    }\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/process",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"process"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "df677641-b9eb-4d9a-82a1-9718426e654f",
									"name": "Unauthorized. No api key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_date\": \"2020-01-02\",\n  \"batch_id\": 35,\n  \"transactions\": [\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    },\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    }\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/process",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"process"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "4c8530cb-7f77-4afd-bb40-46f9dd9a2709",
									"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_date\": \"2020-01-02\",\n  \"batch_id\": 35,\n  \"transactions\": [\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    },\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    }\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/process",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"process"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "daa40596-6331-4eb5-94a2-b05e599c9fa2",
									"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_date\": \"2020-01-02\",\n  \"batch_id\": 35,\n  \"transactions\": [\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    },\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    }\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/process",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"process"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
								},
								{
									"id": "c0e3b6da-4405-414d-b3d3-80fc9aa98bdf",
									"name": "Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_date\": \"2020-01-02\",\n  \"batch_id\": 35,\n  \"transactions\": [\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    },\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"amount\": 3600,\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344\n    }\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/process",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"process"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "BatchReportRequest",
							"id": "f0c7410a-475c-4aca-a76f-469259af3642",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "cp-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"batch_id\": 35,\n  \"client_account_id\": \"AC1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/batch/retrieve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"batch",
										"retrieve"
									]
								},
								"description": "The operation is used to retrieve a report of the result of a batch process."
							},
							"response": [
								{
									"id": "2c975f6d-58e4-423c-9005-e2e31e607ac9",
									"name": "The report for a given batch.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": 35,\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/retrieve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"retrieve"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": 3600,\n  \"batch_date\": \"2020-01-02\",\n  \"batch_id\": 35,\n  \"batch_status\": \"COMPLETE\",\n  \"client_account_id\": \"AC1\",\n  \"transactions\": [\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344,\n      \"message\": \"Approved 044332\",\n      \"result\": 1,\n      \"result_code\": \"sunt v\",\n      \"amount\": 3600,\n      \"authcode\": \"001245A\",\n      \"datetime\": \"2020-01-02T18:32:28Z\",\n      \"maskedpan\": \"4***********0002\",\n      \"scheme\": \"Visa\",\n      \"transno\": 78416\n    },\n    {\n      \"account_id\": \"aaabbb-cccddd-eee\",\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"merchantid\": 11223344,\n      \"message\": \"Approved 044332\",\n      \"result\": 1,\n      \"result_code\": \"ad pariatur dolor ullamco ea\",\n      \"amount\": 3600,\n      \"authcode\": \"001245A\",\n      \"datetime\": \"2020-01-02T18:32:28Z\",\n      \"maskedpan\": \"4***********0002\",\n      \"scheme\": \"Visa\",\n      \"transno\": 78416\n    }\n  ]\n}"
								},
								{
									"id": "65205d70-a6e5-4317-9426-93befa94a1f3",
									"name": "Bad Request. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": 35,\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/retrieve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"retrieve"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "954b41f2-0948-4031-aa8a-a5eca284e5a8",
									"name": "Unauthorized. No api key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": 35,\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/retrieve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"retrieve"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "af26e31a-83d5-47af-911e-8b03f7ce853d",
									"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": 35,\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/retrieve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"retrieve"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "e4dab2cf-fa14-4ee9-b252-508bad68b4ad",
									"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": 35,\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/retrieve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"retrieve"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
								},
								{
									"id": "add60782-0ce3-4e63-b6e4-62348dac6c55",
									"name": "Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": 35,\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/retrieve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"retrieve"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "CheckBatchStatus",
							"id": "05cda48f-a587-45aa-9a18-b62f5b7c5ee3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "cp-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"batch_id\": [\n    78,\n    78\n  ],\n  \"client_account_id\": \"AC1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/batch/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"batch",
										"status"
									]
								},
								"description": "The operation is used to retrieve the status of a batch process."
							},
							"response": [
								{
									"id": "563e9861-04e7-4b34-8dbe-1e802f9c5a74",
									"name": "The status of batches provided in the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": [\n    78,\n    78\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"batches\": [\n    {\n      \"batch_date\": \"2020-01-02\",\n      \"batch_status\": \"COMPLETE\",\n      \"batch_id\": 35\n    },\n    {\n      \"batch_date\": \"2020-01-02\",\n      \"batch_status\": \"COMPLETE\",\n      \"batch_id\": 35\n    }\n  ]\n}"
								},
								{
									"id": "5d8f0e9d-c413-4667-8bb0-2973a640ff05",
									"name": "Bad Request. Should the incoming data not be validly determined.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": [\n    78,\n    78\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"status"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "b1b6a750-e449-44b2-bb46-9c68da9f75f1",
									"name": "Unauthorized. No api key has been provided and is required for this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": [\n    78,\n    78\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"status"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "eef8ea0c-bb0a-4a0e-ae81-c4140f01badf",
									"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": [\n    78,\n    78\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"status"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "1e53cefe-c968-42a5-8667-81b2cf140905",
									"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": [\n    78,\n    78\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"status"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
								},
								{
									"id": "67d78bf3-7c87-46c0-96d2-39a975a71d05",
									"name": "Server Error. The server was unable to complete the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "cp-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batch_id\": [\n    78,\n    78\n  ],\n  \"client_account_id\": \"AC1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v6/batch/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v6",
												"batch",
												"status"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "6be88eeb-ef15-4831-9796-e6b654ad6ae0"
				},
				{
					"name": "Account Exists",
					"id": "93b9b0eb-aeb0-4356-acdb-5d431e079ad9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v6/account-exists/:accountid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"account-exists",
								":accountid"
							],
							"variable": [
								{
									"key": "accountid",
									"value": "velit dolor",
									"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
								}
							]
						},
						"description": "Checks that an account exists and is active by providing the account id as a url parameter.\n"
					},
					"response": [
						{
							"id": "f78c3fa3-b38e-45cd-b925-b0ccacd3a4d3",
							"name": "A response model determining whether the account exists, if exists is true, a last modified date of the account is also provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/account-exists/:accountid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"account-exists",
										":accountid"
									],
									"variable": [
										{
											"key": "accountid",
											"value": "velit dolor",
											"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"exists\": true,\n  \"active\": true,\n  \"last_modified\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "433d33a0-814d-42be-bfa1-c94f908a90c0",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/account-exists/:accountid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"account-exists",
										":accountid"
									],
									"variable": [
										{
											"key": "accountid",
											"value": "velit dolor",
											"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "9dad47de-953e-475d-b3f9-546e5af96c23",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/account-exists/:accountid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"account-exists",
										":accountid"
									],
									"variable": [
										{
											"key": "accountid",
											"value": "velit dolor",
											"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "222360bc-965c-42ad-beac-77e8b0eb7dbd",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/account-exists/:accountid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"account-exists",
										":accountid"
									],
									"variable": [
										{
											"key": "accountid",
											"value": "velit dolor",
											"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "bffd8074-438b-40b4-b270-58b08b1913ae",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/account-exists/:accountid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"account-exists",
										":accountid"
									],
									"variable": [
										{
											"key": "accountid",
											"value": "velit dolor",
											"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "ada5876d-3ff3-4d9e-af81-2baaec4a5411",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/account-exists/:accountid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"account-exists",
										":accountid"
									],
									"variable": [
										{
											"key": "accountid",
											"value": "velit dolor",
											"description": "(Required) The account id that refers to the customer's account no. This value will have been provided when setting up the card holder account."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "ACL Check Request",
					"id": "8e190249-424b-4368-b0a4-bad9cd6b9f8a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ip\": \"8.8.8.8\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v6/acl/check",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"acl",
								"check"
							]
						},
						"description": "Allows the checking of IP addresses against configured ACLs. Requests can perform a lookup of addresses in subnets and\nservices such as AWS or Azure to check that those addresses are listed in the ACLs.\n"
					},
					"response": [
						{
							"id": "1072cbd4-e7df-4d85-9792-0ae8d5367faf",
							"name": "Response to the ACL Check request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ip\": \"8.8.8.8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/acl/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"acl",
										"check"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"acl\": \"nostrud esse in\",\n  \"cache\": false,\n  \"ip\": \"8.8.8.8\",\n  \"provider\": \"id reprehenderit\"\n}"
						},
						{
							"id": "ea37de81-d264-46c0-939d-5b949e9a3a8d",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ip\": \"8.8.8.8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/acl/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"acl",
										"check"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "86a97658-ca9d-4e1a-8c07-789174b8a3ec",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ip\": \"8.8.8.8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/acl/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"acl",
										"check"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "f89e3c6c-9639-4094-8ceb-f5adc3e2f695",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ip\": \"8.8.8.8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/acl/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"acl",
										"check"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "581c8ac8-7528-4d1d-88a5-92a8a67213ef",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ip\": \"8.8.8.8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/acl/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"acl",
										"check"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "4315dddc-fb68-4192-b81b-85c80148f498",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ip\": \"8.8.8.8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/acl/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"acl",
										"check"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Authorisation",
					"id": "debceb2c-85ef-4481-a28a-de65d3342122",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"AuthorisationRequest-example1.json\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v6/authorise",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"authorise"
							]
						},
						"description": "An authorisation process performs a standard transaction authorisation based on the provided parameters of its request.\nThe CityPay gateway will route your transaction via an Acquiring bank for subsequent authorisation to the appropriate card \nschemes such as Visa or MasterCard.\n\nThe authorisation API should be used for server environments to process transactions on demand and in realtime. \n\nThe authorisation API can be used for multiple types of transactions including E-commerce, mail order, telephone order,\ncustomer present (keyed), continuous authority, pre-authorisation and others. CityPay will configure your account for \nthe appropriate coding and this will perform transparently by the gateway. \n\nData properties that are required, may depend on the environment you are conducting payment for. Our API aims to be\n flexible enough to cater for these structures. Our integration team will aid you in providing the necessary data to \n transact. \n \n \n## E-commerce workflows\n \nFor E-commerce transactions requiring 3DS, the API contains a fully accredited in built mechanism to handle authentication.\n\nThe Api and gateway has been accredited extensively with both Acquirers and Card Schemes to simplify the nature of these calls\ninto a simple structure for authentication, preventing integrators from performing lengthy and a costly accreditations with\nVisa and MasterCard.\n\n3D-secure has been around for a number of years and aims to shift the liability of a transaction away from a merchant back\nto the card holder. A *liability shift* determines whether a card holder can charge back a transaction as unknown. Effectively\nthe process asks for a card holder to authenticate the transaction prior to authorisation producing a Cardholder \nverification value (CAVV) and ecommerce indicator (ECI) as evidence of authorisation.\n\n3DS version 1 has now been replaced by 3DS version 2 to provide secure customer authentication (SCA) in line with EU regulation.\n3DSv2 is being phased out and any accounts using version 1 of the protocol is expected to be migrated by March 2022. \n\nAny new integrations should only consider 3DSv2 flows. \n\n### 3DSv2\n\n```json\n{ \n  \"RequestChallenged\": {\n    \"acsurl\": \"https://bank.com/3DS/ACS\",\n    \"creq\": \"SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN00...\",\n    \"merchantid\": 12345,\n    \"transno\": 1,\n    \"threedserver_trans_id\": \"d652d8d2-d74a-4264-a051-a7862b10d5d6\"\n  }               \n}\n```\n\n```xml\n<RequestChallenged>\n  <acsurl>https://bank.com/3DS/ACS</acsurl>\n  <creq>SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN00...</creq>\n  <merchantid>12345</merchantid>\n  <transno>1</transno>\n  <threedserver_trans_id>d652d8d2-d74a-4264-a051-a7862b10d5d6</threedserver_trans_id>\n</RequestChallenged>\n```\n\nCityPay support 3DS version 2.1 for Verified by Visa, MasterCard Identity Check and American Express SafeKey 2.1. Version\n2.2 is currently in development however this will be a seamless upgrade for all integrations.\n\n#### 3-D Secure - None\n\n![3DSv2 Frctionless Flow](/images/3dsv2-no3d.png)\n\nA basic flow may involve no 3-D secure processing. This could happen if there is no ability to perform authentication.\nAn enrollment check may apply an \"attempted\" resolution to processing. In this instance a transaction may not meet any\nliability shift. A transaction may result in a decline due to this. We are also able to prevent from transactions being\npresented for authorisation if this occurs. \n\n#### 3-D Secure - Frictionless\n\n![3DSv2 Frctionless Flow](/images/3dsv2-frictionless.png)\n\nE-commerce transactions supporting 3DSv2 can benefit from seamlessly authenticated transactions which may perform a \n\"frictionless\" flow. This method will authenticate low risk transactions with minimal impact to a \nstandard authorisation flow. Our API simply performs this on behalf of you the developer, the merchant and cardholder.\n\nNo redirection occurs and hence the flow is called frictionless and will appear as though a simple transaction \nauthorisation has occurred.\n\n#### 3-D Secure - Challenge\n\n![3DSv2 Frctionless Flow](/images/3dsv2-challenge.png)\n\nA transaction that is deemed as higher risk my be \"challenged\". In this instance, the API will return a\n[request challenge](#requestchallenged) which will require your integration to forward the cardholder's browser to the \ngiven [ACS url](#acsurl). This should be performed by posting the [creq](#creq) value (the challenge request value). \n\nOnce complete, the ACS will have already been in touch with our servers by sending us a result of the authentication\nknown as `RReq`.\n\nTo maintain session state, a parameter `threeDSSessionData` can be posted to the ACS url and will be returned alongside \nthe `CRes` value. This will ensure that any controller code will be able to isolate state between calls. This field\nis to be used by your own systems rather than ours and may be any value which can uniquely identify your cardholder's\nsession. As an option, we do provide a `threedserver_trans_id` value in the `RequestChallenged` packet which can be used\nfor the `threeDSSessionData` value as it is used to uniquely identify the 3D-Secure session. \n\nA common method of maintaining state is to provide a session related query string value in the `merchant_termurl` value\n(also known as the `notificationUrl`). For example providing a url of `https://mystore.com/checkout?token=asny2348w4561..`\ncould return the user directly back to their session with your environment.\n\nOnce you have received a `cres` post from the ACS authentication service, this should be POSTed to the [cres](#cres) \nendpoint to perform full authorisation processing. \n\nPlease note that the CRes returned to us is purely a mechanism of acknowledging that transactions should be committed for\nauthorisation. The ACS by this point will have sent us the verification value (CAVV) to perform a liability shift. The CRes\nvalue will be validated for receipt of the CAVV and subsequently may return response codes illustrating this. \n\nTo forward the user to the ACS, we recommend a simple auto submit HTML form.\n\n> Simple auto submit HTML form\n\n```html\n<html lang=\"en\">\n\t<head>\n        <title>Forward to ACS</title>\n\t\t<script type=\"text/javascript\">\n        function onLoadEvent() { \n            document.acs.submit(); \n        }\n        </script>\n        <noscript>You will require JavaScript to be enabled to complete this transaction</noscript>\n    </head>\n    <body onload=\"onLoadEvent();\">\n        <form name=\"acs\" action=\"{{ACSURL from Response}}\" method=\"POST\">\n            <input type=\"hidden\" name=\"creq\" value=\"{{CReq Packet from Response}}\" />\n            <input type=\"hidden\" name=\"threeDSSessionData\" value=\"{{session-identifier}}\" />\n        </form>\n    </body>\n</html>\n```\n\nA full ACS test suite is available for 3DSv2 testing.\n        \n### Testing 3DSv2 Integrations\n\nThe API provides a mock 3dsV2 handler which performs a number of scenarios based on the value of the CSC in the request.\n\n| CSC Value | Behaviour |\n|-----------|-----------|\n| 731       | Frictionless processing - Not authenticated |\n| 732       | Frictionless processing - Account verification count not be performed |        \n| 733       | Frictionless processing - Verification Rejected |        \n| 741       | Frictionless processing - Attempts Processing |        \n| 750       | Frictionless processing - Authenticated  |        \n| 761       | Triggers an error message |  \n| Any       | Challenge Request |       \n\n\n#### 3DSv1\n\n**Please note that 3DSv1 should now be considered as deprecated.**\n\n```json\n{ \n  \"AuthenticationRequired\": {\n    \"acsurl\": \"https://bank.com/3DS/ACS\",\n    \"pareq\": \"SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN00...\",\n    \"md\": \"WQgZXZlcnl0aGluZyBiZW\"\n  }               \n}\n```\n\n```xml\n<AuthenticationRequired>\n <acsurl>https://bank.com/3DS/ACS</acsurl>\n <pareq>SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN00...</pareq>\n <md>WQgZXZlcnl0aGluZyBiZW</md>\n</AuthenticationRequired>\n```\n\nFor E-commerce transactions requiring 3DSv1, the API contains a built in MPI which will be called to check whether the\ncard is participating in 3DSv1 with Verified by Visa or MasterCard SecureCode. We only support Amex SafeKey with 3DSv2. Should the card be enrolled, a payer\nrequest (PAReq) value will be created and returned back as an [authentication required](#authenticationrequired) response object.\n\nYour system will need to process this authentication packet and forward the user's browser to an authentication server (ACS)\nto gain the user's authentication. Once complete, the ACS will produce a HTTP `POST` call back to the URL supplied in\nthe authentication request as `merchant_termurl`. This URL should behave as a controller and handle the post data from the\nACS and on a forked server to server HTTP request, forward this data to the [pares authentication url](#pares) for\nsubsequent authorisation processing. You may prefer to provide a processing page whilst this is being processed.\nProcessing with our systems should be relatively quick and be between 500ms - 3000ms however it is desirable to let\nthe user see that something is happening rather than a pending browser.\n\nThe main reason for ensuring that this controller is two fold:\n\n1. We are never in control of the user's browser in a server API call\n2. The controller is actioned on your site to ensure that any post actions from authorisation can be executed in real time\n\nTo forward the user to the ACS, we recommend a simple auto submit HTML form.\n\n> Simple auto submit HTML form\n\n```html\n<html lang=\"en\">\n\t<head>\n        <title>Forward to ACS</title>\n\t\t<script type=\"text/javascript\">\n        function onLoadEvent() { \n            document.acs.submit(); \n        }\n        </script>\n        <noscript>You will require JavaScript to be enabled to complete this transaction</noscript>\n    </head>\n    <body onload=\"onLoadEvent();\">\n        <form name=\"acs\" action=\"{{ACSURL from Response}}\" method=\"POST\">\n            <input type=\"hidden\" name=\"PaReq\" value=\"{{PaReq Packet from Response}}\" />\n            <input type=\"hidden\" name=\"TermUrl\" value=\"{{Your Controller}}\" />\n            <input type=\"hidden\" name=\"MD\" value=\"{{MD From Response}}\" />\n        </form>\n    </body>\n</html>\n```\n\nPlease note that 3DSv1 is being phased out due to changes to strong customer authentication mechanisms. 3DSv2 addresses\nthis and will solidify the authorisation and confirmation process.\n\nWe provide a Test ACS for full 3DSv1 integration testing that simulates an ACS.\n"
					},
					"response": [
						{
							"id": "280cb8a0-a21e-4b80-a3f2-5d51912df854",
							"name": "A decision made by the result of processing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"AuthorisationRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/authorise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"authorise"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"AuthenRequired\": {\n    \"acs_url\": \"https://acs.cardissuer.com/3dsv1\",\n    \"md\": \"eiusmod velit\",\n    \"pareq\": \"eNrNWdnOo0qSfpXSmUuf0+w2tFy/lOyYxYDZ79h3sAEbm6cfbFfV+bu6pqe7R2qNJeQkiIwlMyK+...\"\n  },\n  \"AuthResponse\": {\n    \"merchantid\": 11223344,\n    \"result\": 1,\n    \"result_code\": \"sunt est ea\",\n    \"result_message\": \"Accepted Transaction\",\n    \"amount\": 3600,\n    \"atrn\": \"fugiat cupidat\",\n    \"atsd\": \"Ut adipisicing irure\",\n    \"authcode\": \"001245A\",\n    \"authen_result\": \"sit magna\",\n    \"authorised\": true,\n    \"avs_result\": \"non dolore nostrud nisi\",\n    \"bin_commercial\": true,\n    \"bin_debit\": false,\n    \"bin_description\": \"Platinum Card\",\n    \"cavv\": \"ullamco consectetur qui\",\n    \"context\": \"aspiu352908ns47n343598bads\",\n    \"csc_result\": \"consequat dolore enim\",\n    \"currency\": \"GBP\",\n    \"datetime\": \"2020-01-02T18:32:28Z\",\n    \"eci\": \"velit exercitation ullamco consequat\",\n    \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n    \"live\": true,\n    \"maskedpan\": \"4***********0002\",\n    \"scheme\": \"Visa\",\n    \"sha256\": \"deserunt\",\n    \"trans_status\": \"deserunt veniam Duis\",\n    \"transno\": 78416\n  },\n  \"RequestChallenged\": {\n    \"acs_url\": \"https://acs.cardissuer.com/3dsv1\",\n    \"creq\": \"ut sed sunt\",\n    \"merchantid\": 11223344,\n    \"threedserver_trans_id\": \"Lorem dol\",\n    \"transno\": 78416\n  }\n}"
						},
						{
							"id": "c2aa8f03-ee1f-46ac-842d-183707c6c4c4",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"AuthorisationRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/authorise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"authorise"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ef6d8ada-6c48-4bd5-9d0e-9576962e9841",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"AuthorisationRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/authorise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"authorise"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "f8971d9d-8d3b-43dc-93d6-c9ab46e091d3",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"AuthorisationRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/authorise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"authorise"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "8cc80ba5-5e18-4b3e-a514-b6e898b8745d",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"AuthorisationRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/authorise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"authorise"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "a1c2a8bd-3d7f-4b90-a492-7f89ca34979f",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"AuthorisationRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/authorise",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"authorise"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Bin Lookup",
					"id": "8e9a4fc9-3968-48c7-9572-f1acfb0c728a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bin\": 543712\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v6/bin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"bin"
							]
						},
						"description": "A bin range lookup service can be used to check what a card is, as seen by the gateway. Each card number's \nleading digits help to identify who\n\n0. the card scheme is such as Visa, MasterCard or American Express \n1. the issuer of the card, such as the bank\n2. it's country of origin\n3. it's currency of origin\n\nOur gateway has 450 thousand possible bin ranges and uses a number of algorithms to determine the likelihood of the bin\ndata. The request requires a bin value of between 6 and 12 digits. The more digits provided may ensure a more accurate\nresult.\n"
					},
					"response": [
						{
							"id": "a442c16c-2c43-4103-81e0-b7c744a8364e",
							"name": "A result of the bin lookup request returning a bin object determined by the gateway service.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bin\": 543712\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/bin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"bin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"bin_commercial\": true,\n  \"bin_corporate\": true,\n  \"bin_country_issued\": \"venia\",\n  \"bin_credit\": true,\n  \"bin_currency\": \"magna ipsum sed\",\n  \"bin_debit\": false,\n  \"bin_description\": \"Platinum Card\",\n  \"bin_eu\": true,\n  \"scheme\": \"Visa\"\n}"
						},
						{
							"id": "0861d9eb-522c-411f-a2c4-8503c0cbb405",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bin\": 543712\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/bin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"bin"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "d2e7457d-4337-42f1-9b20-4ce94731bec4",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bin\": 543712\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/bin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"bin"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "2730a7fc-eab6-4475-92ad-d09e172836b8",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bin\": 543712\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/bin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"bin"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "306e86c1-1ee9-4af8-b2a7-04554dc24e7b",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bin\": 543712\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/bin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"bin"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "4e16a6ee-9d20-4332-9edb-73eefdf84890",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bin\": 543712\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/bin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"bin"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Capture",
					"id": "5e98ebb1-1cf4-4d57-a060-d39c848bfe02",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"summary\": \"Capture call for a merchant with identifier and airline data once a ticket has been issued\",\n  \"externalValue\": \"CaptureRequest-example3.json\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v6/capture",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"capture"
							]
						},
						"description": "_The capture process only applies to transactions which have been pre-authorised only._ \n\nThe capture process will ensure\nthat a transaction will now settle. It is expected that a capture call will be provided within 3 days or\na maximum of 7 days.\n\nA capture request is provided to confirm that you wish the transaction to be settled. This request can\ncontain a final amount for the transaction which is different to the original authorisation amount. This\nmay be useful in a delayed system process such as waiting for stock to be ordered, confirmed, or services\nprovided before the final cost is known.\n\nWhen a transaction is completed, a new authorisation code may be created and a new confirmation\ncan be sent online to the acquiring bank.\n\nOnce the transaction has been processed. A standard [`Acknowledgement`](#acknowledgement) will be returned,\noutlining the result of the transaction. On a successful completion process, the transaction will\nbe available for the settlement and completed at the end of the day.\n"
					},
					"response": [
						{
							"id": "5d7a7ba4-66d2-4d20-8efd-38395aaaf7ae",
							"name": "A result and acknowledgement of the capture request. The response will return a `000/001` response on a successful capture otherwise an error code response explaining the error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Capture call for a merchant with identifier and airline data once a ticket has been issued\",\n  \"externalValue\": \"CaptureRequest-example3.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"capture"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
						},
						{
							"id": "9683f955-e928-4c0a-b809-4cbb20d09bae",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Capture call for a merchant with identifier and airline data once a ticket has been issued\",\n  \"externalValue\": \"CaptureRequest-example3.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"capture"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "e0546ece-9f48-4df6-83f5-364f662b65fb",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Capture call for a merchant with identifier and airline data once a ticket has been issued\",\n  \"externalValue\": \"CaptureRequest-example3.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"capture"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "b21905c9-0d3d-4395-9baa-c65349b0444c",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Capture call for a merchant with identifier and airline data once a ticket has been issued\",\n  \"externalValue\": \"CaptureRequest-example3.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"capture"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "b50e6a2f-2215-4848-af00-1ce998591bf3",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Capture call for a merchant with identifier and airline data once a ticket has been issued\",\n  \"externalValue\": \"CaptureRequest-example3.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"capture"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "9b49695f-a8e4-4b01-a482-6605d700316b",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Capture call for a merchant with identifier and airline data once a ticket has been issued\",\n  \"externalValue\": \"CaptureRequest-example3.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"capture"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Charge",
					"id": "328b2dad-ba92-45f9-9482-1ca22f3e76a0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\",\n  \"avs_postcode_policy\": \"ex\",\n  \"cardholder_agreement\": \"\",\n  \"csc\": \"qui \",\n  \"csc_policy\": \"qui ut\",\n  \"currency\": \"GBP\",\n  \"duplicate_policy\": \"Duis conse\",\n  \"initiation\": \"\",\n  \"match_avsa\": \"sit ut do dolore cillum\",\n  \"threedsecure\": {\n    \"accept_headers\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n    \"browserColorDepth\": \"adipisicing reprehenderit\",\n    \"browserIP\": \"consequat nisi aliquip\",\n    \"browserJavaEnabled\": \"nisi velit consequat\",\n    \"browserLanguage\": \"exercitation sint ex\",\n    \"browserScreenHeight\": \"esse mollit do reprehenderit\",\n    \"browserScreenWidth\": \"consequat amet pariatur anim Lorem\",\n    \"browserTZ\": \"minim sed\",\n    \"cp_bx\": \"FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx...\",\n    \"downgrade1\": false,\n    \"merchant_termurl\": \"https://mysite.com/acs/return\",\n    \"tds_policy\": \"labore\",\n    \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36\"\n  },\n  \"trans_info\": \"irure consequat pariatur\",\n  \"trans_type\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v6/charge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"charge"
							]
						},
						"description": "A charge process obtains an authorisation using a tokenised value which represents a stored card \non a card holder account. \nA card must previously be registered by calling `/account-register-card` with the card details \nor retrieved using `/account-retrieve`\n\nTokens are generated whenever a previously registered list of cards are retrieved. Each token has, by design a \nrelatively short time to live of 30 minutes. This is both to safe guard the merchant and card holder from \nreplay attacks. Tokens are also restricted to your account, preventing malicious actors from stealing details\nfor use elsewhere.  \n\nIf a token is reused after it has expired it will be rejected and a new token will be required.\n \nTokenisation can be used for\n \n- repeat authorisations on a previously stored card\n- easy authorisations just requiring CSC values to be entered\n- can be used for credential on file style payments\n- can require full 3-D Secure authentication to retain the liability shift\n- wallet style usage\n \n\n_Should an account be used with 3DSv2, the card holder name should also be stored alongside the card as this is a\nrequired field with both Visa and MasterCard for risk analysis._.\n"
					},
					"response": [
						{
							"id": "8b59f3db-6380-4109-9977-81848e55cfcf",
							"name": "A decision met by the result of the charge.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\",\n  \"avs_postcode_policy\": \"ex\",\n  \"cardholder_agreement\": \"\",\n  \"csc\": \"qui \",\n  \"csc_policy\": \"qui ut\",\n  \"currency\": \"GBP\",\n  \"duplicate_policy\": \"Duis conse\",\n  \"initiation\": \"\",\n  \"match_avsa\": \"sit ut do dolore cillum\",\n  \"threedsecure\": {\n    \"accept_headers\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n    \"browserColorDepth\": \"adipisicing reprehenderit\",\n    \"browserIP\": \"consequat nisi aliquip\",\n    \"browserJavaEnabled\": \"nisi velit consequat\",\n    \"browserLanguage\": \"exercitation sint ex\",\n    \"browserScreenHeight\": \"esse mollit do reprehenderit\",\n    \"browserScreenWidth\": \"consequat amet pariatur anim Lorem\",\n    \"browserTZ\": \"minim sed\",\n    \"cp_bx\": \"FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx...\",\n    \"downgrade1\": false,\n    \"merchant_termurl\": \"https://mysite.com/acs/return\",\n    \"tds_policy\": \"labore\",\n    \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36\"\n  },\n  \"trans_info\": \"irure consequat pariatur\",\n  \"trans_type\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/charge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"charge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"AuthenRequired\": {\n    \"acs_url\": \"https://acs.cardissuer.com/3dsv1\",\n    \"md\": \"eiusmod velit\",\n    \"pareq\": \"eNrNWdnOo0qSfpXSmUuf0+w2tFy/lOyYxYDZ79h3sAEbm6cfbFfV+bu6pqe7R2qNJeQkiIwlMyK+...\"\n  },\n  \"AuthResponse\": {\n    \"merchantid\": 11223344,\n    \"result\": 1,\n    \"result_code\": \"sunt est ea\",\n    \"result_message\": \"Accepted Transaction\",\n    \"amount\": 3600,\n    \"atrn\": \"fugiat cupidat\",\n    \"atsd\": \"Ut adipisicing irure\",\n    \"authcode\": \"001245A\",\n    \"authen_result\": \"sit magna\",\n    \"authorised\": true,\n    \"avs_result\": \"non dolore nostrud nisi\",\n    \"bin_commercial\": true,\n    \"bin_debit\": false,\n    \"bin_description\": \"Platinum Card\",\n    \"cavv\": \"ullamco consectetur qui\",\n    \"context\": \"aspiu352908ns47n343598bads\",\n    \"csc_result\": \"consequat dolore enim\",\n    \"currency\": \"GBP\",\n    \"datetime\": \"2020-01-02T18:32:28Z\",\n    \"eci\": \"velit exercitation ullamco consequat\",\n    \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n    \"live\": true,\n    \"maskedpan\": \"4***********0002\",\n    \"scheme\": \"Visa\",\n    \"sha256\": \"deserunt\",\n    \"trans_status\": \"deserunt veniam Duis\",\n    \"transno\": 78416\n  },\n  \"RequestChallenged\": {\n    \"acs_url\": \"https://acs.cardissuer.com/3dsv1\",\n    \"creq\": \"ut sed sunt\",\n    \"merchantid\": 11223344,\n    \"threedserver_trans_id\": \"Lorem dol\",\n    \"transno\": 78416\n  }\n}"
						},
						{
							"id": "a96ee7aa-4937-4a4b-a8b9-1a8705bd1574",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\",\n  \"avs_postcode_policy\": \"ex\",\n  \"cardholder_agreement\": \"\",\n  \"csc\": \"qui \",\n  \"csc_policy\": \"qui ut\",\n  \"currency\": \"GBP\",\n  \"duplicate_policy\": \"Duis conse\",\n  \"initiation\": \"\",\n  \"match_avsa\": \"sit ut do dolore cillum\",\n  \"threedsecure\": {\n    \"accept_headers\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n    \"browserColorDepth\": \"adipisicing reprehenderit\",\n    \"browserIP\": \"consequat nisi aliquip\",\n    \"browserJavaEnabled\": \"nisi velit consequat\",\n    \"browserLanguage\": \"exercitation sint ex\",\n    \"browserScreenHeight\": \"esse mollit do reprehenderit\",\n    \"browserScreenWidth\": \"consequat amet pariatur anim Lorem\",\n    \"browserTZ\": \"minim sed\",\n    \"cp_bx\": \"FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx...\",\n    \"downgrade1\": false,\n    \"merchant_termurl\": \"https://mysite.com/acs/return\",\n    \"tds_policy\": \"labore\",\n    \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36\"\n  },\n  \"trans_info\": \"irure consequat pariatur\",\n  \"trans_type\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/charge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"charge"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "cf3911eb-0df7-48bc-8add-411c8705460f",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\",\n  \"avs_postcode_policy\": \"ex\",\n  \"cardholder_agreement\": \"\",\n  \"csc\": \"qui \",\n  \"csc_policy\": \"qui ut\",\n  \"currency\": \"GBP\",\n  \"duplicate_policy\": \"Duis conse\",\n  \"initiation\": \"\",\n  \"match_avsa\": \"sit ut do dolore cillum\",\n  \"threedsecure\": {\n    \"accept_headers\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n    \"browserColorDepth\": \"adipisicing reprehenderit\",\n    \"browserIP\": \"consequat nisi aliquip\",\n    \"browserJavaEnabled\": \"nisi velit consequat\",\n    \"browserLanguage\": \"exercitation sint ex\",\n    \"browserScreenHeight\": \"esse mollit do reprehenderit\",\n    \"browserScreenWidth\": \"consequat amet pariatur anim Lorem\",\n    \"browserTZ\": \"minim sed\",\n    \"cp_bx\": \"FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx...\",\n    \"downgrade1\": false,\n    \"merchant_termurl\": \"https://mysite.com/acs/return\",\n    \"tds_policy\": \"labore\",\n    \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36\"\n  },\n  \"trans_info\": \"irure consequat pariatur\",\n  \"trans_type\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/charge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"charge"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "0c29374c-0e3f-49c8-ab24-7a87f897304a",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\",\n  \"avs_postcode_policy\": \"ex\",\n  \"cardholder_agreement\": \"\",\n  \"csc\": \"qui \",\n  \"csc_policy\": \"qui ut\",\n  \"currency\": \"GBP\",\n  \"duplicate_policy\": \"Duis conse\",\n  \"initiation\": \"\",\n  \"match_avsa\": \"sit ut do dolore cillum\",\n  \"threedsecure\": {\n    \"accept_headers\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n    \"browserColorDepth\": \"adipisicing reprehenderit\",\n    \"browserIP\": \"consequat nisi aliquip\",\n    \"browserJavaEnabled\": \"nisi velit consequat\",\n    \"browserLanguage\": \"exercitation sint ex\",\n    \"browserScreenHeight\": \"esse mollit do reprehenderit\",\n    \"browserScreenWidth\": \"consequat amet pariatur anim Lorem\",\n    \"browserTZ\": \"minim sed\",\n    \"cp_bx\": \"FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx...\",\n    \"downgrade1\": false,\n    \"merchant_termurl\": \"https://mysite.com/acs/return\",\n    \"tds_policy\": \"labore\",\n    \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36\"\n  },\n  \"trans_info\": \"irure consequat pariatur\",\n  \"trans_type\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/charge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"charge"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "a68f1210-b1cd-4a06-b0a0-c97f2eda8d49",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\",\n  \"avs_postcode_policy\": \"ex\",\n  \"cardholder_agreement\": \"\",\n  \"csc\": \"qui \",\n  \"csc_policy\": \"qui ut\",\n  \"currency\": \"GBP\",\n  \"duplicate_policy\": \"Duis conse\",\n  \"initiation\": \"\",\n  \"match_avsa\": \"sit ut do dolore cillum\",\n  \"threedsecure\": {\n    \"accept_headers\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n    \"browserColorDepth\": \"adipisicing reprehenderit\",\n    \"browserIP\": \"consequat nisi aliquip\",\n    \"browserJavaEnabled\": \"nisi velit consequat\",\n    \"browserLanguage\": \"exercitation sint ex\",\n    \"browserScreenHeight\": \"esse mollit do reprehenderit\",\n    \"browserScreenWidth\": \"consequat amet pariatur anim Lorem\",\n    \"browserTZ\": \"minim sed\",\n    \"cp_bx\": \"FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx...\",\n    \"downgrade1\": false,\n    \"merchant_termurl\": \"https://mysite.com/acs/return\",\n    \"tds_policy\": \"labore\",\n    \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36\"\n  },\n  \"trans_info\": \"irure consequat pariatur\",\n  \"trans_type\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/charge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"charge"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "c5aeb79c-5ec1-401e-bc20-0898bdc8dce1",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"token\": \"ctPCAPyNyCkx3Ry8wGyv8khC3ch2hUSB3Db..Qzr\",\n  \"avs_postcode_policy\": \"ex\",\n  \"cardholder_agreement\": \"\",\n  \"csc\": \"qui \",\n  \"csc_policy\": \"qui ut\",\n  \"currency\": \"GBP\",\n  \"duplicate_policy\": \"Duis conse\",\n  \"initiation\": \"\",\n  \"match_avsa\": \"sit ut do dolore cillum\",\n  \"threedsecure\": {\n    \"accept_headers\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n    \"browserColorDepth\": \"adipisicing reprehenderit\",\n    \"browserIP\": \"consequat nisi aliquip\",\n    \"browserJavaEnabled\": \"nisi velit consequat\",\n    \"browserLanguage\": \"exercitation sint ex\",\n    \"browserScreenHeight\": \"esse mollit do reprehenderit\",\n    \"browserScreenWidth\": \"consequat amet pariatur anim Lorem\",\n    \"browserTZ\": \"minim sed\",\n    \"cp_bx\": \"FjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAx...\",\n    \"downgrade1\": false,\n    \"merchant_termurl\": \"https://mysite.com/acs/return\",\n    \"tds_policy\": \"labore\",\n    \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36\"\n  },\n  \"trans_info\": \"irure consequat pariatur\",\n  \"trans_type\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/charge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"charge"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "CRes",
					"id": "284e35f6-1e46-4a75-a393-972345391d2e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"CResRequest-example1.json\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v6/cres",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"cres"
							]
						},
						"description": "The CRes request performs authorisation processing once a challenge request has been completed\nwith an Authentication Server (ACS). This challenge response contains confirmation that will\nallow the API systems to return an authorisation response based on the result. Our systems will \nknow out of band via an `RReq` call by the ACS to notify us if the liability shift has been issued.\n\nAny call to the CRes operation will require a previous authorisation request and cannot be called \non its own without a previous [request challenge](#requestchallenged) being obtained.\n"
					},
					"response": [
						{
							"id": "d873f9f6-4d33-4757-8dcc-7b2bb17100d8",
							"name": "A result of processing the 3DSv2 authorisation data.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"CResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/cres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"cres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"merchantid\": 11223344,\n  \"result\": 1,\n  \"result_code\": \"nostrud sit mollit\",\n  \"result_message\": \"Accepted Transaction\",\n  \"amount\": 3600,\n  \"atrn\": \"pariatur velit anim\",\n  \"atsd\": \"Lorem cillum elit reprehenderit\",\n  \"authcode\": \"001245A\",\n  \"authen_result\": \"aliqua ullamco quis adipisicing eiusmod\",\n  \"authorised\": true,\n  \"avs_result\": \"pariatur non est quis voluptate\",\n  \"bin_commercial\": true,\n  \"bin_debit\": true,\n  \"bin_description\": \"Platinum Card\",\n  \"cavv\": \"dolore anim\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"csc_result\": \"consectetur sunt\",\n  \"currency\": \"GBP\",\n  \"datetime\": \"2020-01-02T18:32:28Z\",\n  \"eci\": \"dolore aute veniam culpa labore\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"live\": true,\n  \"maskedpan\": \"4***********0002\",\n  \"scheme\": \"Visa\",\n  \"sha256\": \"anim aliquip proident consequat commodo\",\n  \"trans_status\": \"velit\",\n  \"transno\": 78416\n}"
						},
						{
							"id": "4f906c99-ca0e-4c92-9eb3-6246e7e5c56d",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"CResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/cres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"cres"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "2eed13d3-ae29-43e8-877b-d3d7cc5c7e63",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"CResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/cres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"cres"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "32d18741-9479-42a8-9a5a-e2370c421964",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"CResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/cres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"cres"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "0e955103-b776-419a-9f05-b04fc619bab5",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"CResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/cres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"cres"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "b99b6367-5ece-4242-95b2-318a8365970a",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"CResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/cres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"cres"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Merchants Request",
					"id": "81261ff4-c6f1-49e7-8855-c4c4fbd72bb6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v6/merchants/:clientid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"merchants",
								":clientid"
							],
							"variable": [
								{
									"key": "clientid",
									"value": "velit dolor",
									"description": "(Required) The client id to return merchants for, specifying \"default\" will use the value in your api key."
								}
							]
						},
						"description": "An operational request to list current merchants for a client.\n\n### Sorting\n\nSorting can be performed by include a query parameter i.e. `/merchants/?sort=merchantid`\n\nFields that can be sorted are `merchantid` or `name`.\n"
					},
					"response": [
						{
							"id": "2e9d5e27-6858-46d4-8db7-4e83429688e1",
							"name": "A list of merchants that are configured against the client id.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/merchants/:clientid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"merchants",
										":clientid"
									],
									"variable": [
										{
											"key": "clientid",
											"value": "velit dolor",
											"description": "(Required) The client id to return merchants for, specifying \"default\" will use the value in your api key."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"client_name\": \"anim sunt aliqua minim\",\n  \"clientid\": \"PC12345\",\n  \"merchants\": [\n    {\n      \"currency\": \"GBP\",\n      \"merchantid\": 11223344,\n      \"name\": \"Merchant 1\",\n      \"status\": \"A\",\n      \"status_label\": \"Active\"\n    },\n    {\n      \"currency\": \"GBP\",\n      \"merchantid\": 11223344,\n      \"name\": \"Merchant 1\",\n      \"status\": \"A\",\n      \"status_label\": \"Active\"\n    }\n  ]\n}"
						},
						{
							"id": "7abb4a37-0201-4899-b2bf-2f87b13141df",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/merchants/:clientid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"merchants",
										":clientid"
									],
									"variable": [
										{
											"key": "clientid",
											"value": "velit dolor",
											"description": "(Required) The client id to return merchants for, specifying \"default\" will use the value in your api key."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "13f6e0ba-189c-4dbe-aed8-9cdeca7002ca",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/merchants/:clientid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"merchants",
										":clientid"
									],
									"variable": [
										{
											"key": "clientid",
											"value": "velit dolor",
											"description": "(Required) The client id to return merchants for, specifying \"default\" will use the value in your api key."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "1a652f9e-2e67-4c14-ba67-f172d871ffbd",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/merchants/:clientid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"merchants",
										":clientid"
									],
									"variable": [
										{
											"key": "clientid",
											"value": "velit dolor",
											"description": "(Required) The client id to return merchants for, specifying \"default\" will use the value in your api key."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ed9a0328-a97e-437b-a00b-03791b443bd1",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/merchants/:clientid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"merchants",
										":clientid"
									],
									"variable": [
										{
											"key": "clientid",
											"value": "velit dolor",
											"description": "(Required) The client id to return merchants for, specifying \"default\" will use the value in your api key."
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "9754abc4-d036-44f1-9db5-ab6cbd61d78e",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v6/merchants/:clientid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"merchants",
										":clientid"
									],
									"variable": [
										{
											"key": "clientid",
											"value": "velit dolor",
											"description": "(Required) The client id to return merchants for, specifying \"default\" will use the value in your api key."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "PaRes",
					"id": "85a51e84-63ca-4623-9bd9-fc70b12e2c90",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"PaResRequest-example1.json\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v6/pares",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"pares"
							]
						},
						"description": "The Payer Authentication Response (PaRes) is an operation after the result of authentication \n being performed. The request uses an encoded packet of authentication data to \nnotify us of the completion of the liability shift. Once this value has been unpacked and its\nsignature is checked, our systems will proceed to authorisation processing.  \n\nAny call to the PaRes operation will require a previous authorisation request and cannot be called \non its own without a previous [authentication required](#authenticationrequired)  being obtained.\n"
					},
					"response": [
						{
							"id": "276815b7-f7e3-4957-8b68-92aa7deaaee6",
							"name": "A result of processing the 3DSv1 authorisation data.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"PaResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/pares",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"pares"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"merchantid\": 11223344,\n  \"result\": 1,\n  \"result_code\": \"nostrud sit mollit\",\n  \"result_message\": \"Accepted Transaction\",\n  \"amount\": 3600,\n  \"atrn\": \"pariatur velit anim\",\n  \"atsd\": \"Lorem cillum elit reprehenderit\",\n  \"authcode\": \"001245A\",\n  \"authen_result\": \"aliqua ullamco quis adipisicing eiusmod\",\n  \"authorised\": true,\n  \"avs_result\": \"pariatur non est quis voluptate\",\n  \"bin_commercial\": true,\n  \"bin_debit\": true,\n  \"bin_description\": \"Platinum Card\",\n  \"cavv\": \"dolore anim\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"csc_result\": \"consectetur sunt\",\n  \"currency\": \"GBP\",\n  \"datetime\": \"2020-01-02T18:32:28Z\",\n  \"eci\": \"dolore aute veniam culpa labore\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"live\": true,\n  \"maskedpan\": \"4***********0002\",\n  \"scheme\": \"Visa\",\n  \"sha256\": \"anim aliquip proident consequat commodo\",\n  \"trans_status\": \"velit\",\n  \"transno\": 78416\n}"
						},
						{
							"id": "2d16485c-2760-4d44-93fa-825cd9fd1c0b",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"PaResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/pares",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"pares"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "d756ba6e-f438-4905-9ee9-a427a931019b",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"PaResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/pares",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"pares"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "0eca723c-7e1b-473d-b30e-d71885059454",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"PaResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/pares",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"pares"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ca1b4762-4d62-4ef3-bb1b-c3c2081e822f",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"PaResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/pares",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"pares"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "c22ed151-40ca-4749-96e2-f0fb6843f793",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"PaRes example request\",\n  \"externalValue\": \"PaResRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/pares",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"pares"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Ping Request",
					"id": "c12137af-42f3-493f-9cb3-cfd1f1db379f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "identifier",
									"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95",
									"description": "An identifier of the ping request which will be returned in the response."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/v6/ping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"ping"
							]
						},
						"description": "A ping request which performs a connection and authentication test to the CityPay API server. The request\nwill return a standard Acknowledgement with a response code `044` to signify a successful\nping.\n\nThe ping call is useful to confirm that you will be able to access \nthe API from behind any firewalls and that the permission\nmodel is granting access from your source.\n"
					},
					"response": [
						{
							"id": "fd482752-048e-4d54-9c0b-3de14297cf24",
							"name": "A result of the ping request, returning on 044 response code on successful receipt of the ping request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "An identifier of the ping request which will be returned in the response.",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v6/ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"ping"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
						},
						{
							"id": "fa6f77a3-3b49-45c3-af0a-70e5a01fafae",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "An identifier of the ping request which will be returned in the response.",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v6/ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"ping"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "1897d572-666f-44dd-90c2-376c528a2038",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "An identifier of the ping request which will be returned in the response.",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v6/ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"ping"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ba1792d8-892c-4867-997e-99e948f0a502",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "An identifier of the ping request which will be returned in the response.",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v6/ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"ping"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "67d61b1f-759b-4146-a282-2b08a0b816ac",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "An identifier of the ping request which will be returned in the response.",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v6/ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"ping"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "af20493e-5ba6-490a-b5fe-5f619397fcbd",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "An identifier of the ping request which will be returned in the response.",
											"key": "identifier",
											"value": "95b857a1-5955-4b86-963c-5a6dbfc4fb95"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v6/ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"ping"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Refund",
					"id": "1acf1b3f-87e2-4c6d-9b80-432cd7b4c1e1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"refund_ref\": 8322,\n  \"trans_info\": \"Lorem consectetur sit Duis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v6/refund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"refund"
							]
						},
						"description": "A refund request which allows for the refunding of a previous transaction up \nand to the amount of the original sale. A refund will be performed against the \noriginal card used to process the transaction.\n"
					},
					"response": [
						{
							"id": "a91a8fad-a67c-4e0a-a348-b135c204b52a",
							"name": "A result of the refund of sale processing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"refund_ref\": 8322,\n  \"trans_info\": \"Lorem consectetur sit Duis\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/refund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"refund"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"merchantid\": 11223344,\n  \"result\": 1,\n  \"result_code\": \"nostrud sit mollit\",\n  \"result_message\": \"Accepted Transaction\",\n  \"amount\": 3600,\n  \"atrn\": \"pariatur velit anim\",\n  \"atsd\": \"Lorem cillum elit reprehenderit\",\n  \"authcode\": \"001245A\",\n  \"authen_result\": \"aliqua ullamco quis adipisicing eiusmod\",\n  \"authorised\": true,\n  \"avs_result\": \"pariatur non est quis voluptate\",\n  \"bin_commercial\": true,\n  \"bin_debit\": true,\n  \"bin_description\": \"Platinum Card\",\n  \"cavv\": \"dolore anim\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"csc_result\": \"consectetur sunt\",\n  \"currency\": \"GBP\",\n  \"datetime\": \"2020-01-02T18:32:28Z\",\n  \"eci\": \"dolore aute veniam culpa labore\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"live\": true,\n  \"maskedpan\": \"4***********0002\",\n  \"scheme\": \"Visa\",\n  \"sha256\": \"anim aliquip proident consequat commodo\",\n  \"trans_status\": \"velit\",\n  \"transno\": 78416\n}"
						},
						{
							"id": "8cfc155d-1888-43d3-ac35-48c9a402ee6e",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"refund_ref\": 8322,\n  \"trans_info\": \"Lorem consectetur sit Duis\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/refund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"refund"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "f8248c02-065d-4cd2-833d-06cc3072dc17",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"refund_ref\": 8322,\n  \"trans_info\": \"Lorem consectetur sit Duis\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/refund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"refund"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "a1d34c94-c611-428e-96df-179be63f5319",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"refund_ref\": 8322,\n  \"trans_info\": \"Lorem consectetur sit Duis\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/refund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"refund"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "85806f68-12b4-4147-9f85-95d476e43979",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"refund_ref\": 8322,\n  \"trans_info\": \"Lorem consectetur sit Duis\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/refund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"refund"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "0df7f4f5-b74c-49bc-b3a8-58f83bfecec7",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 3600,\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"merchantid\": 11223344,\n  \"refund_ref\": 8322,\n  \"trans_info\": \"Lorem consectetur sit Duis\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/refund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"refund"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieval",
					"id": "d1141d2e-50e9-4abe-abf4-8f8fc097949f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"summary\": \"Basic retrieval call for a merchant with a given identifier\",\n  \"externalValue\": \"RetrievalRequest-example1.json\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v6/retrieve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"retrieve"
							]
						},
						"description": "A retrieval request which allows an integration to obtain the result of a transaction processed\nin the last 90 days. The request allows for retrieval based on the identifier or transaction \nnumber. \n\nThe process may return multiple results in particular where a transaction was processed multiple\ntimes against the same identifier. This can happen if errors were first received. The API therefore\nreturns up to the first 5 transactions in the latest date time order.\n\nIt is not intended for this operation to be a replacement for reporting and only allows for base transaction\ninformation to be returned.\n"
					},
					"response": [
						{
							"id": "506928fe-bac2-4a87-b998-6b9ad3b55850",
							"name": "A result of the retrieval request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic retrieval call for a merchant with a given identifier\",\n  \"externalValue\": \"RetrievalRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/retrieve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"retrieve"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"auths\": [\n    {\n      \"amount\": \"Lorem\",\n      \"amount_value\": 3600,\n      \"atrn\": \"nisi laborum veniam ad\",\n      \"authcode\": \"001245A\",\n      \"batchno\": \"consequat magna Duis\",\n      \"currency\": \"GBP\",\n      \"datetime\": \"2020-01-02T18:32:28Z\",\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"maskedpan\": \"4***********0002\",\n      \"merchantid\": 11223344,\n      \"result\": \"laboris id culpa\",\n      \"trans_status\": \"ullamco mollit\",\n      \"trans_type\": \"\",\n      \"transno\": 78416\n    },\n    {\n      \"amount\": \"culpa \",\n      \"amount_value\": 3600,\n      \"atrn\": \"anim enim in ad\",\n      \"authcode\": \"001245A\",\n      \"batchno\": \"commodo Excepteur\",\n      \"currency\": \"GBP\",\n      \"datetime\": \"2020-01-02T18:32:28Z\",\n      \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n      \"maskedpan\": \"4***********0002\",\n      \"merchantid\": 11223344,\n      \"result\": \"elit culpa\",\n      \"trans_status\": \"esse quis\",\n      \"trans_type\": \"\",\n      \"transno\": 78416\n    }\n  ]\n}"
						},
						{
							"id": "4dcc2075-0cf8-43e9-b04f-00b3f5f75b7d",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic retrieval call for a merchant with a given identifier\",\n  \"externalValue\": \"RetrievalRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/retrieve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"retrieve"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ed7f1d33-0566-49bf-8f29-769463b5d5a0",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic retrieval call for a merchant with a given identifier\",\n  \"externalValue\": \"RetrievalRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/retrieve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"retrieve"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "2ddad4a5-27e9-46ab-a5c3-ca31bbd6a802",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic retrieval call for a merchant with a given identifier\",\n  \"externalValue\": \"RetrievalRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/retrieve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"retrieve"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "6246c277-eea5-4725-9713-3eaa758b4ba0",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic retrieval call for a merchant with a given identifier\",\n  \"externalValue\": \"RetrievalRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/retrieve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"retrieve"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "a27d3d1c-bb63-42c4-894c-5468c6345d54",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic retrieval call for a merchant with a given identifier\",\n  \"externalValue\": \"RetrievalRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/retrieve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"retrieve"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Void",
					"id": "487a925c-82c6-4c78-bffb-2e1891bbcfc8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "cp-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"VoidRequest-example1.json\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v6/void",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v6",
								"void"
							]
						},
						"description": "_The void process generally applies to transactions which have been pre-authorised only however voids can occur \non the same day if performed before batching and settlement._ \n\nThe void process will ensure that a transaction will now settle. It is expected that a void call will be \nprovided on the same day before batching and settlement or within 3 days or within a maximum of 7 days.\n\nOnce the transaction has been processed as a void, an [`Acknowledgement`](#acknowledgement) will be returned,\noutlining the result of the transaction.\n"
					},
					"response": [
						{
							"id": "2db5c681-ce1d-4cf5-93cb-82071167eba1",
							"name": "</br>A result and acknowledgement of the void request, returning an `080/003` response code on successful void/cancellation of the transaction.</br></br>If an error occurs an error code will be returned explaining the failure.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"VoidRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/void",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"void"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"occa\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\"\n}"
						},
						{
							"id": "bfe841b2-6866-48b4-9b3c-af03c040ff45",
							"name": "Bad Request. Should the incoming data not be validly determined.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"VoidRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/void",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"void"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "df48b5d4-4254-4edb-8fbe-b51e6a088e4d",
							"name": "Unauthorized. No api key has been provided and is required for this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"VoidRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/void",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"void"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "e914a949-59c6-437b-82bf-6614dca2bd81",
							"name": "Forbidden. The api key was provided and understood but is either incorrect or does not have permission to access the account provided on the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"VoidRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/void",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"void"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "5d0c1867-da27-4a2b-a226-4e61697794e4",
							"name": "Unprocessable Entity. Should a failure occur that prevents processing of the API call.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"VoidRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/void",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"void"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"cill\",\n  \"context\": \"aspiu352908ns47n343598bads\",\n  \"identifier\": \"95b857a1-5955-4b86-963c-5a6dbfc4fb95\",\n  \"message\": \"Approved 044332\",\n  \"response_dt\": \"2020-01-02T18:32:28Z\"\n}"
						},
						{
							"id": "668e0474-a99c-4435-b5f4-6b119f2c2d23",
							"name": "Server Error. The server was unable to complete the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "cp-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Basic capture call for a merchant with a given identifier\",\n  \"externalValue\": \"VoidRequest-example1.json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v6/void",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v6",
										"void"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "94b729a6-68df-4b5c-9452-bdb780352931"
		}
	],
	"auth": {
		"type": "apikey"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "68de2834-3bce-4199-a048-0d4d5af63ede",
				"type": "text/javascript",
				"exec": [
					"require('crypto-js');",
					"",
					"function dtToBuffer(dt) {",
					"    const pad2 = n => n < 10 ? '0' + n : n;",
					"    // format as yyyyMMddHHmm",
					"    const dtstr = [dt.getUTCFullYear(), dt.getUTCMonth() + 1, dt.getUTCDate(), dt.getUTCHours(), dt.getUTCMinutes()].map(pad2).join(\"\");",
					"    console.log(\"KeyDTStr: \" + dtstr)",
					"    return Buffer.from(dtstr, \"hex\")",
					"}",
					"",
					"function generateApiKey(clientId, licenceKey, nonce, dt = new Date()) {",
					"    if (!nonce) {",
					"        nonce = CryptoJS.lib.WordArray.random(128 / 8);",
					"    } else if (typeof nonce === 'string') {",
					"        nonce = CryptoJS.enc.Hex.parse(nonce);",
					"    } else {",
					"        throw new Error(\"Unsupported nonce type\");",
					"    }",
					"    console.log(\"Nonce: \" + nonce.toString(CryptoJS.enc.Hex).toUpperCase())",
					"    const msg = CryptoJS.enc.Utf8.parse(clientId)",
					"        .concat(nonce)",
					"        .concat(CryptoJS.lib.WordArray.create(dtToBuffer(dt)));",
					"    const hash = CryptoJS.HmacSHA256(msg, CryptoJS.enc.Utf8.parse(licenceKey));",
					"    const packet = CryptoJS.enc.Utf8.parse(clientId + '\\u003A' + nonce.toString(CryptoJS.enc.Hex).toUpperCase() + '\\u003A').concat(hash);",
					"    return CryptoJS.enc.Base64.stringify(packet);",
					"}",
					"",
					"var client_id = pm.variables.get(\"client_id\");",
					"var licence_key = pm.variables.get(\"licence_key\");",
					"",
					"var api_key = generateApiKey(client_id, licence_key);",
					"var data = { key: \"cp-api-key\", value: api_key };",
					"console.log(data);",
					"pm.request.headers.upsert(data);",
					"",
					"function uuidv4() {",
					"  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
					"    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);",
					"    return v.toString(16);",
					"  });",
					"}",
					"",
					"postman.setEnvironmentVariable(\"identifier\", uuidv4());",
					"",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a8d83711-00d0-4fa3-b06d-5d39b7396d0d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "feb5c7bd-df4d-4826-8d48-c68afe84ce42",
			"key": "baseUrl",
			"value": "https://api.citypay.com",
			"type": "string"
		}
	]
}